{"ast":null,"code":"import { beADate, getEpoch } from '../fns.js';\n\nconst addMethods = SpaceTime => {\n  const methods = {\n    isAfter: function (d) {\n      d = beADate(d, this);\n      let epoch = getEpoch(d);\n\n      if (epoch === null) {\n        return null;\n      }\n\n      return this.epoch > epoch;\n    },\n    isBefore: function (d) {\n      d = beADate(d, this);\n      let epoch = getEpoch(d);\n\n      if (epoch === null) {\n        return null;\n      }\n\n      return this.epoch < epoch;\n    },\n    isEqual: function (d) {\n      d = beADate(d, this);\n      let epoch = getEpoch(d);\n\n      if (epoch === null) {\n        return null;\n      }\n\n      return this.epoch === epoch;\n    },\n    isBetween: function (start, end) {\n      let isInclusive = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n      start = beADate(start, this);\n      end = beADate(end, this);\n      let startEpoch = getEpoch(start);\n\n      if (startEpoch === null) {\n        return null;\n      }\n\n      let endEpoch = getEpoch(end);\n\n      if (endEpoch === null) {\n        return null;\n      }\n\n      if (isInclusive) {\n        return this.isBetween(start, end) || this.isEqual(start) || this.isEqual(end);\n      }\n\n      return startEpoch < this.epoch && this.epoch < endEpoch;\n    }\n  }; //hook them into proto\n\n  Object.keys(methods).forEach(k => {\n    SpaceTime.prototype[k] = methods[k];\n  });\n};\n\nexport default addMethods;","map":{"version":3,"sources":["E:/React/pos-system/main/node_modules/spacetime/src/methods/compare.js"],"names":["beADate","getEpoch","addMethods","SpaceTime","methods","isAfter","d","epoch","isBefore","isEqual","isBetween","start","end","isInclusive","startEpoch","endEpoch","Object","keys","forEach","k","prototype"],"mappings":"AAAA,SAASA,OAAT,EAAkBC,QAAlB,QAAkC,WAAlC;;AAEA,MAAMC,UAAU,GAAGC,SAAS,IAAI;AAC9B,QAAMC,OAAO,GAAG;AACdC,IAAAA,OAAO,EAAE,UAAUC,CAAV,EAAa;AACpBA,MAAAA,CAAC,GAAGN,OAAO,CAACM,CAAD,EAAI,IAAJ,CAAX;AACA,UAAIC,KAAK,GAAGN,QAAQ,CAACK,CAAD,CAApB;;AACA,UAAIC,KAAK,KAAK,IAAd,EAAoB;AAClB,eAAO,IAAP;AACD;;AACD,aAAO,KAAKA,KAAL,GAAaA,KAApB;AACD,KARa;AASdC,IAAAA,QAAQ,EAAE,UAAUF,CAAV,EAAa;AACrBA,MAAAA,CAAC,GAAGN,OAAO,CAACM,CAAD,EAAI,IAAJ,CAAX;AACA,UAAIC,KAAK,GAAGN,QAAQ,CAACK,CAAD,CAApB;;AACA,UAAIC,KAAK,KAAK,IAAd,EAAoB;AAClB,eAAO,IAAP;AACD;;AACD,aAAO,KAAKA,KAAL,GAAaA,KAApB;AACD,KAhBa;AAiBdE,IAAAA,OAAO,EAAE,UAAUH,CAAV,EAAa;AACpBA,MAAAA,CAAC,GAAGN,OAAO,CAACM,CAAD,EAAI,IAAJ,CAAX;AACA,UAAIC,KAAK,GAAGN,QAAQ,CAACK,CAAD,CAApB;;AACA,UAAIC,KAAK,KAAK,IAAd,EAAoB;AAClB,eAAO,IAAP;AACD;;AACD,aAAO,KAAKA,KAAL,KAAeA,KAAtB;AACD,KAxBa;AAyBdG,IAAAA,SAAS,EAAE,UAAUC,KAAV,EAAiBC,GAAjB,EAA2C;AAAA,UAArBC,WAAqB,uEAAP,KAAO;AACpDF,MAAAA,KAAK,GAAGX,OAAO,CAACW,KAAD,EAAQ,IAAR,CAAf;AACAC,MAAAA,GAAG,GAAGZ,OAAO,CAACY,GAAD,EAAM,IAAN,CAAb;AACA,UAAIE,UAAU,GAAGb,QAAQ,CAACU,KAAD,CAAzB;;AACA,UAAIG,UAAU,KAAK,IAAnB,EAAyB;AACvB,eAAO,IAAP;AACD;;AACD,UAAIC,QAAQ,GAAGd,QAAQ,CAACW,GAAD,CAAvB;;AACA,UAAIG,QAAQ,KAAK,IAAjB,EAAuB;AACrB,eAAO,IAAP;AACD;;AACD,UAAIF,WAAJ,EAAiB;AACf,eAAO,KAAKH,SAAL,CAAeC,KAAf,EAAsBC,GAAtB,KAA8B,KAAKH,OAAL,CAAaE,KAAb,CAA9B,IAAqD,KAAKF,OAAL,CAAaG,GAAb,CAA5D;AACD;;AACD,aAAOE,UAAU,GAAG,KAAKP,KAAlB,IAA2B,KAAKA,KAAL,GAAaQ,QAA/C;AACD;AAxCa,GAAhB,CAD8B,CA4C9B;;AACAC,EAAAA,MAAM,CAACC,IAAP,CAAYb,OAAZ,EAAqBc,OAArB,CAA6BC,CAAC,IAAI;AAChChB,IAAAA,SAAS,CAACiB,SAAV,CAAoBD,CAApB,IAAyBf,OAAO,CAACe,CAAD,CAAhC;AACD,GAFD;AAGD,CAhDD;;AAkDA,eAAejB,UAAf","sourcesContent":["import { beADate, getEpoch } from '../fns.js'\n\nconst addMethods = SpaceTime => {\n  const methods = {\n    isAfter: function (d) {\n      d = beADate(d, this)\n      let epoch = getEpoch(d)\n      if (epoch === null) {\n        return null\n      }\n      return this.epoch > epoch\n    },\n    isBefore: function (d) {\n      d = beADate(d, this)\n      let epoch = getEpoch(d)\n      if (epoch === null) {\n        return null\n      }\n      return this.epoch < epoch\n    },\n    isEqual: function (d) {\n      d = beADate(d, this)\n      let epoch = getEpoch(d)\n      if (epoch === null) {\n        return null\n      }\n      return this.epoch === epoch\n    },\n    isBetween: function (start, end, isInclusive = false) {\n      start = beADate(start, this)\n      end = beADate(end, this)\n      let startEpoch = getEpoch(start)\n      if (startEpoch === null) {\n        return null\n      }\n      let endEpoch = getEpoch(end)\n      if (endEpoch === null) {\n        return null\n      }\n      if (isInclusive) {\n        return this.isBetween(start, end) || this.isEqual(start) || this.isEqual(end);\n      }\n      return startEpoch < this.epoch && this.epoch < endEpoch\n    }\n  }\n\n  //hook them into proto\n  Object.keys(methods).forEach(k => {\n    SpaceTime.prototype[k] = methods[k]\n  })\n}\n\nexport default addMethods\n"]},"metadata":{},"sourceType":"module"}