{"ast":null,"code":"import axios from 'axios';\nconst {\n  api_url\n} = process.env;\nconsole.log(process.env, '##########');\nexport const register = newUser => {\n  return axios.post('users/register', {\n    name: newUser.name,\n    email: newUser.email,\n    password: newUser.password\n  }).then(response => {\n    console.log('Registered');\n  });\n};\nexport const login = user => {\n  return axios.post('users/login', {\n    email: user.email,\n    password: user.password\n  }).then(response => {\n    localStorage.setItem('usertoken', response.data.token);\n    return response.data;\n  }).catch(err => {\n    console.log(err);\n  });\n};\nexport const getProfile = token => {\n  return axios.get('users/profile', {\n    headers: {\n      Authorization: token\n    }\n  }).then(response => {\n    response.data.status = 'success';\n    return response.data;\n  }).catch(err => {\n    console.dir(err);\n    return {\n      'error': err.message,\n      'status': 'failed'\n    };\n  });\n};\nexport const updatePassword = updatePasswordRequest => {\n  return axios.put(`/users/password/`, {\n    email: updatePasswordRequest.email,\n    password: updatePasswordRequest.password,\n    new_password: updatePasswordRequest.new_password\n  }, {\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': updatePasswordRequest.token\n    }\n  }).then(function (response) {\n    return response.data;\n  }).catch(err => {\n    console.dir(\"err\", err);\n    return err.message;\n  });\n};","map":{"version":3,"sources":["E:/React/pos-system/main/src/auth/UserFunction.js"],"names":["axios","api_url","process","env","console","log","register","newUser","post","name","email","password","then","response","login","user","localStorage","setItem","data","token","catch","err","getProfile","get","headers","Authorization","status","dir","message","updatePassword","updatePasswordRequest","put","new_password"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAM;AAAEC,EAAAA;AAAF,IAAcC,OAAO,CAACC,GAA5B;AACAC,OAAO,CAACC,GAAR,CAAaH,OAAO,CAACC,GAArB,EAA0B,YAA1B;AACA,OAAO,MAAMG,QAAQ,GAAGC,OAAO,IAAI;AACjC,SAAOP,KAAK,CACTQ,IADI,CACC,gBADD,EACmB;AACtBC,IAAAA,IAAI,EAAEF,OAAO,CAACE,IADQ;AAEtBC,IAAAA,KAAK,EAAEH,OAAO,CAACG,KAFO;AAGtBC,IAAAA,QAAQ,EAAEJ,OAAO,CAACI;AAHI,GADnB,EAMJC,IANI,CAMCC,QAAQ,IAAI;AAChBT,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACD,GARI,CAAP;AASD,CAVM;AAYP,OAAO,MAAMS,KAAK,GAAGC,IAAI,IAAI;AAC3B,SAAOf,KAAK,CACTQ,IADI,CACC,aADD,EACgB;AACnBE,IAAAA,KAAK,EAAEK,IAAI,CAACL,KADO;AAEnBC,IAAAA,QAAQ,EAAEI,IAAI,CAACJ;AAFI,GADhB,EAKJC,IALI,CAKCC,QAAQ,IAAI;AAChBG,IAAAA,YAAY,CAACC,OAAb,CAAqB,WAArB,EAAkCJ,QAAQ,CAACK,IAAT,CAAcC,KAAhD;AACA,WAAON,QAAQ,CAACK,IAAhB;AACD,GARI,EASJE,KATI,CASEC,GAAG,IAAI;AACZjB,IAAAA,OAAO,CAACC,GAAR,CAAYgB,GAAZ;AACD,GAXI,CAAP;AAYD,CAbM;AAeP,OAAO,MAAMC,UAAU,GAAGH,KAAK,IAAI;AACjC,SAAOnB,KAAK,CACTuB,GADI,CACA,eADA,EACiB;AACpBC,IAAAA,OAAO,EAAE;AAAEC,MAAAA,aAAa,EAAEN;AAAjB;AADW,GADjB,EAIJP,IAJI,CAICC,QAAQ,IAAI;AAChBA,IAAAA,QAAQ,CAACK,IAAT,CAAcQ,MAAd,GAAuB,SAAvB;AACA,WAAOb,QAAQ,CAACK,IAAhB;AACD,GAPI,EAQJE,KARI,CAQEC,GAAG,IAAI;AACZjB,IAAAA,OAAO,CAACuB,GAAR,CAAYN,GAAZ;AACA,WAAO;AAAC,eAAQA,GAAG,CAACO,OAAb;AAAqB,gBAAS;AAA9B,KAAP;AACD,GAXI,CAAP;AAYD,CAbM;AAiBP,OAAO,MAAMC,cAAc,GAAGC,qBAAqB,IAAI;AACrD,SAAO9B,KAAK,CACT+B,GADI,CAEF,kBAFE,EAGH;AACErB,IAAAA,KAAK,EAACoB,qBAAqB,CAACpB,KAD9B;AAEEC,IAAAA,QAAQ,EAAEmB,qBAAqB,CAACnB,QAFlC;AAGEqB,IAAAA,YAAY,EAAEF,qBAAqB,CAACE;AAHtC,GAHG,EAQH;AACER,IAAAA,OAAO,EAAE;AACL,sBAAgB,kBADX;AAEL,uBAAiBM,qBAAqB,CAACX;AAFlC;AADX,GARG,EAeJP,IAfI,CAeC,UAASC,QAAT,EAAmB;AACrB,WAAOA,QAAQ,CAACK,IAAhB;AACH,GAjBI,EAiBFE,KAjBE,CAiBIC,GAAG,IAAE;AACZjB,IAAAA,OAAO,CAACuB,GAAR,CAAY,KAAZ,EAAkBN,GAAlB;AACA,WAAOA,GAAG,CAACO,OAAX;AACD,GApBI,CAAP;AAqBD,CAtBM","sourcesContent":["import axios from 'axios'\r\n\r\nconst { api_url } = process.env\r\nconsole.log( process.env, '##########')\r\nexport const register = newUser => {\r\n  return axios\r\n    .post('users/register', {\r\n      name: newUser.name,\r\n      email: newUser.email,\r\n      password: newUser.password\r\n    })\r\n    .then(response => {\r\n      console.log('Registered')\r\n    })\r\n}\r\n\r\nexport const login = user => {\r\n  return axios\r\n    .post('users/login', {\r\n      email: user.email,\r\n      password: user.password\r\n    })\r\n    .then(response => {\r\n      localStorage.setItem('usertoken', response.data.token)\r\n      return response.data\r\n    })\r\n    .catch(err => {\r\n      console.log(err)\r\n    })\r\n}\r\n\r\nexport const getProfile = token => {\r\n  return axios\r\n    .get('users/profile', {\r\n      headers: { Authorization: token }\r\n    })\r\n    .then(response => {\r\n      response.data.status = 'success';\r\n      return response.data\r\n    })\r\n    .catch(err => {\r\n      console.dir(err)\r\n      return {'error':err.message,'status':'failed'};\r\n    })\r\n}\r\n\r\n\r\n\r\nexport const updatePassword = updatePasswordRequest => {\r\n  return axios\r\n    .put(\r\n      `/users/password/`,\r\n      {\r\n        email:updatePasswordRequest.email,\r\n        password: updatePasswordRequest.password,\r\n        new_password: updatePasswordRequest.new_password\r\n      },\r\n      {\r\n        headers: { \r\n            'Content-Type': 'application/json', \r\n            'Authorization': updatePasswordRequest.token \r\n        }\r\n      }\r\n    )\r\n    .then(function(response) {\r\n        return response.data;\r\n    }).catch(err=>{\r\n      console.dir(\"err\",err);\r\n      return err.message;\r\n    })\r\n}"]},"metadata":{},"sourceType":"module"}