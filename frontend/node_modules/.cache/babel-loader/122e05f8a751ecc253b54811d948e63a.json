{"ast":null,"code":"// 20.2.2.17 Math.hypot([value1[, value2[, … ]]])\nvar $export = require('./$.export'),\n    abs = Math.abs;\n\n$export($export.S, 'Math', {\n  hypot: function hypot(value1, value2) {\n    // eslint-disable-line no-unused-vars\n    var sum = 0,\n        i = 0,\n        $$ = arguments,\n        $$len = $$.length,\n        larg = 0,\n        arg,\n        div;\n\n    while (i < $$len) {\n      arg = abs($$[i++]);\n\n      if (larg < arg) {\n        div = larg / arg;\n        sum = sum * div * div + 1;\n        larg = arg;\n      } else if (arg > 0) {\n        div = arg / larg;\n        sum += div * div;\n      } else sum += arg;\n    }\n\n    return larg === Infinity ? Infinity : larg * Math.sqrt(sum);\n  }\n});","map":{"version":3,"sources":["E:/React/pos-system/frontend/node_modules/babel/node_modules/core-js/modules/es6.math.hypot.js"],"names":["$export","require","abs","Math","S","hypot","value1","value2","sum","i","$$","arguments","$$len","length","larg","arg","div","Infinity","sqrt"],"mappings":"AAAA;AACA,IAAIA,OAAO,GAAGC,OAAO,CAAC,YAAD,CAArB;AAAA,IACIC,GAAG,GAAOC,IAAI,CAACD,GADnB;;AAGAF,OAAO,CAACA,OAAO,CAACI,CAAT,EAAY,MAAZ,EAAoB;AACzBC,EAAAA,KAAK,EAAE,SAASA,KAAT,CAAeC,MAAf,EAAuBC,MAAvB,EAA8B;AAAE;AACrC,QAAIC,GAAG,GAAK,CAAZ;AAAA,QACIC,CAAC,GAAO,CADZ;AAAA,QAEIC,EAAE,GAAMC,SAFZ;AAAA,QAGIC,KAAK,GAAGF,EAAE,CAACG,MAHf;AAAA,QAIIC,IAAI,GAAI,CAJZ;AAAA,QAKIC,GALJ;AAAA,QAKSC,GALT;;AAMA,WAAMP,CAAC,GAAGG,KAAV,EAAgB;AACdG,MAAAA,GAAG,GAAGb,GAAG,CAACQ,EAAE,CAACD,CAAC,EAAF,CAAH,CAAT;;AACA,UAAGK,IAAI,GAAGC,GAAV,EAAc;AACZC,QAAAA,GAAG,GAAIF,IAAI,GAAGC,GAAd;AACAP,QAAAA,GAAG,GAAIA,GAAG,GAAGQ,GAAN,GAAYA,GAAZ,GAAkB,CAAzB;AACAF,QAAAA,IAAI,GAAGC,GAAP;AACD,OAJD,MAIO,IAAGA,GAAG,GAAG,CAAT,EAAW;AAChBC,QAAAA,GAAG,GAAID,GAAG,GAAGD,IAAb;AACAN,QAAAA,GAAG,IAAIQ,GAAG,GAAGA,GAAb;AACD,OAHM,MAGAR,GAAG,IAAIO,GAAP;AACR;;AACD,WAAOD,IAAI,KAAKG,QAAT,GAAoBA,QAApB,GAA+BH,IAAI,GAAGX,IAAI,CAACe,IAAL,CAAUV,GAAV,CAA7C;AACD;AApBwB,CAApB,CAAP","sourcesContent":["// 20.2.2.17 Math.hypot([value1[, value2[, … ]]])\nvar $export = require('./$.export')\n  , abs     = Math.abs;\n\n$export($export.S, 'Math', {\n  hypot: function hypot(value1, value2){ // eslint-disable-line no-unused-vars\n    var sum   = 0\n      , i     = 0\n      , $$    = arguments\n      , $$len = $$.length\n      , larg  = 0\n      , arg, div;\n    while(i < $$len){\n      arg = abs($$[i++]);\n      if(larg < arg){\n        div  = larg / arg;\n        sum  = sum * div * div + 1;\n        larg = arg;\n      } else if(arg > 0){\n        div  = arg / larg;\n        sum += div * div;\n      } else sum += arg;\n    }\n    return larg === Infinity ? Infinity : larg * Math.sqrt(sum);\n  }\n});"]},"metadata":{},"sourceType":"script"}