{"ast":null,"code":"export const parseRangeInputValue = function (utils) {\n  let value = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [null, null];\n  return value.map(date => {\n    if (date === null || !utils.isValid(date)) {\n      return null;\n    }\n\n    return utils.startOfDay(utils.date(date));\n  });\n};\nexport const isRangeValid = (utils, range) => {\n  return Boolean(range && range[0] && range[1] && !utils.isBefore(range[1], range[0]));\n};\nexport const isWithinRange = (utils, day, range) => {\n  return isRangeValid(utils, range) && utils.isWithinRange(day, range);\n};\nexport const isStartOfRange = (utils, day, range) => {\n  return isRangeValid(utils, range) && utils.isSameDay(day, range[0]);\n};\nexport const isEndOfRange = (utils, day, range) => {\n  return isRangeValid(utils, range) && utils.isSameDay(day, range[1]);\n};","map":{"version":3,"sources":["E:/React/pos-system/main/node_modules/@mui/x-date-pickers-pro/internal/utils/date-utils.js"],"names":["parseRangeInputValue","utils","value","map","date","isValid","startOfDay","isRangeValid","range","Boolean","isBefore","isWithinRange","day","isStartOfRange","isSameDay","isEndOfRange"],"mappings":"AAAA,OAAO,MAAMA,oBAAoB,GAAG,UAACC,KAAD;AAAA,MAAQC,KAAR,uEAAgB,CAAC,IAAD,EAAO,IAAP,CAAhB;AAAA,SAAiCA,KAAK,CAACC,GAAN,CAAUC,IAAI,IAAI;AACrF,QAAIA,IAAI,KAAK,IAAT,IAAiB,CAACH,KAAK,CAACI,OAAN,CAAcD,IAAd,CAAtB,EAA2C;AACzC,aAAO,IAAP;AACD;;AAED,WAAOH,KAAK,CAACK,UAAN,CAAiBL,KAAK,CAACG,IAAN,CAAWA,IAAX,CAAjB,CAAP;AACD,GANoE,CAAjC;AAAA,CAA7B;AAOP,OAAO,MAAMG,YAAY,GAAG,CAACN,KAAD,EAAQO,KAAR,KAAkB;AAC5C,SAAOC,OAAO,CAACD,KAAK,IAAIA,KAAK,CAAC,CAAD,CAAd,IAAqBA,KAAK,CAAC,CAAD,CAA1B,IAAiC,CAACP,KAAK,CAACS,QAAN,CAAeF,KAAK,CAAC,CAAD,CAApB,EAAyBA,KAAK,CAAC,CAAD,CAA9B,CAAnC,CAAd;AACD,CAFM;AAGP,OAAO,MAAMG,aAAa,GAAG,CAACV,KAAD,EAAQW,GAAR,EAAaJ,KAAb,KAAuB;AAClD,SAAOD,YAAY,CAACN,KAAD,EAAQO,KAAR,CAAZ,IAA8BP,KAAK,CAACU,aAAN,CAAoBC,GAApB,EAAyBJ,KAAzB,CAArC;AACD,CAFM;AAGP,OAAO,MAAMK,cAAc,GAAG,CAACZ,KAAD,EAAQW,GAAR,EAAaJ,KAAb,KAAuB;AACnD,SAAOD,YAAY,CAACN,KAAD,EAAQO,KAAR,CAAZ,IAA8BP,KAAK,CAACa,SAAN,CAAgBF,GAAhB,EAAqBJ,KAAK,CAAC,CAAD,CAA1B,CAArC;AACD,CAFM;AAGP,OAAO,MAAMO,YAAY,GAAG,CAACd,KAAD,EAAQW,GAAR,EAAaJ,KAAb,KAAuB;AACjD,SAAOD,YAAY,CAACN,KAAD,EAAQO,KAAR,CAAZ,IAA8BP,KAAK,CAACa,SAAN,CAAgBF,GAAhB,EAAqBJ,KAAK,CAAC,CAAD,CAA1B,CAArC;AACD,CAFM","sourcesContent":["export const parseRangeInputValue = (utils, value = [null, null]) => value.map(date => {\n  if (date === null || !utils.isValid(date)) {\n    return null;\n  }\n\n  return utils.startOfDay(utils.date(date));\n});\nexport const isRangeValid = (utils, range) => {\n  return Boolean(range && range[0] && range[1] && !utils.isBefore(range[1], range[0]));\n};\nexport const isWithinRange = (utils, day, range) => {\n  return isRangeValid(utils, range) && utils.isWithinRange(day, range);\n};\nexport const isStartOfRange = (utils, day, range) => {\n  return isRangeValid(utils, range) && utils.isSameDay(day, range[0]);\n};\nexport const isEndOfRange = (utils, day, range) => {\n  return isRangeValid(utils, range) && utils.isSameDay(day, range[1]);\n};"]},"metadata":{},"sourceType":"module"}