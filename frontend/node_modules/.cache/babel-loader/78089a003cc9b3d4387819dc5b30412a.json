{"ast":null,"code":"import { dayOfYear as _dayOfYear, week as _week, month as _month, year as _year } from '../set/set.js';\nimport { long } from '../../data/months.js';\nimport quarters from '../../data/quarters.js';\nimport seasons from '../../data/seasons.js';\nimport ms from '../../data/milliseconds.js';\n\nconst clearMinutes = s => {\n  s = s.minute(0);\n  s = s.second(0);\n  s = s.millisecond(1);\n  return s;\n};\n\nconst methods = {\n  // day 0-366\n  dayOfYear: function (num, goFwd) {\n    if (num !== undefined) {\n      let s = this.clone();\n      s.epoch = _dayOfYear(s, num, goFwd);\n      return s;\n    } //days since newyears - jan 1st is 1, jan 2nd is 2...\n\n\n    let sum = 0;\n    let month = this.d.getMonth();\n    let tmp; //count the num days in each month\n\n    for (let i = 1; i <= month; i++) {\n      tmp = new Date();\n      tmp.setDate(1);\n      tmp.setFullYear(this.d.getFullYear()); //the year matters, because leap-years\n\n      tmp.setHours(1);\n      tmp.setMinutes(1);\n      tmp.setMonth(i);\n      tmp.setHours(-2); //the last day of the month\n\n      sum += tmp.getDate();\n    }\n\n    return sum + this.d.getDate();\n  },\n  //since the start of the year\n  week: function (num, goFwd) {\n    // week-setter\n    if (num !== undefined) {\n      let s = this.clone();\n      s.epoch = _week(this, num, goFwd);\n      s = clearMinutes(s);\n      return s;\n    } //find-out which week it is\n\n\n    let tmp = this.clone();\n    tmp = tmp.month(0);\n    tmp = tmp.date(1);\n    tmp = clearMinutes(tmp);\n    tmp = tmp.day('monday'); //don't go into last-year\n\n    if (tmp.monthName() === 'december' && tmp.date() >= 28) {\n      tmp = tmp.add(1, 'week');\n    } // is first monday the 1st?\n\n\n    let toAdd = 1;\n\n    if (tmp.date() === 1) {\n      toAdd = 0;\n    }\n\n    tmp = tmp.minus(1, 'second');\n    const thisOne = this.epoch; //if the week technically hasn't started yet\n\n    if (tmp.epoch > thisOne) {\n      return 1;\n    } //speed it up, if we can\n\n\n    let i = 0;\n    let skipWeeks = this.month() * 4;\n    tmp.epoch += ms.week * skipWeeks;\n    i += skipWeeks;\n\n    for (; i <= 52; i++) {\n      if (tmp.epoch > thisOne) {\n        return i + toAdd;\n      }\n\n      tmp = tmp.add(1, 'week');\n    }\n\n    return 52;\n  },\n  //either name or number\n  month: function (input, goFwd) {\n    if (input !== undefined) {\n      let s = this.clone();\n      s.epoch = _month(s, input, goFwd);\n      return s;\n    }\n\n    return this.d.getMonth();\n  },\n  //'january'\n  monthName: function (input, goFwd) {\n    if (input !== undefined) {\n      let s = this.clone();\n      s = s.month(input, goFwd);\n      return s;\n    }\n\n    return long()[this.month()];\n  },\n  //q1, q2, q3, q4\n  quarter: function (num, goFwd) {\n    if (num !== undefined) {\n      if (typeof num === 'string') {\n        num = num.replace(/^q/i, '');\n        num = parseInt(num, 10);\n      }\n\n      if (quarters[num]) {\n        let s = this.clone();\n        let month = quarters[num][0];\n        s = s.month(month, goFwd);\n        s = s.date(1, goFwd);\n        s = s.startOf('day');\n        return s;\n      }\n    }\n\n    let month = this.d.getMonth();\n\n    for (let i = 1; i < quarters.length; i++) {\n      if (month < quarters[i][0]) {\n        return i - 1;\n      }\n    }\n\n    return 4;\n  },\n  //spring, summer, winter, fall\n  season: function (input, goFwd) {\n    let hem = 'north';\n\n    if (this.hemisphere() === 'South') {\n      hem = 'south';\n    }\n\n    if (input !== undefined) {\n      let s = this.clone();\n\n      for (let i = 0; i < seasons[hem].length; i++) {\n        if (input === seasons[hem][i][0]) {\n          s = s.month(seasons[hem][i][1], goFwd);\n          s = s.date(1);\n          s = s.startOf('day');\n        }\n      }\n\n      return s;\n    }\n\n    let month = this.d.getMonth();\n\n    for (let i = 0; i < seasons[hem].length - 1; i++) {\n      if (month >= seasons[hem][i][1] && month < seasons[hem][i + 1][1]) {\n        return seasons[hem][i][0];\n      }\n    }\n\n    return 'winter';\n  },\n  //the year number\n  year: function (num) {\n    if (num !== undefined) {\n      let s = this.clone();\n      s.epoch = _year(s, num);\n      return s;\n    }\n\n    return this.d.getFullYear();\n  },\n  //bc/ad years\n  era: function (str) {\n    if (str !== undefined) {\n      let s = this.clone();\n      str = str.toLowerCase(); //TODO: there is no year-0AD i think. may have off-by-1 error here\n\n      let year = s.d.getFullYear(); //make '1992' into 1992bc..\n\n      if (str === 'bc' && year > 0) {\n        s.epoch = _year(s, year * -1);\n      } //make '1992bc' into '1992'\n\n\n      if (str === 'ad' && year < 0) {\n        s.epoch = _year(s, year * -1);\n      }\n\n      return s;\n    }\n\n    if (this.d.getFullYear() < 0) {\n      return 'BC';\n    }\n\n    return 'AD';\n  },\n  // 2019 -> 2010\n  decade: function (input) {\n    if (input !== undefined) {\n      input = String(input);\n      input = input.replace(/([0-9])'?s$/, '$1'); //1950's\n\n      input = input.replace(/([0-9])(th|rd|st|nd)/, '$1'); //fix ordinals\n\n      if (!input) {\n        console.warn('Spacetime: Invalid decade input');\n        return this;\n      } // assume 20th century?? for '70s'.\n\n\n      if (input.length === 2 && /[0-9][0-9]/.test(input)) {\n        input = '19' + input;\n      }\n\n      let year = Number(input);\n\n      if (isNaN(year)) {\n        return this;\n      } // round it down to the decade\n\n\n      year = Math.floor(year / 10) * 10;\n      return this.year(year); //.startOf('decade')\n    }\n\n    return this.startOf('decade').year();\n  },\n  // 1950 -> 19+1\n  century: function (input) {\n    if (input !== undefined) {\n      if (typeof input === 'string') {\n        input = input.replace(/([0-9])(th|rd|st|nd)/, '$1'); //fix ordinals\n\n        input = input.replace(/([0-9]+) ?(b\\.?c\\.?|a\\.?d\\.?)/i, (a, b, c) => {\n          if (c.match(/b\\.?c\\.?/i)) {\n            b = '-' + b;\n          }\n\n          return b;\n        });\n        input = input.replace(/c$/, ''); //20thC\n      }\n\n      let year = Number(input);\n\n      if (isNaN(input)) {\n        console.warn('Spacetime: Invalid century input');\n        return this;\n      } // there is no century 0\n\n\n      if (year === 0) {\n        year = 1;\n      }\n\n      if (year >= 0) {\n        year = (year - 1) * 100;\n      } else {\n        year = (year + 1) * 100;\n      }\n\n      return this.year(year);\n    } // century getter\n\n\n    let num = this.startOf('century').year();\n    num = Math.floor(num / 100);\n\n    if (num < 0) {\n      return num - 1;\n    }\n\n    return num + 1;\n  },\n  // 2019 -> 2+1\n  millenium: function (input) {\n    if (input !== undefined) {\n      if (typeof input === 'string') {\n        input = input.replace(/([0-9])(th|rd|st|nd)/, '$1'); //fix ordinals\n\n        input = Number(input);\n\n        if (isNaN(input)) {\n          console.warn('Spacetime: Invalid millenium input');\n          return this;\n        }\n      }\n\n      if (input > 0) {\n        input -= 1;\n      }\n\n      let year = input * 1000; // there is no year 0\n\n      if (year === 0) {\n        year = 1;\n      }\n\n      return this.year(year);\n    } // get the current millenium\n\n\n    let num = Math.floor(this.year() / 1000);\n\n    if (num >= 0) {\n      num += 1;\n    }\n\n    return num;\n  }\n};\nexport default methods;","map":{"version":3,"sources":["E:/React/pos-system/main/node_modules/spacetime/src/methods/query/03-year.js"],"names":["dayOfYear","_dayOfYear","week","_week","month","_month","year","_year","long","quarters","seasons","ms","clearMinutes","s","minute","second","millisecond","methods","num","goFwd","undefined","clone","epoch","sum","d","getMonth","tmp","i","Date","setDate","setFullYear","getFullYear","setHours","setMinutes","setMonth","getDate","date","day","monthName","add","toAdd","minus","thisOne","skipWeeks","input","quarter","replace","parseInt","startOf","length","season","hem","hemisphere","era","str","toLowerCase","decade","String","console","warn","test","Number","isNaN","Math","floor","century","a","b","c","match","millenium"],"mappings":"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","sourcesContent":["import { dayOfYear as _dayOfYear, week as _week, month as _month, year as _year } from '../set/set.js'\nimport { long } from '../../data/months.js'\nimport quarters from '../../data/quarters.js'\nimport seasons from '../../data/seasons.js'\nimport ms from '../../data/milliseconds.js'\n\nconst clearMinutes = (s) => {\n  s = s.minute(0)\n  s = s.second(0)\n  s = s.millisecond(1)\n  return s\n}\n\nconst methods = {\n  // day 0-366\n  dayOfYear: function (num, goFwd) {\n    if (num !== undefined) {\n      let s = this.clone()\n      s.epoch = _dayOfYear(s, num, goFwd)\n      return s\n    }\n    //days since newyears - jan 1st is 1, jan 2nd is 2...\n    let sum = 0\n    let month = this.d.getMonth()\n    let tmp\n    //count the num days in each month\n    for (let i = 1; i <= month; i++) {\n      tmp = new Date()\n      tmp.setDate(1)\n      tmp.setFullYear(this.d.getFullYear()) //the year matters, because leap-years\n      tmp.setHours(1)\n      tmp.setMinutes(1)\n      tmp.setMonth(i)\n      tmp.setHours(-2) //the last day of the month\n      sum += tmp.getDate()\n    }\n    return sum + this.d.getDate()\n  },\n\n  //since the start of the year\n  week: function (num, goFwd) {\n    // week-setter\n    if (num !== undefined) {\n      let s = this.clone()\n      s.epoch = _week(this, num, goFwd)\n      s = clearMinutes(s)\n      return s\n    }\n    //find-out which week it is\n    let tmp = this.clone()\n    tmp = tmp.month(0)\n    tmp = tmp.date(1)\n    tmp = clearMinutes(tmp)\n    tmp = tmp.day('monday')\n    //don't go into last-year\n    if (tmp.monthName() === 'december' && tmp.date() >= 28) {\n      tmp = tmp.add(1, 'week')\n    }\n    // is first monday the 1st?\n    let toAdd = 1\n    if (tmp.date() === 1) {\n      toAdd = 0\n    }\n    tmp = tmp.minus(1, 'second')\n    const thisOne = this.epoch\n    //if the week technically hasn't started yet\n    if (tmp.epoch > thisOne) {\n      return 1\n    }\n    //speed it up, if we can\n    let i = 0\n    let skipWeeks = this.month() * 4\n    tmp.epoch += ms.week * skipWeeks\n    i += skipWeeks\n    for (; i <= 52; i++) {\n      if (tmp.epoch > thisOne) {\n        return i + toAdd\n      }\n      tmp = tmp.add(1, 'week')\n    }\n    return 52\n  },\n  //either name or number\n  month: function (input, goFwd) {\n    if (input !== undefined) {\n      let s = this.clone()\n      s.epoch = _month(s, input, goFwd)\n      return s\n    }\n    return this.d.getMonth()\n  },\n  //'january'\n  monthName: function (input, goFwd) {\n    if (input !== undefined) {\n      let s = this.clone()\n      s = s.month(input, goFwd)\n      return s\n    }\n    return long()[this.month()]\n  },\n\n  //q1, q2, q3, q4\n  quarter: function (num, goFwd) {\n    if (num !== undefined) {\n      if (typeof num === 'string') {\n        num = num.replace(/^q/i, '')\n        num = parseInt(num, 10)\n      }\n      if (quarters[num]) {\n        let s = this.clone()\n        let month = quarters[num][0]\n        s = s.month(month, goFwd)\n        s = s.date(1, goFwd)\n        s = s.startOf('day')\n        return s\n      }\n    }\n    let month = this.d.getMonth()\n    for (let i = 1; i < quarters.length; i++) {\n      if (month < quarters[i][0]) {\n        return i - 1\n      }\n    }\n    return 4\n  },\n\n  //spring, summer, winter, fall\n  season: function (input, goFwd) {\n    let hem = 'north'\n    if (this.hemisphere() === 'South') {\n      hem = 'south'\n    }\n    if (input !== undefined) {\n      let s = this.clone()\n      for (let i = 0; i < seasons[hem].length; i++) {\n        if (input === seasons[hem][i][0]) {\n          s = s.month(seasons[hem][i][1], goFwd)\n          s = s.date(1)\n          s = s.startOf('day')\n        }\n      }\n      return s\n    }\n    let month = this.d.getMonth()\n    for (let i = 0; i < seasons[hem].length - 1; i++) {\n      if (month >= seasons[hem][i][1] && month < seasons[hem][i + 1][1]) {\n        return seasons[hem][i][0]\n      }\n    }\n    return 'winter'\n  },\n\n  //the year number\n  year: function (num) {\n    if (num !== undefined) {\n      let s = this.clone()\n      s.epoch = _year(s, num)\n      return s\n    }\n    return this.d.getFullYear()\n  },\n\n  //bc/ad years\n  era: function (str) {\n    if (str !== undefined) {\n      let s = this.clone()\n      str = str.toLowerCase()\n      //TODO: there is no year-0AD i think. may have off-by-1 error here\n      let year = s.d.getFullYear()\n      //make '1992' into 1992bc..\n      if (str === 'bc' && year > 0) {\n        s.epoch = _year(s, year * -1)\n      }\n      //make '1992bc' into '1992'\n      if (str === 'ad' && year < 0) {\n        s.epoch = _year(s, year * -1)\n      }\n      return s\n    }\n    if (this.d.getFullYear() < 0) {\n      return 'BC'\n    }\n    return 'AD'\n  },\n\n  // 2019 -> 2010\n  decade: function (input) {\n    if (input !== undefined) {\n      input = String(input)\n      input = input.replace(/([0-9])'?s$/, '$1') //1950's\n      input = input.replace(/([0-9])(th|rd|st|nd)/, '$1') //fix ordinals\n      if (!input) {\n        console.warn('Spacetime: Invalid decade input')\n        return this\n      }\n      // assume 20th century?? for '70s'.\n      if (input.length === 2 && /[0-9][0-9]/.test(input)) {\n        input = '19' + input\n      }\n      let year = Number(input)\n      if (isNaN(year)) {\n        return this\n      }\n      // round it down to the decade\n      year = Math.floor(year / 10) * 10\n      return this.year(year) //.startOf('decade')\n    }\n    return this.startOf('decade').year()\n  },\n  // 1950 -> 19+1\n  century: function (input) {\n    if (input !== undefined) {\n      if (typeof input === 'string') {\n        input = input.replace(/([0-9])(th|rd|st|nd)/, '$1') //fix ordinals\n        input = input.replace(/([0-9]+) ?(b\\.?c\\.?|a\\.?d\\.?)/i, (a, b, c) => {\n          if (c.match(/b\\.?c\\.?/i)) {\n            b = '-' + b\n          }\n          return b\n        })\n        input = input.replace(/c$/, '') //20thC\n      }\n      let year = Number(input)\n      if (isNaN(input)) {\n        console.warn('Spacetime: Invalid century input')\n        return this\n      }\n      // there is no century 0\n      if (year === 0) {\n        year = 1\n      }\n      if (year >= 0) {\n        year = (year - 1) * 100\n      } else {\n        year = (year + 1) * 100\n      }\n      return this.year(year)\n    }\n    // century getter\n    let num = this.startOf('century').year()\n    num = Math.floor(num / 100)\n    if (num < 0) {\n      return num - 1\n    }\n    return num + 1\n  },\n  // 2019 -> 2+1\n  millenium: function (input) {\n    if (input !== undefined) {\n      if (typeof input === 'string') {\n        input = input.replace(/([0-9])(th|rd|st|nd)/, '$1') //fix ordinals\n        input = Number(input)\n        if (isNaN(input)) {\n          console.warn('Spacetime: Invalid millenium input')\n          return this\n        }\n      }\n      if (input > 0) {\n        input -= 1\n      }\n      let year = input * 1000\n      // there is no year 0\n      if (year === 0) {\n        year = 1\n      }\n      return this.year(year)\n    }\n    // get the current millenium\n    let num = Math.floor(this.year() / 1000)\n    if (num >= 0) {\n      num += 1\n    }\n    return num\n  }\n}\nexport default methods\n"]},"metadata":{},"sourceType":"module"}