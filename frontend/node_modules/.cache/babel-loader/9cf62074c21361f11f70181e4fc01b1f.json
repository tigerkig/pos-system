{"ast":null,"code":"var _jsxFileName = \"E:\\\\React\\\\pos-system\\\\main\\\\src\\\\views\\\\sell\\\\SaleHistory.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Link } from \"react-router-dom\";\nimport { DateRangePicker } from 'rsuite';\nimport { Row, Col, Button } from \"reactstrap\";\nimport PropTypes from 'prop-types';\nimport { useTheme } from '@mui/material/styles';\nimport { Box, Tabs, Tab, InputAdornment, InputLabel, Select, MenuItem, OutlinedInput } from '@mui/material';\nimport AccountCircle from '@mui/icons-material/AccountCircle';\nimport \"./sell.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 250\n    }\n  }\n};\nconst AllSales = [{\n  key: \"All\",\n  value: \"All Sales\"\n}, {\n  key: \"AllOpenSales\",\n  value: \"All Open Sales\"\n}, {\n  key: \"Layby\",\n  value: \"Layby\"\n}, {\n  key: \"OnAccount\",\n  value: \"On Account\"\n}, {\n  key: \"Parked\",\n  value: \"Parked\"\n}, {\n  key: \"DeliveryUnfulfilled\",\n  value: \"Delivery Unfulfilled\"\n}, {\n  key: \"PickupUnfulfilled\",\n  value: \"Pickup Unfulfilled\"\n}, {\n  key: \"AllClosedSales\",\n  value: \"All Closed Sales\"\n}, {\n  key: \"Completed\",\n  value: \"Completed\"\n}, {\n  key: \"LaybeCompleted\",\n  value: \"Laybe Completed\"\n}, {\n  key: \"OnAccountCompleted\",\n  value: \"On Account Completed\"\n}, {\n  key: \"DeliveryCompleted\",\n  value: \"Delivery Completed\"\n}, {\n  key: \"PickupCompleted\",\n  value: \"Pickup Completed\"\n}, {\n  key: \"Voided\",\n  value: \"Voided\"\n}];\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.number.isRequired,\n  value: PropTypes.number.isRequired\n};\n\nfunction TabPanel(props) {\n  const {\n    children,\n    value,\n    index,\n    ...other\n  } = props;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    role: \"tabpanel\",\n    hidden: value !== index,\n    id: `simple-tabpanel-${index}`,\n    \"aria-labelledby\": `simple-tab-${index}`,\n    ...other,\n    children: value === index && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 11\n  }, this);\n}\n\n_c = TabPanel;\n\nfunction a11yProps(index) {\n  return {\n    id: `simple-tab-${index}`,\n    'aria-controls': `simple-tabpanel-${index}`\n  };\n}\n\nfunction getStyles(name, personName, theme) {\n  return {\n    fontWeight: personName.indexOf(name) === -1 ? theme.typography.fontWeightRegular : theme.typography.fontWeightMedium\n  };\n}\n\nconst SaleHistory = () => {\n  _s();\n\n  const theme = useTheme();\n  const [value, setValue] = useState(0);\n  const [isShow, setShowHide] = useState(false);\n  const [personName, setPersonName] = useState([]);\n  const [selectOption, setselectOption] = useState(['All', 'Layby', 'OnAccount', 'Parked', 'PickupUnfulfilled', 'Completed', 'LaybeCompleted', 'OnAccountCompleted', 'DeliveryCompleted', 'PickupCompleted', 'Voided']);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n    if (newValue == 0) setselectOption(['All', 'Layby', 'OnAccount', 'Parked', 'PickupUnfulfilled', 'Completed', 'LaybeCompleted', 'OnAccountCompleted', 'DeliveryCompleted', 'PickupCompleted', 'Voided']);else if (newValue == 1) setselectOption(['AllOpenSales', 'Completed', 'LaybeCompleted', 'OnAccountCompleted', 'DeliveryCompleted', 'PickupCompleted']);else setselectOption(['AllClosedSales', 'Layby', 'OnAccount', 'Parked']);\n  };\n\n  const selectChange = event => {\n    const {\n      target: {\n        value\n      }\n    } = event;\n    setPersonName(typeof value === 'string' ? value.split(',') : value);\n  };\n\n  const moreFilter = () => {\n    setShowHide(!isShow);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"OpenClose\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Sales History\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 16\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        borderBottom: 1,\n        borderColor: 'divider'\n      },\n      children: /*#__PURE__*/_jsxDEV(Tabs, {\n        value: value,\n        onChange: handleChange,\n        TabIndicatorProps: {\n          style: {\n            background: '#3f32f5',\n            color: 'green'\n          }\n        },\n        children: [/*#__PURE__*/_jsxDEV(Tab, {\n          label: \"All\",\n          ...a11yProps(0)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 26\n        }, this), /*#__PURE__*/_jsxDEV(Tab, {\n          label: \"Process return\",\n          ...a11yProps(1)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 26\n        }, this), /*#__PURE__*/_jsxDEV(Tab, {\n          label: \"Continue sale\",\n          ...a11yProps(2)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 26\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 16\n    }, this), /*#__PURE__*/_jsxDEV(TabPanel, {\n      value: value,\n      index: 0,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"OpenCloseHeader\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"View, edit and manage your sales all in one place. \", /*#__PURE__*/_jsxDEV(Link, {\n              to: \"\",\n              children: \"Need help?\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 85\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 31\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 26\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 16\n    }, this), /*#__PURE__*/_jsxDEV(TabPanel, {\n      value: value,\n      index: 1,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"OpenCloseHeader\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Retrieve a sale to process a return as an exchange or refund. \", /*#__PURE__*/_jsxDEV(Link, {\n              to: \"\",\n              children: \"Need help?\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 96\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 31\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 26\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 16\n    }, this), /*#__PURE__*/_jsxDEV(TabPanel, {\n      value: value,\n      index: 2,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"OpenCloseHeader\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Continue processing open sales. \", /*#__PURE__*/_jsxDEV(Link, {\n              to: \"\",\n              children: \"Need help?\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 66\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 31\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 26\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 16\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"SalesHistory\",\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          xxl: \"3\",\n          md: \"3\",\n          className: \"tabControl\",\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            htmlFor: \"SaleHistoryStatus\",\n            children: \"Status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 31\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            labelId: \"SaleHistoryStatus\",\n            id: \"allSales\",\n            fullWidth: true,\n            value: personName,\n            onChange: selectChange,\n            input: /*#__PURE__*/_jsxDEV(OutlinedInput, {\n              label: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 43\n            }, this),\n            MenuProps: MenuProps,\n            children: selectOption.map((key, index) => {\n              const data = AllSales.find(v => v.key === key);\n              return /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: data.value,\n                className: data.allKey,\n                style: getStyles(data.value, personName, theme),\n                children: data.value\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 202,\n                columnNumber: 46\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 31\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 26\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          xxl: \"3\",\n          md: \"3\",\n          className: \"tabControl\",\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            htmlFor: \"customer\",\n            children: \"Customer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 31\n          }, this), /*#__PURE__*/_jsxDEV(OutlinedInput, {\n            id: \"customer\",\n            fullWidth: true,\n            placeholder: \"Search for customers\",\n            startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n              position: \"start\",\n              children: /*#__PURE__*/_jsxDEV(AccountCircle, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 223,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 41\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 31\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 26\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          xxl: \"3\",\n          md: \"3\",\n          className: \"tabControl\",\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            htmlFor: \"receiptOrNote\",\n            children: \"Receipt or Note\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 31\n          }, this), /*#__PURE__*/_jsxDEV(OutlinedInput, {\n            id: \"receiptOrNote\",\n            fullWidth: true,\n            placeholder: \"Search receipt number or note\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 31\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 26\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          xxl: \"3\",\n          md: \"3\",\n          className: isShow ? 'tabControl show' : 'tabControl hidden'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 26\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          xxl: \"3\",\n          md: \"3\",\n          className: isShow ? 'tabControl show' : 'tabControl hidden',\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            htmlFor: \"outlet\",\n            children: \"Outlet\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 31\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            labelId: \"outlet\",\n            id: \"demo-multiple-name\",\n            fullWidth: true,\n            value: personName,\n            onChange: selectChange,\n            input: /*#__PURE__*/_jsxDEV(OutlinedInput, {\n              label: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 251,\n              columnNumber: 43\n            }, this),\n            MenuProps: MenuProps\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 31\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 26\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          xxl: \"3\",\n          md: \"3\",\n          className: isShow ? 'tabControl show' : 'tabControl hidden',\n          children: /*#__PURE__*/_jsxDEV(InputLabel, {\n            htmlFor: \"user\",\n            children: \"User\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 31\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 26\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          xxl: \"3\",\n          md: \"3\",\n          className: isShow ? 'tabControl show' : 'tabControl hidden',\n          children: /*#__PURE__*/_jsxDEV(DateRangePicker, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 31\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 26\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          xxl: \"3\",\n          md: \"3\",\n          className: \"SaleHistory-moreInfo\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(Link, {\n              to: \"\",\n              onClick: () => moreFilter(),\n              children: \"More filters\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 288,\n              columnNumber: 36\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              children: \"Search\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 289,\n              columnNumber: 36\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 287,\n            columnNumber: 31\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 26\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 155,\n    columnNumber: 11\n  }, this);\n};\n\n_s(SaleHistory, \"iX/c3P25xz9GHYg//d/GaFDj7kQ=\", false, function () {\n  return [useTheme];\n});\n\n_c2 = SaleHistory;\nexport default SaleHistory;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"TabPanel\");\n$RefreshReg$(_c2, \"SaleHistory\");","map":{"version":3,"sources":["E:/React/pos-system/main/src/views/sell/SaleHistory.js"],"names":["React","useState","Link","DateRangePicker","Row","Col","Button","PropTypes","useTheme","Box","Tabs","Tab","InputAdornment","InputLabel","Select","MenuItem","OutlinedInput","AccountCircle","ITEM_HEIGHT","ITEM_PADDING_TOP","MenuProps","PaperProps","style","maxHeight","width","AllSales","key","value","TabPanel","propTypes","children","node","index","number","isRequired","props","other","a11yProps","id","getStyles","name","personName","theme","fontWeight","indexOf","typography","fontWeightRegular","fontWeightMedium","SaleHistory","setValue","isShow","setShowHide","setPersonName","selectOption","setselectOption","handleChange","event","newValue","selectChange","target","split","moreFilter","borderBottom","borderColor","background","color","map","data","find","v","allKey"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,eAAT,QAAgC,QAAhC;AACA,SAASC,GAAT,EAAcC,GAAd,EAAmBC,MAAnB,QAAiC,YAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,QAAT,QAAyB,sBAAzB;AACA,SAASC,GAAT,EAAcC,IAAd,EAAoBC,GAApB,EAAyBC,cAAzB,EAAyCC,UAAzC,EAAqDC,MAArD,EAA6DC,QAA7D,EAAuEC,aAAvE,QAA4F,eAA5F;AACA,OAAOC,aAAP,MAA0B,mCAA1B;AACA,OAAO,YAAP;;AAEA,MAAMC,WAAW,GAAG,EAApB;AACA,MAAMC,gBAAgB,GAAG,CAAzB;AACA,MAAMC,SAAS,GAAG;AACbC,EAAAA,UAAU,EAAE;AACPC,IAAAA,KAAK,EAAE;AACFC,MAAAA,SAAS,EAAEL,WAAW,GAAG,GAAd,GAAoBC,gBAD7B;AAEFK,MAAAA,KAAK,EAAE;AAFL;AADA;AADC,CAAlB;AASA,MAAMC,QAAQ,GAAG,CACZ;AACKC,EAAAA,GAAG,EAAE,KADV;AAEKC,EAAAA,KAAK,EAAE;AAFZ,CADY,EAKZ;AACKD,EAAAA,GAAG,EAAE,cADV;AAEKC,EAAAA,KAAK,EAAE;AAFZ,CALY,EASZ;AACKD,EAAAA,GAAG,EAAE,OADV;AAEKC,EAAAA,KAAK,EAAE;AAFZ,CATY,EAaZ;AACKD,EAAAA,GAAG,EAAE,WADV;AAEKC,EAAAA,KAAK,EAAE;AAFZ,CAbY,EAiBZ;AACKD,EAAAA,GAAG,EAAE,QADV;AAEKC,EAAAA,KAAK,EAAE;AAFZ,CAjBY,EAqBZ;AACKD,EAAAA,GAAG,EAAE,qBADV;AAEKC,EAAAA,KAAK,EAAE;AAFZ,CArBY,EAyBZ;AACKD,EAAAA,GAAG,EAAE,mBADV;AAEKC,EAAAA,KAAK,EAAE;AAFZ,CAzBY,EA6BZ;AACKD,EAAAA,GAAG,EAAE,gBADV;AAEKC,EAAAA,KAAK,EAAE;AAFZ,CA7BY,EAiCZ;AACKD,EAAAA,GAAG,EAAE,WADV;AAEKC,EAAAA,KAAK,EAAE;AAFZ,CAjCY,EAqCZ;AACKD,EAAAA,GAAG,EAAE,gBADV;AAEKC,EAAAA,KAAK,EAAE;AAFZ,CArCY,EAyCZ;AACKD,EAAAA,GAAG,EAAE,oBADV;AAEKC,EAAAA,KAAK,EAAE;AAFZ,CAzCY,EA6CZ;AACKD,EAAAA,GAAG,EAAE,mBADV;AAEKC,EAAAA,KAAK,EAAE;AAFZ,CA7CY,EAiDZ;AACKD,EAAAA,GAAG,EAAE,iBADV;AAEKC,EAAAA,KAAK,EAAE;AAFZ,CAjDY,EAqDZ;AACKD,EAAAA,GAAG,EAAE,QADV;AAEKC,EAAAA,KAAK,EAAE;AAFZ,CArDY,CAAjB;AA2DAC,QAAQ,CAACC,SAAT,GAAqB;AAChBC,EAAAA,QAAQ,EAAEvB,SAAS,CAACwB,IADJ;AAEhBC,EAAAA,KAAK,EAAEzB,SAAS,CAAC0B,MAAV,CAAiBC,UAFR;AAGhBP,EAAAA,KAAK,EAAEpB,SAAS,CAAC0B,MAAV,CAAiBC;AAHR,CAArB;;AAMA,SAASN,QAAT,CAAkBO,KAAlB,EAAyB;AACpB,QAAM;AAAEL,IAAAA,QAAF;AAAYH,IAAAA,KAAZ;AAAmBK,IAAAA,KAAnB;AAA0B,OAAGI;AAA7B,MAAuCD,KAA7C;AAEA,sBACK;AACK,IAAA,IAAI,EAAC,UADV;AAEK,IAAA,MAAM,EAAER,KAAK,KAAKK,KAFvB;AAGK,IAAA,EAAE,EAAG,mBAAkBA,KAAM,EAHlC;AAIK,uBAAkB,cAAaA,KAAM,EAJ1C;AAAA,OAKSI,KALT;AAAA,cAOCT,KAAK,KAAKK,KAAV,iBACK;AAAA,gBAAMF;AAAN;AAAA;AAAA;AAAA;AAAA;AARN;AAAA;AAAA;AAAA;AAAA,UADL;AAaJ;;KAhBQF,Q;;AAkBT,SAASS,SAAT,CAAmBL,KAAnB,EAA0B;AACrB,SAAO;AACFM,IAAAA,EAAE,EAAG,cAAaN,KAAM,EADtB;AAEF,qBAAkB,mBAAkBA,KAAM;AAFxC,GAAP;AAIJ;;AAED,SAASO,SAAT,CAAmBC,IAAnB,EAAyBC,UAAzB,EAAqCC,KAArC,EAA4C;AAC1C,SAAO;AACLC,IAAAA,UAAU,EACRF,UAAU,CAACG,OAAX,CAAmBJ,IAAnB,MAA6B,CAAC,CAA9B,GACIE,KAAK,CAACG,UAAN,CAAiBC,iBADrB,GAEIJ,KAAK,CAACG,UAAN,CAAiBE;AAJlB,GAAP;AAMD;;AAED,MAAMC,WAAW,GAAG,MAAM;AAAA;;AACrB,QAAMN,KAAK,GAAGlC,QAAQ,EAAtB;AACA,QAAM,CAACmB,KAAD,EAAQsB,QAAR,IAAoBhD,QAAQ,CAAC,CAAD,CAAlC;AACA,QAAM,CAACiD,MAAD,EAASC,WAAT,IAAwBlD,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACwC,UAAD,EAAaW,aAAb,IAA8BnD,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACoD,YAAD,EAAeC,eAAf,IAAkCrD,QAAQ,CAAC,CAC5C,KAD4C,EACrC,OADqC,EAC5B,WAD4B,EACf,QADe,EACL,mBADK,EACgB,WADhB,EAC6B,gBAD7B,EAC+C,oBAD/C,EACqE,mBADrE,EAC0F,iBAD1F,EAC6G,QAD7G,CAAD,CAAhD;;AAIA,QAAMsD,YAAY,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AACrCR,IAAAA,QAAQ,CAACQ,QAAD,CAAR;AACA,QAAGA,QAAQ,IAAI,CAAf,EACKH,eAAe,CAAC,CAAC,KAAD,EAAQ,OAAR,EAAiB,WAAjB,EAA8B,QAA9B,EAAwC,mBAAxC,EAA6D,WAA7D,EAA0E,gBAA1E,EAA4F,oBAA5F,EAAkH,mBAAlH,EAAuI,iBAAvI,EAA0J,QAA1J,CAAD,CAAf,CADL,KAEK,IAAIG,QAAQ,IAAI,CAAhB,EACAH,eAAe,CAAC,CAAC,cAAD,EAAiB,WAAjB,EAA8B,gBAA9B,EAAgD,oBAAhD,EAAsE,mBAAtE,EAA2F,iBAA3F,CAAD,CAAf,CADA,KAGAA,eAAe,CAAC,CAAC,gBAAD,EAAmB,OAAnB,EAA4B,WAA5B,EAAyC,QAAzC,CAAD,CAAf;AAET,GATD;;AAWA,QAAMI,YAAY,GAAIF,KAAD,IAAW;AAC3B,UAAM;AACDG,MAAAA,MAAM,EAAE;AAAEhC,QAAAA;AAAF;AADP,QAEF6B,KAFJ;AAGAJ,IAAAA,aAAa,CACR,OAAOzB,KAAP,KAAiB,QAAjB,GAA4BA,KAAK,CAACiC,KAAN,CAAY,GAAZ,CAA5B,GAA+CjC,KADvC,CAAb;AAGJ,GAPD;;AASA,QAAMkC,UAAU,GAAG,MAAM;AACpBV,IAAAA,WAAW,CAAC,CAACD,MAAF,CAAX;AACJ,GAFD;;AAIA,sBACK;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,4BACK;AAAA,6BACK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADL;AAAA;AAAA;AAAA;AAAA,YADL,eAKK,QAAC,GAAD;AAAK,MAAA,EAAE,EAAE;AAAEY,QAAAA,YAAY,EAAE,CAAhB;AAAmBC,QAAAA,WAAW,EAAE;AAAhC,OAAT;AAAA,6BACK,QAAC,IAAD;AAAM,QAAA,KAAK,EAAEpC,KAAb;AAAoB,QAAA,QAAQ,EAAE4B,YAA9B;AAA4C,QAAA,iBAAiB,EAAE;AAACjC,UAAAA,KAAK,EAAE;AAAC0C,YAAAA,UAAU,EAAC,SAAZ;AAAuBC,YAAAA,KAAK,EAAE;AAA9B;AAAR,SAA/D;AAAA,gCACK,QAAC,GAAD;AAAK,UAAA,KAAK,EAAC,KAAX;AAAA,aAAqB5B,SAAS,CAAC,CAAD;AAA9B;AAAA;AAAA;AAAA;AAAA,gBADL,eAEK,QAAC,GAAD;AAAK,UAAA,KAAK,EAAC,gBAAX;AAAA,aAAgCA,SAAS,CAAC,CAAD;AAAzC;AAAA;AAAA;AAAA;AAAA,gBAFL,eAGK,QAAC,GAAD;AAAK,UAAA,KAAK,EAAC,eAAX;AAAA,aAA+BA,SAAS,CAAC,CAAD;AAAxC;AAAA;AAAA;AAAA;AAAA,gBAHL;AAAA;AAAA;AAAA;AAAA;AAAA;AADL;AAAA;AAAA;AAAA;AAAA,YALL,eAYK,QAAC,QAAD;AAAU,MAAA,KAAK,EAAEV,KAAjB;AAAwB,MAAA,KAAK,EAAE,CAA/B;AAAA,6BACK;AAAK,QAAA,SAAS,EAAC,iBAAf;AAAA,+BACK;AAAA,iCAAK;AAAA,2FAAsD,QAAC,IAAD;AAAM,cAAA,EAAE,EAAC,EAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAL;AAAA;AAAA;AAAA;AAAA;AADL;AAAA;AAAA;AAAA;AAAA;AADL;AAAA;AAAA;AAAA;AAAA,YAZL,eAiBK,QAAC,QAAD;AAAU,MAAA,KAAK,EAAEA,KAAjB;AAAwB,MAAA,KAAK,EAAE,CAA/B;AAAA,6BACK;AAAK,QAAA,SAAS,EAAC,iBAAf;AAAA,+BACK;AAAA,iCAAK;AAAA,sGAAiE,QAAC,IAAD;AAAM,cAAA,EAAE,EAAC,EAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAL;AAAA;AAAA;AAAA;AAAA;AADL;AAAA;AAAA;AAAA;AAAA;AADL;AAAA;AAAA;AAAA;AAAA,YAjBL,eAsBK,QAAC,QAAD;AAAU,MAAA,KAAK,EAAEA,KAAjB;AAAwB,MAAA,KAAK,EAAE,CAA/B;AAAA,6BACK;AAAK,QAAA,SAAS,EAAC,iBAAf;AAAA,+BACK;AAAA,iCAAK;AAAA,wEAAmC,QAAC,IAAD;AAAM,cAAA,EAAE,EAAC,EAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAL;AAAA;AAAA;AAAA;AAAA;AADL;AAAA;AAAA;AAAA;AAAA;AADL;AAAA;AAAA;AAAA;AAAA,YAtBL,eA4BM;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,6BACI,QAAC,GAAD;AAAA,gCACK,QAAC,GAAD;AAAK,UAAA,GAAG,EAAC,GAAT;AAAa,UAAA,EAAE,EAAC,GAAhB;AAAoB,UAAA,SAAS,EAAC,YAA9B;AAAA,kCACK,QAAC,UAAD;AAAY,YAAA,OAAO,EAAC,mBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADL,eAIK,QAAC,MAAD;AACK,YAAA,OAAO,EAAC,mBADb;AAEK,YAAA,EAAE,EAAC,UAFR;AAGK,YAAA,SAAS,MAHd;AAIK,YAAA,KAAK,EAAEc,UAJZ;AAKK,YAAA,QAAQ,EAAEiB,YALf;AAMK,YAAA,KAAK,eAAE,QAAC,aAAD;AAAe,cAAA,KAAK,EAAC;AAArB;AAAA;AAAA;AAAA;AAAA,oBANZ;AAOK,YAAA,SAAS,EAAEtC,SAPhB;AAAA,sBASMiC,YAAY,CAACa,GAAb,CAAiB,CAACxC,GAAD,EAAMM,KAAN,KAAgB;AAC7B,oBAAMmC,IAAI,GAAG1C,QAAQ,CAAC2C,IAAT,CAAeC,CAAD,IAAOA,CAAC,CAAC3C,GAAF,KAAUA,GAA/B,CAAb;AAEA,kCACK,QAAC,QAAD;AAEK,gBAAA,KAAK,EAAEyC,IAAI,CAACxC,KAFjB;AAGK,gBAAA,SAAS,EAAEwC,IAAI,CAACG,MAHrB;AAIK,gBAAA,KAAK,EAAE/B,SAAS,CAAC4B,IAAI,CAACxC,KAAN,EAAac,UAAb,EAAyBC,KAAzB,CAJrB;AAAA,0BAKMyB,IAAI,CAACxC;AALX,iBACUK,KADV;AAAA;AAAA;AAAA;AAAA,sBADL;AASJ,aAZA;AATN;AAAA;AAAA;AAAA;AAAA,kBAJL;AAAA;AAAA;AAAA;AAAA;AAAA,gBADL,eA6BK,QAAC,GAAD;AAAK,UAAA,GAAG,EAAC,GAAT;AAAa,UAAA,EAAE,EAAC,GAAhB;AAAoB,UAAA,SAAS,EAAC,YAA9B;AAAA,kCACK,QAAC,UAAD;AAAY,YAAA,OAAO,EAAC,UAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADL,eAIK,QAAC,aAAD;AACK,YAAA,EAAE,EAAC,UADR;AAEK,YAAA,SAAS,MAFd;AAGK,YAAA,WAAW,EAAC,sBAHjB;AAIK,YAAA,cAAc,eACT,QAAC,cAAD;AAAgB,cAAA,QAAQ,EAAC,OAAzB;AAAA,qCACA,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AALV;AAAA;AAAA;AAAA;AAAA,kBAJL;AAAA;AAAA;AAAA;AAAA;AAAA,gBA7BL,eA4CK,QAAC,GAAD;AAAK,UAAA,GAAG,EAAC,GAAT;AAAa,UAAA,EAAE,EAAC,GAAhB;AAAoB,UAAA,SAAS,EAAC,YAA9B;AAAA,kCACK,QAAC,UAAD;AAAY,YAAA,OAAO,EAAC,eAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADL,eAIK,QAAC,aAAD;AACK,YAAA,EAAE,EAAC,eADR;AAEK,YAAA,SAAS,MAFd;AAGK,YAAA,WAAW,EAAC;AAHjB;AAAA;AAAA;AAAA;AAAA,kBAJL;AAAA;AAAA;AAAA;AAAA;AAAA,gBA5CL,eAsDK,QAAC,GAAD;AAAK,UAAA,GAAG,EAAC,GAAT;AAAa,UAAA,EAAE,EAAC,GAAhB;AAAoB,UAAA,SAAS,EAAEkB,MAAM,GAAG,iBAAH,GAAuB;AAA5D;AAAA;AAAA;AAAA;AAAA,gBAtDL,eAyDK,QAAC,GAAD;AAAK,UAAA,GAAG,EAAC,GAAT;AAAa,UAAA,EAAE,EAAC,GAAhB;AAAoB,UAAA,SAAS,EAAEA,MAAM,GAAG,iBAAH,GAAuB,mBAA5D;AAAA,kCACK,QAAC,UAAD;AAAY,YAAA,OAAO,EAAC,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADL,eAIK,QAAC,MAAD;AACK,YAAA,OAAO,EAAC,QADb;AAEK,YAAA,EAAE,EAAC,oBAFR;AAGK,YAAA,SAAS,MAHd;AAIK,YAAA,KAAK,EAAET,UAJZ;AAKK,YAAA,QAAQ,EAAEiB,YALf;AAMK,YAAA,KAAK,eAAE,QAAC,aAAD;AAAe,cAAA,KAAK,EAAC;AAArB;AAAA;AAAA;AAAA;AAAA,oBANZ;AAOK,YAAA,SAAS,EAAEtC;AAPhB;AAAA;AAAA;AAAA;AAAA,kBAJL;AAAA;AAAA;AAAA;AAAA;AAAA,gBAzDL,eA2EK,QAAC,GAAD;AAAK,UAAA,GAAG,EAAC,GAAT;AAAa,UAAA,EAAE,EAAC,GAAhB;AAAoB,UAAA,SAAS,EAAE8B,MAAM,GAAG,iBAAH,GAAuB,mBAA5D;AAAA,iCACK,QAAC,UAAD;AAAY,YAAA,OAAO,EAAC,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADL;AAAA;AAAA;AAAA;AAAA,gBA3EL,eAmGK,QAAC,GAAD;AAAK,UAAA,GAAG,EAAC,GAAT;AAAa,UAAA,EAAE,EAAC,GAAhB;AAAoB,UAAA,SAAS,EAAEA,MAAM,GAAG,iBAAH,GAAuB,mBAA5D;AAAA,iCACK,QAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AADL;AAAA;AAAA;AAAA;AAAA,gBAnGL,eAsGK,QAAC,GAAD;AAAK,UAAA,GAAG,EAAC,GAAT;AAAa,UAAA,EAAE,EAAC,GAAhB;AAAoB,UAAA,SAAS,EAAC,sBAA9B;AAAA,iCACK;AAAA,oCACK,QAAC,IAAD;AAAM,cAAA,EAAE,EAAC,EAAT;AAAY,cAAA,OAAO,EAAG,MAAMW,UAAU,EAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADL,eAEK,QAAC,MAAD;AAAQ,cAAA,OAAO,EAAC,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFL;AAAA;AAAA;AAAA;AAAA;AAAA;AADL;AAAA;AAAA;AAAA;AAAA,gBAtGL;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YA5BN;AAAA;AAAA;AAAA;AAAA;AAAA,UADL;AA+IJ,CAhLD;;GAAMb,W;UACaxC,Q;;;MADbwC,W;AAiLN,eAAeA,WAAf","sourcesContent":["import React, { useState } from 'react'\r\nimport { Link } from \"react-router-dom\";\r\nimport { DateRangePicker } from 'rsuite';\r\nimport { Row, Col, Button } from \"reactstrap\";\r\nimport PropTypes from 'prop-types';\r\nimport { useTheme } from '@mui/material/styles';\r\nimport { Box, Tabs, Tab, InputAdornment, InputLabel, Select, MenuItem, OutlinedInput } from '@mui/material';\r\nimport AccountCircle from '@mui/icons-material/AccountCircle';\r\nimport \"./sell.css\"\r\n\r\nconst ITEM_HEIGHT = 48;\r\nconst ITEM_PADDING_TOP = 8;\r\nconst MenuProps = {\r\n     PaperProps: {\r\n          style: {\r\n               maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n               width: 250,\r\n          },\r\n     },\r\n};\r\n\r\nconst AllSales = [\r\n     {\r\n          key: \"All\",\r\n          value: \"All Sales\"\r\n     },\r\n     {\r\n          key: \"AllOpenSales\",\r\n          value: \"All Open Sales\"\r\n     },\r\n     {\r\n          key: \"Layby\",\r\n          value: \"Layby\"\r\n     },\r\n     {\r\n          key: \"OnAccount\",\r\n          value: \"On Account\"\r\n     },\r\n     {\r\n          key: \"Parked\",\r\n          value: \"Parked\"\r\n     },\r\n     {\r\n          key: \"DeliveryUnfulfilled\",\r\n          value: \"Delivery Unfulfilled\"\r\n     },\r\n     {\r\n          key: \"PickupUnfulfilled\",\r\n          value: \"Pickup Unfulfilled\"\r\n     },\r\n     {\r\n          key: \"AllClosedSales\",\r\n          value: \"All Closed Sales\"\r\n     },\r\n     {\r\n          key: \"Completed\",\r\n          value: \"Completed\"\r\n     },\r\n     {\r\n          key: \"LaybeCompleted\",\r\n          value: \"Laybe Completed\"\r\n     },\r\n     {\r\n          key: \"OnAccountCompleted\",\r\n          value: \"On Account Completed\"\r\n     },\r\n     {\r\n          key: \"DeliveryCompleted\",\r\n          value: \"Delivery Completed\"\r\n     },\r\n     {\r\n          key: \"PickupCompleted\",\r\n          value: \"Pickup Completed\"\r\n     },\r\n     {\r\n          key: \"Voided\",\r\n          value: \"Voided\"\r\n     },\r\n];\r\n\r\nTabPanel.propTypes = {\r\n     children: PropTypes.node,\r\n     index: PropTypes.number.isRequired,\r\n     value: PropTypes.number.isRequired,\r\n};\r\n\r\nfunction TabPanel(props) {\r\n     const { children, value, index, ...other } = props;\r\n     \r\n     return (\r\n          <div\r\n               role=\"tabpanel\"\r\n               hidden={value !== index}\r\n               id={`simple-tabpanel-${index}`}\r\n               aria-labelledby={`simple-tab-${index}`}\r\n               {...other}\r\n           >\r\n          {value === index && (\r\n                <div>{children}</div>\r\n          )}\r\n       </div>\r\n     );\r\n}\r\n\r\nfunction a11yProps(index) {\r\n     return {\r\n          id: `simple-tab-${index}`,\r\n          'aria-controls': `simple-tabpanel-${index}`,\r\n     };\r\n}\r\n\r\nfunction getStyles(name, personName, theme) {\r\n  return {\r\n    fontWeight:\r\n      personName.indexOf(name) === -1\r\n        ? theme.typography.fontWeightRegular\r\n        : theme.typography.fontWeightMedium,\r\n  };\r\n}\r\n\r\nconst SaleHistory = () => {\r\n     const theme = useTheme();\r\n     const [value, setValue] = useState(0);\r\n     const [isShow, setShowHide] = useState(false);\r\n     const [personName, setPersonName] = useState([]);\r\n     const [selectOption, setselectOption] = useState([\r\n          'All', 'Layby', 'OnAccount', 'Parked', 'PickupUnfulfilled', 'Completed', 'LaybeCompleted', 'OnAccountCompleted', 'DeliveryCompleted', 'PickupCompleted', 'Voided'\r\n     ]);\r\n\r\n     const handleChange = (event, newValue) => {\r\n          setValue(newValue);\r\n          if(newValue == 0)\r\n               setselectOption(['All', 'Layby', 'OnAccount', 'Parked', 'PickupUnfulfilled', 'Completed', 'LaybeCompleted', 'OnAccountCompleted', 'DeliveryCompleted', 'PickupCompleted', 'Voided'])\r\n          else if (newValue == 1)\r\n               setselectOption(['AllOpenSales', 'Completed', 'LaybeCompleted', 'OnAccountCompleted', 'DeliveryCompleted', 'PickupCompleted'])\r\n          else\r\n               setselectOption(['AllClosedSales', 'Layby', 'OnAccount', 'Parked'])\r\n\r\n     };\r\n\r\n     const selectChange = (event) => {\r\n          const {\r\n               target: { value },\r\n          } = event;\r\n          setPersonName(\r\n               typeof value === 'string' ? value.split(',') : value,\r\n          );\r\n     };\r\n\r\n     const moreFilter = () => {\r\n          setShowHide(!isShow)\r\n     }\r\n\r\n     return(\r\n          <div className='OpenClose'>\r\n               <div>\r\n                    <h2>Sales History</h2>\r\n               </div>\r\n                    \r\n               <Box sx={{ borderBottom: 1, borderColor: 'divider' }}>\r\n                    <Tabs value={value} onChange={handleChange} TabIndicatorProps={{style: {background:'#3f32f5', color: 'green'}}}>\r\n                         <Tab label=\"All\" {...a11yProps(0)} />\r\n                         <Tab label=\"Process return\" {...a11yProps(1)} />\r\n                         <Tab label=\"Continue sale\" {...a11yProps(2)} />\r\n                    </Tabs>\r\n               </Box>\r\n               <TabPanel value={value} index={0}>\r\n                    <div className='OpenCloseHeader'>\r\n                         <div><p>View, edit and manage your sales all in one place. <Link to=''>Need help?</Link></p></div>\r\n                    </div> \r\n               </TabPanel>\r\n               <TabPanel value={value} index={1}>\r\n                    <div className='OpenCloseHeader'>\r\n                         <div><p>Retrieve a sale to process a return as an exchange or refund. <Link to=''>Need help?</Link></p></div>\r\n                    </div>\r\n               </TabPanel>\r\n               <TabPanel value={value} index={2}>\r\n                    <div className='OpenCloseHeader'>\r\n                         <div><p>Continue processing open sales. <Link to=''>Need help?</Link></p></div>\r\n                    </div>\r\n               </TabPanel>\r\n\r\n                <div className='SalesHistory'>\r\n                    <Row>\r\n                         <Col xxl='3' md='3' className='tabControl'>\r\n                              <InputLabel htmlFor=\"SaleHistoryStatus\">\r\n                                   Status\r\n                              </InputLabel>\r\n                              <Select\r\n                                   labelId=\"SaleHistoryStatus\"\r\n                                   id=\"allSales\"\r\n                                   fullWidth\r\n                                   value={personName}\r\n                                   onChange={selectChange}\r\n                                   input={<OutlinedInput label=\"Name\" />}\r\n                                   MenuProps={MenuProps}\r\n                              >\r\n                                   {selectOption.map((key, index) => {\r\n                                        const data = AllSales.find((v) => v.key === key)\r\n\r\n                                        return (\r\n                                             <MenuItem\r\n                                                  key={index}\r\n                                                  value={data.value}\r\n                                                  className={data.allKey}\r\n                                                  style={getStyles(data.value, personName, theme)} >\r\n                                                  {data.value}\r\n                                             </MenuItem>\r\n                                        );\r\n                                   })}\r\n                              </Select>\r\n                         </Col>\r\n                         <Col xxl='3' md='3' className='tabControl'> \r\n                              <InputLabel htmlFor=\"customer\">\r\n                              Customer\r\n                              </InputLabel>\r\n                              <OutlinedInput\r\n                                   id=\"customer\"\r\n                                   fullWidth\r\n                                   placeholder='Search for customers'\r\n                                   startAdornment={\r\n                                        <InputAdornment position=\"start\">\r\n                                        <AccountCircle />\r\n                                        </InputAdornment>\r\n                                   }\r\n                              />\r\n                         </Col>\r\n                         <Col xxl='3' md='3' className='tabControl'>\r\n                              <InputLabel htmlFor=\"receiptOrNote\">\r\n                                   Receipt or Note\r\n                              </InputLabel>\r\n                              <OutlinedInput\r\n                                   id=\"receiptOrNote\"\r\n                                   fullWidth\r\n                                   placeholder='Search receipt number or note'\r\n                              />\r\n                         </Col>\r\n                         <Col xxl='3' md='3' className={isShow ? 'tabControl show' : 'tabControl hidden'}>\r\n                         \r\n                         </Col>\r\n                         <Col xxl='3' md='3' className={isShow ? 'tabControl show' : 'tabControl hidden'}>\r\n                              <InputLabel htmlFor=\"outlet\">\r\n                                   Outlet\r\n                              </InputLabel>\r\n                              <Select\r\n                                   labelId=\"outlet\"\r\n                                   id=\"demo-multiple-name\"\r\n                                   fullWidth\r\n                                   value={personName}\r\n                                   onChange={selectChange}\r\n                                   input={<OutlinedInput label=\"Name\" />}\r\n                                   MenuProps={MenuProps}\r\n                              >\r\n                                   {/* {AllSales.map((name, index) => (\r\n                                        showSelectBox(name)\r\n                                   ))} */}\r\n                              </Select>\r\n                         </Col>\r\n                         <Col xxl='3' md='3' className={isShow ? 'tabControl show' : 'tabControl hidden'}>\r\n                              <InputLabel htmlFor=\"user\">\r\n                                   User\r\n                              </InputLabel>\r\n                              {/* <Select\r\n                                   labelId=\"user\"\r\n                                   id=\"demo-multiple-name\"\r\n                                   fullWidth\r\n                                   value={personName}\r\n                                   onChange={selectChange}\r\n                                   input={<OutlinedInput label=\"Name\" />}\r\n                                   MenuProps={MenuProps}\r\n                              >\r\n                                   {names.map((name) => (\r\n                                   <MenuItem\r\n                                   key={name}\r\n                                   value={name}\r\n                                   style={getStyles(name, personName, theme)}\r\n                                   >\r\n                                   {name}\r\n                                   </MenuItem>\r\n                                   ))}\r\n                              </Select> */}\r\n                         </Col>\r\n                         <Col xxl='3' md='3' className={isShow ? 'tabControl show' : 'tabControl hidden'}>\r\n                              <DateRangePicker />\r\n                         </Col>\r\n                         <Col xxl='3' md='3' className='SaleHistory-moreInfo'>\r\n                              <div>\r\n                                   <Link to='' onClick={ () => moreFilter() }>More filters</Link>\r\n                                   <Button variant=\"contained\">Search</Button>\r\n                              </div>\r\n                         </Col>\r\n                    </Row>\r\n               </div>  \r\n\r\n          </div>\r\n     )\r\n}\r\nexport default SaleHistory;\r\n"]},"metadata":{},"sourceType":"module"}