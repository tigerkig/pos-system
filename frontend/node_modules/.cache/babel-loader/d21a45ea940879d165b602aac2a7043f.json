{"ast":null,"code":"// fallback for IE11 buggy Object.getOwnPropertyNames with iframe and window\nvar toIObject = require('./$.to-iobject'),\n    getNames = require('./$').getNames,\n    toString = {}.toString;\n\nvar windowNames = typeof window == 'object' && Object.getOwnPropertyNames ? Object.getOwnPropertyNames(window) : [];\n\nvar getWindowNames = function (it) {\n  try {\n    return getNames(it);\n  } catch (e) {\n    return windowNames.slice();\n  }\n};\n\nmodule.exports.get = function getOwnPropertyNames(it) {\n  if (windowNames && toString.call(it) == '[object Window]') return getWindowNames(it);\n  return getNames(toIObject(it));\n};","map":{"version":3,"sources":["E:/React/pos-system/frontend/node_modules/babel/node_modules/core-js/modules/$.get-names.js"],"names":["toIObject","require","getNames","toString","windowNames","window","Object","getOwnPropertyNames","getWindowNames","it","e","slice","module","exports","get","call"],"mappings":"AAAA;AACA,IAAIA,SAAS,GAAGC,OAAO,CAAC,gBAAD,CAAvB;AAAA,IACIC,QAAQ,GAAID,OAAO,CAAC,KAAD,CAAP,CAAeC,QAD/B;AAAA,IAEIC,QAAQ,GAAI,GAAGA,QAFnB;;AAIA,IAAIC,WAAW,GAAG,OAAOC,MAAP,IAAiB,QAAjB,IAA6BC,MAAM,CAACC,mBAApC,GACdD,MAAM,CAACC,mBAAP,CAA2BF,MAA3B,CADc,GACuB,EADzC;;AAGA,IAAIG,cAAc,GAAG,UAASC,EAAT,EAAY;AAC/B,MAAI;AACF,WAAOP,QAAQ,CAACO,EAAD,CAAf;AACD,GAFD,CAEE,OAAMC,CAAN,EAAQ;AACR,WAAON,WAAW,CAACO,KAAZ,EAAP;AACD;AACF,CAND;;AAQAC,MAAM,CAACC,OAAP,CAAeC,GAAf,GAAqB,SAASP,mBAAT,CAA6BE,EAA7B,EAAgC;AACnD,MAAGL,WAAW,IAAID,QAAQ,CAACY,IAAT,CAAcN,EAAd,KAAqB,iBAAvC,EAAyD,OAAOD,cAAc,CAACC,EAAD,CAArB;AACzD,SAAOP,QAAQ,CAACF,SAAS,CAACS,EAAD,CAAV,CAAf;AACD,CAHD","sourcesContent":["// fallback for IE11 buggy Object.getOwnPropertyNames with iframe and window\nvar toIObject = require('./$.to-iobject')\n  , getNames  = require('./$').getNames\n  , toString  = {}.toString;\n\nvar windowNames = typeof window == 'object' && Object.getOwnPropertyNames\n  ? Object.getOwnPropertyNames(window) : [];\n\nvar getWindowNames = function(it){\n  try {\n    return getNames(it);\n  } catch(e){\n    return windowNames.slice();\n  }\n};\n\nmodule.exports.get = function getOwnPropertyNames(it){\n  if(windowNames && toString.call(it) == '[object Window]')return getWindowNames(it);\n  return getNames(toIObject(it));\n};"]},"metadata":{},"sourceType":"script"}