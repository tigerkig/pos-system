{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"currentlySelectingRangeEnd\", \"disableOpenPicker\", \"endText\", \"onBlur\", \"onChange\", \"open\", \"openPicker\", \"rawValue\", \"rawValue\", \"readOnly\", \"renderInput\", \"setCurrentlySelectingRangeEnd\", \"startText\", \"TextFieldProps\", \"validationError\"];\nimport * as React from 'react';\nimport { styled } from '@mui/material/styles';\nimport { useUtils, executeInTheNextEventLoopTick, useMaskedInput, onSpaceOrEnter } from '@mui/x-date-pickers/internals';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DateRangePickerInputRoot = styled('div')(_ref => {\n  let {\n    theme\n  } = _ref;\n  return {\n    display: 'flex',\n    alignItems: 'baseline',\n    [theme.breakpoints.down('xs')]: {\n      flexDirection: 'column',\n      alignItems: 'center'\n    }\n  };\n});\n/**\n * @ignore - internal component.\n */\n\nexport const DateRangePickerInput = /*#__PURE__*/React.forwardRef(function DateRangePickerInput(props, ref) {\n  const {\n    currentlySelectingRangeEnd,\n    disableOpenPicker,\n    endText,\n    onBlur,\n    onChange,\n    open,\n    openPicker,\n    rawValue: [start, end],\n    readOnly,\n    renderInput,\n    setCurrentlySelectingRangeEnd,\n    startText,\n    TextFieldProps,\n    validationError: [startValidationError, endValidationError]\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const utils = useUtils();\n  const startRef = React.useRef(null);\n  const endRef = React.useRef(null);\n  React.useEffect(() => {\n    if (!open) {\n      return;\n    }\n\n    if (currentlySelectingRangeEnd === 'start') {\n      var _startRef$current;\n\n      (_startRef$current = startRef.current) == null ? void 0 : _startRef$current.focus();\n    } else if (currentlySelectingRangeEnd === 'end') {\n      var _endRef$current;\n\n      (_endRef$current = endRef.current) == null ? void 0 : _endRef$current.focus();\n    }\n  }, [currentlySelectingRangeEnd, open]); // TODO: rethink this approach. We do not need to wait for calendar to be updated to rerender input (looks like freezing)\n  // TODO: so simply break 1 react's commit phase in 2 (first for input and second for calendars) by executing onChange in the next tick\n\n  const lazyHandleChangeCallback = React.useCallback(function () {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return executeInTheNextEventLoopTick(() => onChange(...args));\n  }, [onChange]);\n\n  const handleStartChange = (date, inputString) => {\n    lazyHandleChangeCallback([date, utils.date(end)], inputString);\n  };\n\n  const handleEndChange = (date, inputString) => {\n    lazyHandleChangeCallback([utils.date(start), date], inputString);\n  };\n\n  const openRangeStartSelection = () => {\n    if (setCurrentlySelectingRangeEnd) {\n      setCurrentlySelectingRangeEnd('start');\n    }\n\n    if (!readOnly && !disableOpenPicker) {\n      openPicker();\n    }\n  };\n\n  const openRangeEndSelection = () => {\n    if (setCurrentlySelectingRangeEnd) {\n      setCurrentlySelectingRangeEnd('end');\n    }\n\n    if (!readOnly && !disableOpenPicker) {\n      openPicker();\n    }\n  };\n\n  const focusOnRangeEnd = () => {\n    if (open && setCurrentlySelectingRangeEnd) {\n      setCurrentlySelectingRangeEnd('end');\n    }\n  };\n\n  const focusOnRangeStart = () => {\n    if (open && setCurrentlySelectingRangeEnd) {\n      setCurrentlySelectingRangeEnd('start');\n    }\n  };\n\n  const startInputProps = useMaskedInput(_extends({}, other, {\n    readOnly,\n    rawValue: start,\n    onChange: handleStartChange,\n    label: startText,\n    validationError: startValidationError !== null,\n    TextFieldProps: _extends({}, TextFieldProps, {\n      ref: startRef,\n      focused: open && currentlySelectingRangeEnd === 'start'\n    }),\n    inputProps: {\n      onClick: openRangeStartSelection,\n      onKeyDown: onSpaceOrEnter(openRangeStartSelection),\n      onFocus: focusOnRangeStart\n    }\n  }));\n  const endInputProps = useMaskedInput(_extends({}, other, {\n    readOnly,\n    label: endText,\n    rawValue: end,\n    onChange: handleEndChange,\n    validationError: endValidationError !== null,\n    TextFieldProps: _extends({}, TextFieldProps, {\n      ref: endRef,\n      focused: open && currentlySelectingRangeEnd === 'end'\n    }),\n    inputProps: {\n      onClick: openRangeEndSelection,\n      onKeyDown: onSpaceOrEnter(openRangeEndSelection),\n      onFocus: focusOnRangeEnd\n    }\n  }));\n  return /*#__PURE__*/_jsx(DateRangePickerInputRoot, {\n    onBlur: onBlur,\n    ref: ref,\n    children: renderInput(startInputProps, endInputProps)\n  });\n});","map":{"version":3,"sources":["E:/React/pos-system/main/node_modules/@mui/x-date-pickers-pro/DateRangePicker/DateRangePickerInput.js"],"names":["_extends","_objectWithoutPropertiesLoose","_excluded","React","styled","useUtils","executeInTheNextEventLoopTick","useMaskedInput","onSpaceOrEnter","jsx","_jsx","DateRangePickerInputRoot","theme","display","alignItems","breakpoints","down","flexDirection","DateRangePickerInput","forwardRef","props","ref","currentlySelectingRangeEnd","disableOpenPicker","endText","onBlur","onChange","open","openPicker","rawValue","start","end","readOnly","renderInput","setCurrentlySelectingRangeEnd","startText","TextFieldProps","validationError","startValidationError","endValidationError","other","utils","startRef","useRef","endRef","useEffect","_startRef$current","current","focus","_endRef$current","lazyHandleChangeCallback","useCallback","args","handleStartChange","date","inputString","handleEndChange","openRangeStartSelection","openRangeEndSelection","focusOnRangeEnd","focusOnRangeStart","startInputProps","label","focused","inputProps","onClick","onKeyDown","onFocus","endInputProps","children"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"currentlySelectingRangeEnd\", \"disableOpenPicker\", \"endText\", \"onBlur\", \"onChange\", \"open\", \"openPicker\", \"rawValue\", \"rawValue\", \"readOnly\", \"renderInput\", \"setCurrentlySelectingRangeEnd\", \"startText\", \"TextFieldProps\", \"validationError\"];\nimport * as React from 'react';\nimport { styled } from '@mui/material/styles';\nimport { useUtils, executeInTheNextEventLoopTick, useMaskedInput, onSpaceOrEnter } from '@mui/x-date-pickers/internals';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DateRangePickerInputRoot = styled('div')(({\n  theme\n}) => ({\n  display: 'flex',\n  alignItems: 'baseline',\n  [theme.breakpoints.down('xs')]: {\n    flexDirection: 'column',\n    alignItems: 'center'\n  }\n}));\n\n/**\n * @ignore - internal component.\n */\nexport const DateRangePickerInput = /*#__PURE__*/React.forwardRef(function DateRangePickerInput(props, ref) {\n  const {\n    currentlySelectingRangeEnd,\n    disableOpenPicker,\n    endText,\n    onBlur,\n    onChange,\n    open,\n    openPicker,\n    rawValue: [start, end],\n    readOnly,\n    renderInput,\n    setCurrentlySelectingRangeEnd,\n    startText,\n    TextFieldProps,\n    validationError: [startValidationError, endValidationError]\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const utils = useUtils();\n  const startRef = React.useRef(null);\n  const endRef = React.useRef(null);\n  React.useEffect(() => {\n    if (!open) {\n      return;\n    }\n\n    if (currentlySelectingRangeEnd === 'start') {\n      var _startRef$current;\n\n      (_startRef$current = startRef.current) == null ? void 0 : _startRef$current.focus();\n    } else if (currentlySelectingRangeEnd === 'end') {\n      var _endRef$current;\n\n      (_endRef$current = endRef.current) == null ? void 0 : _endRef$current.focus();\n    }\n  }, [currentlySelectingRangeEnd, open]); // TODO: rethink this approach. We do not need to wait for calendar to be updated to rerender input (looks like freezing)\n  // TODO: so simply break 1 react's commit phase in 2 (first for input and second for calendars) by executing onChange in the next tick\n\n  const lazyHandleChangeCallback = React.useCallback((...args) => executeInTheNextEventLoopTick(() => onChange(...args)), [onChange]);\n\n  const handleStartChange = (date, inputString) => {\n    lazyHandleChangeCallback([date, utils.date(end)], inputString);\n  };\n\n  const handleEndChange = (date, inputString) => {\n    lazyHandleChangeCallback([utils.date(start), date], inputString);\n  };\n\n  const openRangeStartSelection = () => {\n    if (setCurrentlySelectingRangeEnd) {\n      setCurrentlySelectingRangeEnd('start');\n    }\n\n    if (!readOnly && !disableOpenPicker) {\n      openPicker();\n    }\n  };\n\n  const openRangeEndSelection = () => {\n    if (setCurrentlySelectingRangeEnd) {\n      setCurrentlySelectingRangeEnd('end');\n    }\n\n    if (!readOnly && !disableOpenPicker) {\n      openPicker();\n    }\n  };\n\n  const focusOnRangeEnd = () => {\n    if (open && setCurrentlySelectingRangeEnd) {\n      setCurrentlySelectingRangeEnd('end');\n    }\n  };\n\n  const focusOnRangeStart = () => {\n    if (open && setCurrentlySelectingRangeEnd) {\n      setCurrentlySelectingRangeEnd('start');\n    }\n  };\n\n  const startInputProps = useMaskedInput(_extends({}, other, {\n    readOnly,\n    rawValue: start,\n    onChange: handleStartChange,\n    label: startText,\n    validationError: startValidationError !== null,\n    TextFieldProps: _extends({}, TextFieldProps, {\n      ref: startRef,\n      focused: open && currentlySelectingRangeEnd === 'start'\n    }),\n    inputProps: {\n      onClick: openRangeStartSelection,\n      onKeyDown: onSpaceOrEnter(openRangeStartSelection),\n      onFocus: focusOnRangeStart\n    }\n  }));\n  const endInputProps = useMaskedInput(_extends({}, other, {\n    readOnly,\n    label: endText,\n    rawValue: end,\n    onChange: handleEndChange,\n    validationError: endValidationError !== null,\n    TextFieldProps: _extends({}, TextFieldProps, {\n      ref: endRef,\n      focused: open && currentlySelectingRangeEnd === 'end'\n    }),\n    inputProps: {\n      onClick: openRangeEndSelection,\n      onKeyDown: onSpaceOrEnter(openRangeEndSelection),\n      onFocus: focusOnRangeEnd\n    }\n  }));\n  return /*#__PURE__*/_jsx(DateRangePickerInputRoot, {\n    onBlur: onBlur,\n    ref: ref,\n    children: renderInput(startInputProps, endInputProps)\n  });\n});"]},"metadata":{},"sourceType":"module"}