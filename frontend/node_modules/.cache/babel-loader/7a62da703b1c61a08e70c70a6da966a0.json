{"ast":null,"code":"import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { useTheme, styled, useThemeProps as useThemProps } from '@mui/material/styles';\nimport { unstable_composeClasses as composeClasses } from '@mui/material';\nimport clsx from 'clsx';\nimport { PickersYear } from './PickersYear';\nimport { useUtils, useNow, useDefaultDates } from '../internals/hooks/useUtils';\nimport { WrapperVariantContext } from '../internals/components/wrappers/WrapperVariantContext';\nimport { getYearPickerUtilityClass } from './yearPickerClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getYearPickerUtilityClass, classes);\n};\n\nconst YearPickerRoot = styled('div', {\n  name: 'MuiYearPicker',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({\n  display: 'flex',\n  flexDirection: 'row',\n  flexWrap: 'wrap',\n  overflowY: 'auto',\n  height: '100%',\n  margin: '0 4px'\n});\nexport const YearPicker = /*#__PURE__*/React.forwardRef(function YearPicker(inProps, ref) {\n  const now = useNow();\n  const theme = useTheme();\n  const utils = useUtils();\n  const defaultProps = useDefaultDates();\n  const props = useThemProps({\n    props: inProps,\n    name: 'MuiYearPicker'\n  });\n  const {\n    autoFocus,\n    className,\n    date,\n    disabled,\n    disableFuture,\n    disablePast,\n    maxDate = defaultProps.maxDate,\n    minDate = defaultProps.minDate,\n    onChange,\n    readOnly,\n    shouldDisableYear\n  } = props;\n  const ownerState = props;\n  const classes = useUtilityClasses(ownerState);\n  const selectedDate = date || now;\n  const currentYear = utils.getYear(selectedDate);\n  const wrapperVariant = React.useContext(WrapperVariantContext);\n  const selectedYearRef = React.useRef(null);\n  const [focusedYear, setFocusedYear] = React.useState(currentYear);\n  const isYearDisabled = React.useCallback(dateToValidate => {\n    if (disablePast && utils.isBeforeYear(dateToValidate, now)) {\n      return true;\n    }\n\n    if (disableFuture && utils.isAfterYear(dateToValidate, now)) {\n      return true;\n    }\n\n    if (minDate && utils.isBeforeYear(dateToValidate, minDate)) {\n      return true;\n    }\n\n    if (maxDate && utils.isAfterYear(dateToValidate, maxDate)) {\n      return true;\n    }\n\n    if (shouldDisableYear && shouldDisableYear(dateToValidate)) {\n      return true;\n    }\n\n    return false;\n  }, [disableFuture, disablePast, maxDate, minDate, now, shouldDisableYear, utils]);\n\n  const handleYearSelection = function (event, year) {\n    let isFinish = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'finish';\n\n    if (readOnly) {\n      return;\n    }\n\n    const newDate = utils.setYear(selectedDate, year);\n    onChange(newDate, isFinish);\n  };\n\n  const focusYear = React.useCallback(year => {\n    if (!isYearDisabled(utils.setYear(selectedDate, year))) {\n      setFocusedYear(year);\n    }\n  }, [selectedDate, isYearDisabled, utils]);\n  const yearsInRow = wrapperVariant === 'desktop' ? 4 : 3;\n\n  const handleKeyDown = (event, year) => {\n    switch (event.key) {\n      case 'ArrowUp':\n        focusYear(year - yearsInRow);\n        event.preventDefault();\n        break;\n\n      case 'ArrowDown':\n        focusYear(year + yearsInRow);\n        event.preventDefault();\n        break;\n\n      case 'ArrowLeft':\n        focusYear(year + (theme.direction === 'ltr' ? -1 : 1));\n        event.preventDefault();\n        break;\n\n      case 'ArrowRight':\n        focusYear(year + (theme.direction === 'ltr' ? 1 : -1));\n        event.preventDefault();\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  return /*#__PURE__*/_jsx(YearPickerRoot, {\n    ref: ref,\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    children: utils.getYearRange(minDate, maxDate).map(year => {\n      const yearNumber = utils.getYear(year);\n      const selected = yearNumber === currentYear;\n      return /*#__PURE__*/_jsx(PickersYear, {\n        selected: selected,\n        value: yearNumber,\n        onClick: handleYearSelection,\n        onKeyDown: handleKeyDown,\n        autoFocus: autoFocus && yearNumber === focusedYear,\n        ref: selected ? selectedYearRef : undefined,\n        disabled: disabled || isYearDisabled(year),\n        children: utils.format(year, 'year')\n      }, utils.format(year, 'year'));\n    })\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? YearPicker.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  autoFocus: PropTypes.bool,\n  classes: PropTypes.object,\n  className: PropTypes.string,\n  date: PropTypes.any,\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true` future days are disabled.\n   * @default false\n   */\n  disableFuture: PropTypes.bool,\n\n  /**\n   * If `true` past days are disabled.\n   * @default false\n   */\n  disablePast: PropTypes.bool,\n\n  /**\n   * Maximal selectable date. @DateIOType\n   */\n  maxDate: PropTypes.any,\n\n  /**\n   * Minimal selectable date. @DateIOType\n   */\n  minDate: PropTypes.any,\n  onChange: PropTypes.func.isRequired,\n  onFocusedDayChange: PropTypes.func,\n  readOnly: PropTypes.bool,\n\n  /**\n   * Disable specific years dynamically.\n   * Works like `shouldDisableDate` but for year selection view @DateIOType.\n   * @template TDate\n   * @param {TDate} year The year to test.\n   * @returns {boolean} Returns `true` if the year should be disabled.\n   */\n  shouldDisableYear: PropTypes.func\n} : void 0;","map":{"version":3,"sources":["E:/React/pos-system/main/node_modules/@mui/x-date-pickers/YearPicker/YearPicker.js"],"names":["React","PropTypes","useTheme","styled","useThemeProps","useThemProps","unstable_composeClasses","composeClasses","clsx","PickersYear","useUtils","useNow","useDefaultDates","WrapperVariantContext","getYearPickerUtilityClass","jsx","_jsx","useUtilityClasses","ownerState","classes","slots","root","YearPickerRoot","name","slot","overridesResolver","props","styles","display","flexDirection","flexWrap","overflowY","height","margin","YearPicker","forwardRef","inProps","ref","now","theme","utils","defaultProps","autoFocus","className","date","disabled","disableFuture","disablePast","maxDate","minDate","onChange","readOnly","shouldDisableYear","selectedDate","currentYear","getYear","wrapperVariant","useContext","selectedYearRef","useRef","focusedYear","setFocusedYear","useState","isYearDisabled","useCallback","dateToValidate","isBeforeYear","isAfterYear","handleYearSelection","event","year","isFinish","newDate","setYear","focusYear","yearsInRow","handleKeyDown","key","preventDefault","direction","children","getYearRange","map","yearNumber","selected","value","onClick","onKeyDown","undefined","format","process","env","NODE_ENV","propTypes","bool","object","string","any","func","isRequired","onFocusedDayChange"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { useTheme, styled, useThemeProps as useThemProps } from '@mui/material/styles';\nimport { unstable_composeClasses as composeClasses } from '@mui/material';\nimport clsx from 'clsx';\nimport { PickersYear } from './PickersYear';\nimport { useUtils, useNow, useDefaultDates } from '../internals/hooks/useUtils';\nimport { WrapperVariantContext } from '../internals/components/wrappers/WrapperVariantContext';\nimport { getYearPickerUtilityClass } from './yearPickerClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getYearPickerUtilityClass, classes);\n};\n\nconst YearPickerRoot = styled('div', {\n  name: 'MuiYearPicker',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({\n  display: 'flex',\n  flexDirection: 'row',\n  flexWrap: 'wrap',\n  overflowY: 'auto',\n  height: '100%',\n  margin: '0 4px'\n});\nexport const YearPicker = /*#__PURE__*/React.forwardRef(function YearPicker(inProps, ref) {\n  const now = useNow();\n  const theme = useTheme();\n  const utils = useUtils();\n  const defaultProps = useDefaultDates();\n  const props = useThemProps({\n    props: inProps,\n    name: 'MuiYearPicker'\n  });\n  const {\n    autoFocus,\n    className,\n    date,\n    disabled,\n    disableFuture,\n    disablePast,\n    maxDate = defaultProps.maxDate,\n    minDate = defaultProps.minDate,\n    onChange,\n    readOnly,\n    shouldDisableYear\n  } = props;\n  const ownerState = props;\n  const classes = useUtilityClasses(ownerState);\n  const selectedDate = date || now;\n  const currentYear = utils.getYear(selectedDate);\n  const wrapperVariant = React.useContext(WrapperVariantContext);\n  const selectedYearRef = React.useRef(null);\n  const [focusedYear, setFocusedYear] = React.useState(currentYear);\n  const isYearDisabled = React.useCallback(dateToValidate => {\n    if (disablePast && utils.isBeforeYear(dateToValidate, now)) {\n      return true;\n    }\n\n    if (disableFuture && utils.isAfterYear(dateToValidate, now)) {\n      return true;\n    }\n\n    if (minDate && utils.isBeforeYear(dateToValidate, minDate)) {\n      return true;\n    }\n\n    if (maxDate && utils.isAfterYear(dateToValidate, maxDate)) {\n      return true;\n    }\n\n    if (shouldDisableYear && shouldDisableYear(dateToValidate)) {\n      return true;\n    }\n\n    return false;\n  }, [disableFuture, disablePast, maxDate, minDate, now, shouldDisableYear, utils]);\n\n  const handleYearSelection = (event, year, isFinish = 'finish') => {\n    if (readOnly) {\n      return;\n    }\n\n    const newDate = utils.setYear(selectedDate, year);\n    onChange(newDate, isFinish);\n  };\n\n  const focusYear = React.useCallback(year => {\n    if (!isYearDisabled(utils.setYear(selectedDate, year))) {\n      setFocusedYear(year);\n    }\n  }, [selectedDate, isYearDisabled, utils]);\n  const yearsInRow = wrapperVariant === 'desktop' ? 4 : 3;\n\n  const handleKeyDown = (event, year) => {\n    switch (event.key) {\n      case 'ArrowUp':\n        focusYear(year - yearsInRow);\n        event.preventDefault();\n        break;\n\n      case 'ArrowDown':\n        focusYear(year + yearsInRow);\n        event.preventDefault();\n        break;\n\n      case 'ArrowLeft':\n        focusYear(year + (theme.direction === 'ltr' ? -1 : 1));\n        event.preventDefault();\n        break;\n\n      case 'ArrowRight':\n        focusYear(year + (theme.direction === 'ltr' ? 1 : -1));\n        event.preventDefault();\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  return /*#__PURE__*/_jsx(YearPickerRoot, {\n    ref: ref,\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    children: utils.getYearRange(minDate, maxDate).map(year => {\n      const yearNumber = utils.getYear(year);\n      const selected = yearNumber === currentYear;\n      return /*#__PURE__*/_jsx(PickersYear, {\n        selected: selected,\n        value: yearNumber,\n        onClick: handleYearSelection,\n        onKeyDown: handleKeyDown,\n        autoFocus: autoFocus && yearNumber === focusedYear,\n        ref: selected ? selectedYearRef : undefined,\n        disabled: disabled || isYearDisabled(year),\n        children: utils.format(year, 'year')\n      }, utils.format(year, 'year'));\n    })\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? YearPicker.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  autoFocus: PropTypes.bool,\n  classes: PropTypes.object,\n  className: PropTypes.string,\n  date: PropTypes.any,\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true` future days are disabled.\n   * @default false\n   */\n  disableFuture: PropTypes.bool,\n\n  /**\n   * If `true` past days are disabled.\n   * @default false\n   */\n  disablePast: PropTypes.bool,\n\n  /**\n   * Maximal selectable date. @DateIOType\n   */\n  maxDate: PropTypes.any,\n\n  /**\n   * Minimal selectable date. @DateIOType\n   */\n  minDate: PropTypes.any,\n  onChange: PropTypes.func.isRequired,\n  onFocusedDayChange: PropTypes.func,\n  readOnly: PropTypes.bool,\n\n  /**\n   * Disable specific years dynamically.\n   * Works like `shouldDisableDate` but for year selection view @DateIOType.\n   * @template TDate\n   * @param {TDate} year The year to test.\n   * @returns {boolean} Returns `true` if the year should be disabled.\n   */\n  shouldDisableYear: PropTypes.func\n} : void 0;"]},"metadata":{},"sourceType":"module"}