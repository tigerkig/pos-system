{"ast":null,"code":"import { md5 } from '../encoding/md5';\nimport { base64Encode } from '../encoding/base64';\nimport { LICENSE_SCOPES } from '../utils/licenseScope';\nimport { LICENSING_MODELS } from '../utils/licensingModel';\nconst licenseVersion = '2';\n\nfunction getClearLicenseString(details) {\n  var _details$scope, _details$licensingMod;\n\n  if (details.scope && !LICENSE_SCOPES.includes(details.scope)) {\n    throw new Error('MUI: Invalid scope');\n  }\n\n  if (details.licensingModel && !LICENSING_MODELS.includes(details.licensingModel)) {\n    throw new Error('MUI: Invalid sales model');\n  }\n\n  return `O=${details.orderNumber},E=${details.expiryDate.getTime()},S=${(_details$scope = details.scope) != null ? _details$scope : 'pro'},LM=${(_details$licensingMod = details.licensingModel) != null ? _details$licensingMod : 'perpetual'},KV=${licenseVersion}`;\n}\n\nexport function generateLicense(details) {\n  const licenseStr = getClearLicenseString(details);\n  return `${md5(base64Encode(licenseStr))}${base64Encode(licenseStr)}`;\n}","map":{"version":3,"sources":["E:/React/pos-system/main/node_modules/@mui/x-license-pro/generateLicense/generateLicense.js"],"names":["md5","base64Encode","LICENSE_SCOPES","LICENSING_MODELS","licenseVersion","getClearLicenseString","details","_details$scope","_details$licensingMod","scope","includes","Error","licensingModel","orderNumber","expiryDate","getTime","generateLicense","licenseStr"],"mappings":"AAAA,SAASA,GAAT,QAAoB,iBAApB;AACA,SAASC,YAAT,QAA6B,oBAA7B;AACA,SAASC,cAAT,QAA+B,uBAA/B;AACA,SAASC,gBAAT,QAAiC,yBAAjC;AACA,MAAMC,cAAc,GAAG,GAAvB;;AAEA,SAASC,qBAAT,CAA+BC,OAA/B,EAAwC;AACtC,MAAIC,cAAJ,EAAoBC,qBAApB;;AAEA,MAAIF,OAAO,CAACG,KAAR,IAAiB,CAACP,cAAc,CAACQ,QAAf,CAAwBJ,OAAO,CAACG,KAAhC,CAAtB,EAA8D;AAC5D,UAAM,IAAIE,KAAJ,CAAU,oBAAV,CAAN;AACD;;AAED,MAAIL,OAAO,CAACM,cAAR,IAA0B,CAACT,gBAAgB,CAACO,QAAjB,CAA0BJ,OAAO,CAACM,cAAlC,CAA/B,EAAkF;AAChF,UAAM,IAAID,KAAJ,CAAU,0BAAV,CAAN;AACD;;AAED,SAAQ,KAAIL,OAAO,CAACO,WAAY,MAAKP,OAAO,CAACQ,UAAR,CAAmBC,OAAnB,EAA6B,MAAK,CAACR,cAAc,GAAGD,OAAO,CAACG,KAA1B,KAAoC,IAApC,GAA2CF,cAA3C,GAA4D,KAAM,OAAM,CAACC,qBAAqB,GAAGF,OAAO,CAACM,cAAjC,KAAoD,IAApD,GAA2DJ,qBAA3D,GAAmF,WAAY,OAAMJ,cAAe,EAAnQ;AACD;;AAED,OAAO,SAASY,eAAT,CAAyBV,OAAzB,EAAkC;AACvC,QAAMW,UAAU,GAAGZ,qBAAqB,CAACC,OAAD,CAAxC;AACA,SAAQ,GAAEN,GAAG,CAACC,YAAY,CAACgB,UAAD,CAAb,CAA2B,GAAEhB,YAAY,CAACgB,UAAD,CAAa,EAAnE;AACD","sourcesContent":["import { md5 } from '../encoding/md5';\nimport { base64Encode } from '../encoding/base64';\nimport { LICENSE_SCOPES } from '../utils/licenseScope';\nimport { LICENSING_MODELS } from '../utils/licensingModel';\nconst licenseVersion = '2';\n\nfunction getClearLicenseString(details) {\n  var _details$scope, _details$licensingMod;\n\n  if (details.scope && !LICENSE_SCOPES.includes(details.scope)) {\n    throw new Error('MUI: Invalid scope');\n  }\n\n  if (details.licensingModel && !LICENSING_MODELS.includes(details.licensingModel)) {\n    throw new Error('MUI: Invalid sales model');\n  }\n\n  return `O=${details.orderNumber},E=${details.expiryDate.getTime()},S=${(_details$scope = details.scope) != null ? _details$scope : 'pro'},LM=${(_details$licensingMod = details.licensingModel) != null ? _details$licensingMod : 'perpetual'},KV=${licenseVersion}`;\n}\n\nexport function generateLicense(details) {\n  const licenseStr = getClearLicenseString(details);\n  return `${md5(base64Encode(licenseStr))}${base64Encode(licenseStr)}`;\n}"]},"metadata":{},"sourceType":"module"}