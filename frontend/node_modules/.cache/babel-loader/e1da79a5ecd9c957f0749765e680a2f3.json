{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ArrowDownLineIcon from '@rsuite/icons/ArrowDownLine';\nimport { useClassNames } from '../utils';\nimport SidenavItem from './SidenavItem';\n/**\n * @private this component is not supposed to be used directly\n *          Instead it's rendered by a <Nav.Menu> call\n *\n * <Nav>\n *   <Nav.Menu> -> This will render <NavDropdown> component that renders a <NavDropdownToggle>\n *   </Nav.Menu>\n * </Nav>\n */\n\nvar SidenavDropdownToggle = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var _props$as = props.as,\n      Component = _props$as === void 0 ? SidenavItem : _props$as,\n      className = props.className,\n      _props$classPrefix = props.classPrefix,\n      classPrefix = _props$classPrefix === void 0 ? 'dropdown-toggle' : _props$classPrefix,\n      renderToggle = props.renderToggle,\n      children = props.children,\n      noCaret = props.noCaret,\n      rest = _objectWithoutPropertiesLoose(props, [\"as\", \"className\", \"classPrefix\", \"renderToggle\", \"children\", \"noCaret\"]);\n\n  var _useClassNames = useClassNames(classPrefix),\n      prefix = _useClassNames.prefix,\n      withClassPrefix = _useClassNames.withClassPrefix,\n      merge = _useClassNames.merge;\n\n  var classes = merge(className, withClassPrefix({\n    'no-caret': noCaret\n  }));\n  var toggle = /*#__PURE__*/React.createElement(Component, _extends({}, rest, {\n    ref: ref,\n    className: classes,\n    tooltip: children\n  }), children, !noCaret && /*#__PURE__*/React.createElement(ArrowDownLineIcon, {\n    className: prefix('caret')\n  }));\n  return renderToggle ? renderToggle(rest, ref) : toggle;\n});\nSidenavDropdownToggle.displayName = 'Sidenav.Dropdown.Toggle';\nSidenavDropdownToggle.propTypes = {\n  className: PropTypes.string,\n  children: PropTypes.node,\n  classPrefix: PropTypes.string,\n  noCaret: PropTypes.bool,\n  as: PropTypes.elementType,\n  renderToggle: PropTypes.func,\n  placement: PropTypes.oneOf(['bottomStart', 'bottomEnd', 'topStart', 'topEnd', 'leftStart', 'rightStart', 'leftEnd', 'rightEnd'])\n};\nexport default SidenavDropdownToggle;","map":{"version":3,"sources":["E:/React/pos-system/main/node_modules/rsuite/esm/Sidenav/SidenavDropdownToggle.js"],"names":["_extends","_objectWithoutPropertiesLoose","React","PropTypes","ArrowDownLineIcon","useClassNames","SidenavItem","SidenavDropdownToggle","forwardRef","props","ref","_props$as","as","Component","className","_props$classPrefix","classPrefix","renderToggle","children","noCaret","rest","_useClassNames","prefix","withClassPrefix","merge","classes","toggle","createElement","tooltip","displayName","propTypes","string","node","bool","elementType","func","placement","oneOf"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ArrowDownLineIcon from '@rsuite/icons/ArrowDownLine';\nimport { useClassNames } from '../utils';\nimport SidenavItem from './SidenavItem';\n\n/**\n * @private this component is not supposed to be used directly\n *          Instead it's rendered by a <Nav.Menu> call\n *\n * <Nav>\n *   <Nav.Menu> -> This will render <NavDropdown> component that renders a <NavDropdownToggle>\n *   </Nav.Menu>\n * </Nav>\n */\nvar SidenavDropdownToggle = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var _props$as = props.as,\n      Component = _props$as === void 0 ? SidenavItem : _props$as,\n      className = props.className,\n      _props$classPrefix = props.classPrefix,\n      classPrefix = _props$classPrefix === void 0 ? 'dropdown-toggle' : _props$classPrefix,\n      renderToggle = props.renderToggle,\n      children = props.children,\n      noCaret = props.noCaret,\n      rest = _objectWithoutPropertiesLoose(props, [\"as\", \"className\", \"classPrefix\", \"renderToggle\", \"children\", \"noCaret\"]);\n\n  var _useClassNames = useClassNames(classPrefix),\n      prefix = _useClassNames.prefix,\n      withClassPrefix = _useClassNames.withClassPrefix,\n      merge = _useClassNames.merge;\n\n  var classes = merge(className, withClassPrefix({\n    'no-caret': noCaret\n  }));\n  var toggle = /*#__PURE__*/React.createElement(Component, _extends({}, rest, {\n    ref: ref,\n    className: classes,\n    tooltip: children\n  }), children, !noCaret && /*#__PURE__*/React.createElement(ArrowDownLineIcon, {\n    className: prefix('caret')\n  }));\n  return renderToggle ? renderToggle(rest, ref) : toggle;\n});\nSidenavDropdownToggle.displayName = 'Sidenav.Dropdown.Toggle';\nSidenavDropdownToggle.propTypes = {\n  className: PropTypes.string,\n  children: PropTypes.node,\n  classPrefix: PropTypes.string,\n  noCaret: PropTypes.bool,\n  as: PropTypes.elementType,\n  renderToggle: PropTypes.func,\n  placement: PropTypes.oneOf(['bottomStart', 'bottomEnd', 'topStart', 'topEnd', 'leftStart', 'rightStart', 'leftEnd', 'rightEnd'])\n};\nexport default SidenavDropdownToggle;"]},"metadata":{},"sourceType":"module"}