{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React, { useContext, useMemo, useReducer } from 'react';\nimport PropTypes from 'prop-types';\nimport omit from 'lodash/omit';\nimport pick from 'lodash/pick';\nimport { mergeRefs, PLACEMENT_8, placementPolyfill, useClassNames } from '../utils';\nimport deprecatePropType from '../utils/deprecatePropType';\nimport { initialState, reducer } from '../Dropdown/DropdownState';\nimport Menu from '../Menu/Menu';\nimport kebabCase from 'lodash/kebabCase';\nimport NavContext from './NavContext';\nimport NavDropdownItem from './NavDropdownItem';\nimport NavDropdownMenu from './NavDropdownMenu';\nimport NavDropdownToggle from './NavDropdownToggle';\n/**\n * @private this component is not supposed to be used directly\n *          Instead it's rendered by a <Nav.Menu> call\n *\n * <Nav>\n *   <Nav.Menu> -> This will render <NavDropdown> component\n *   </Nav.Menu>\n * </Nav>\n */\n\nvar NavDropdown = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var nav = useContext(NavContext);\n\n  if (!nav) {\n    throw new Error('<Nav.Dropdown> must be rendered within a <Nav> component.');\n  }\n\n  var _props$as = props.as,\n      Component = _props$as === void 0 ? 'div' : _props$as,\n      title = props.title,\n      onClose = props.onClose,\n      onOpen = props.onOpen,\n      onToggle = props.onToggle,\n      eventKey = props.eventKey,\n      _props$trigger = props.trigger,\n      trigger = _props$trigger === void 0 ? 'click' : _props$trigger,\n      _props$placement = props.placement,\n      placement = _props$placement === void 0 ? 'bottomStart' : _props$placement,\n      toggleAs = props.toggleAs,\n      toggleClassName = props.toggleClassName,\n      _props$classPrefix = props.classPrefix,\n      classPrefix = _props$classPrefix === void 0 ? 'dropdown' : _props$classPrefix,\n      className = props.className,\n      disabled = props.disabled,\n      children = props.children,\n      menuStyle = props.menuStyle,\n      style = props.style,\n      toggleProps = _objectWithoutPropertiesLoose(props, [\"as\", \"title\", \"onClose\", \"onOpen\", \"onToggle\", \"eventKey\", \"trigger\", \"placement\", \"toggleAs\", \"toggleClassName\", \"classPrefix\", \"className\", \"disabled\", \"children\", \"menuStyle\", \"style\"]);\n\n  var _useClassNames = useClassNames(classPrefix),\n      merge = _useClassNames.merge,\n      withClassPrefix = _useClassNames.withClassPrefix;\n\n  var _useClassNames2 = useClassNames('dropdown-menu'),\n      withMenuClassPrefix = _useClassNames2.withClassPrefix,\n      mergeMenuClassName = _useClassNames2.merge;\n\n  var menuButtonTriggers = useMemo(function () {\n    if (!trigger) {\n      return undefined;\n    }\n\n    var triggerMap = {\n      hover: 'mouseover',\n      click: 'click',\n      contextMenu: 'contextmenu'\n    };\n\n    if (!Array.isArray(trigger)) {\n      return [triggerMap[trigger]];\n    }\n\n    return trigger.map(function (t) {\n      return triggerMap[t];\n    });\n  }, [trigger]);\n\n  var _useReducer = useReducer(reducer, initialState),\n      items = _useReducer[0].items;\n\n  var hasSelectedItem = useMemo(function () {\n    return items.some(function (item) {\n      return item.props.selected;\n    });\n  }, [items]);\n\n  var renderMenuButton = function renderMenuButton(menuButtonProps, menuButtonRef) {\n    return /*#__PURE__*/React.createElement(NavDropdownToggle, _extends({\n      ref: menuButtonRef,\n      as: toggleAs,\n      className: toggleClassName,\n      placement: placement,\n      disabled: disabled\n    }, omit(menuButtonProps, ['open']), omit(toggleProps, ['data-testid'])), title);\n  };\n\n  return /*#__PURE__*/React.createElement(Menu, {\n    renderMenuButton: renderMenuButton,\n    openMenuOn: menuButtonTriggers,\n    renderMenuPopup: function renderMenuPopup(_ref, popupRef) {\n      var open = _ref.open,\n          popupProps = _objectWithoutPropertiesLoose(_ref, [\"open\"]);\n\n      var menuClassName = mergeMenuClassName(className, withMenuClassPrefix());\n      return /*#__PURE__*/React.createElement(\"ul\", _extends({\n        ref: popupRef,\n        className: menuClassName,\n        style: menuStyle,\n        hidden: !open\n      }, popupProps), children);\n    },\n    onToggleMenu: function onToggleMenu(open, event) {\n      onToggle === null || onToggle === void 0 ? void 0 : onToggle(open, eventKey, event);\n\n      if (open) {\n        onOpen === null || onOpen === void 0 ? void 0 : onOpen();\n      } else {\n        onClose === null || onClose === void 0 ? void 0 : onClose();\n      }\n    }\n  }, function (_ref2, menuContainerRef) {\n    var _withClassPrefix;\n\n    var open = _ref2.open,\n        menuContainer = _objectWithoutPropertiesLoose(_ref2, [\"open\"]);\n\n    var classes = merge(className, withClassPrefix((_withClassPrefix = {}, _withClassPrefix[\"placement-\" + kebabCase(placementPolyfill(placement))] = !!placement, _withClassPrefix.disabled = disabled, _withClassPrefix.open = open, _withClassPrefix['selected-within'] = hasSelectedItem, _withClassPrefix)));\n    return /*#__PURE__*/React.createElement(Component, _extends({\n      ref: mergeRefs(ref, menuContainerRef),\n      className: classes\n    }, menuContainer, pick(toggleProps, ['data-testid']), {\n      style: style\n    }));\n  });\n});\nNavDropdown.Item = NavDropdownItem;\nNavDropdown.Menu = NavDropdownMenu;\nNavDropdown.displayName = 'Nav.Dropdown';\nNavDropdown.propTypes = {\n  classPrefix: PropTypes.string,\n  trigger: PropTypes.oneOfType([PropTypes.array, PropTypes.oneOf(['click', 'hover', 'contextMenu'])]),\n  placement: PropTypes.oneOf(PLACEMENT_8),\n  title: PropTypes.node,\n  disabled: PropTypes.bool,\n  icon: PropTypes.node,\n  menuStyle: PropTypes.object,\n  className: PropTypes.string,\n  toggleClassName: PropTypes.string,\n  children: PropTypes.node,\n  open: deprecatePropType(PropTypes.bool),\n  eventKey: PropTypes.any,\n  as: PropTypes.elementType,\n  toggleAs: PropTypes.elementType,\n  noCaret: PropTypes.bool,\n  style: PropTypes.object,\n  onClose: PropTypes.func,\n  onOpen: PropTypes.func,\n  onToggle: PropTypes.func,\n  onMouseEnter: PropTypes.func,\n  onMouseLeave: PropTypes.func,\n  onContextMenu: PropTypes.func,\n  onClick: PropTypes.func,\n  renderToggle: PropTypes.func\n};\nexport default NavDropdown;","map":{"version":3,"sources":["E:/React/pos-system/main/node_modules/rsuite/esm/Nav/NavDropdown.js"],"names":["_extends","_objectWithoutPropertiesLoose","React","useContext","useMemo","useReducer","PropTypes","omit","pick","mergeRefs","PLACEMENT_8","placementPolyfill","useClassNames","deprecatePropType","initialState","reducer","Menu","kebabCase","NavContext","NavDropdownItem","NavDropdownMenu","NavDropdownToggle","NavDropdown","forwardRef","props","ref","nav","Error","_props$as","as","Component","title","onClose","onOpen","onToggle","eventKey","_props$trigger","trigger","_props$placement","placement","toggleAs","toggleClassName","_props$classPrefix","classPrefix","className","disabled","children","menuStyle","style","toggleProps","_useClassNames","merge","withClassPrefix","_useClassNames2","withMenuClassPrefix","mergeMenuClassName","menuButtonTriggers","undefined","triggerMap","hover","click","contextMenu","Array","isArray","map","t","_useReducer","items","hasSelectedItem","some","item","selected","renderMenuButton","menuButtonProps","menuButtonRef","createElement","openMenuOn","renderMenuPopup","_ref","popupRef","open","popupProps","menuClassName","hidden","onToggleMenu","event","_ref2","menuContainerRef","_withClassPrefix","menuContainer","classes","Item","displayName","propTypes","string","oneOfType","array","oneOf","node","bool","icon","object","any","elementType","noCaret","func","onMouseEnter","onMouseLeave","onContextMenu","onClick","renderToggle"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React, { useContext, useMemo, useReducer } from 'react';\nimport PropTypes from 'prop-types';\nimport omit from 'lodash/omit';\nimport pick from 'lodash/pick';\nimport { mergeRefs, PLACEMENT_8, placementPolyfill, useClassNames } from '../utils';\nimport deprecatePropType from '../utils/deprecatePropType';\nimport { initialState, reducer } from '../Dropdown/DropdownState';\nimport Menu from '../Menu/Menu';\nimport kebabCase from 'lodash/kebabCase';\nimport NavContext from './NavContext';\nimport NavDropdownItem from './NavDropdownItem';\nimport NavDropdownMenu from './NavDropdownMenu';\nimport NavDropdownToggle from './NavDropdownToggle';\n\n/**\n * @private this component is not supposed to be used directly\n *          Instead it's rendered by a <Nav.Menu> call\n *\n * <Nav>\n *   <Nav.Menu> -> This will render <NavDropdown> component\n *   </Nav.Menu>\n * </Nav>\n */\nvar NavDropdown = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var nav = useContext(NavContext);\n\n  if (!nav) {\n    throw new Error('<Nav.Dropdown> must be rendered within a <Nav> component.');\n  }\n\n  var _props$as = props.as,\n      Component = _props$as === void 0 ? 'div' : _props$as,\n      title = props.title,\n      onClose = props.onClose,\n      onOpen = props.onOpen,\n      onToggle = props.onToggle,\n      eventKey = props.eventKey,\n      _props$trigger = props.trigger,\n      trigger = _props$trigger === void 0 ? 'click' : _props$trigger,\n      _props$placement = props.placement,\n      placement = _props$placement === void 0 ? 'bottomStart' : _props$placement,\n      toggleAs = props.toggleAs,\n      toggleClassName = props.toggleClassName,\n      _props$classPrefix = props.classPrefix,\n      classPrefix = _props$classPrefix === void 0 ? 'dropdown' : _props$classPrefix,\n      className = props.className,\n      disabled = props.disabled,\n      children = props.children,\n      menuStyle = props.menuStyle,\n      style = props.style,\n      toggleProps = _objectWithoutPropertiesLoose(props, [\"as\", \"title\", \"onClose\", \"onOpen\", \"onToggle\", \"eventKey\", \"trigger\", \"placement\", \"toggleAs\", \"toggleClassName\", \"classPrefix\", \"className\", \"disabled\", \"children\", \"menuStyle\", \"style\"]);\n\n  var _useClassNames = useClassNames(classPrefix),\n      merge = _useClassNames.merge,\n      withClassPrefix = _useClassNames.withClassPrefix;\n\n  var _useClassNames2 = useClassNames('dropdown-menu'),\n      withMenuClassPrefix = _useClassNames2.withClassPrefix,\n      mergeMenuClassName = _useClassNames2.merge;\n\n  var menuButtonTriggers = useMemo(function () {\n    if (!trigger) {\n      return undefined;\n    }\n\n    var triggerMap = {\n      hover: 'mouseover',\n      click: 'click',\n      contextMenu: 'contextmenu'\n    };\n\n    if (!Array.isArray(trigger)) {\n      return [triggerMap[trigger]];\n    }\n\n    return trigger.map(function (t) {\n      return triggerMap[t];\n    });\n  }, [trigger]);\n\n  var _useReducer = useReducer(reducer, initialState),\n      items = _useReducer[0].items;\n\n  var hasSelectedItem = useMemo(function () {\n    return items.some(function (item) {\n      return item.props.selected;\n    });\n  }, [items]);\n\n  var renderMenuButton = function renderMenuButton(menuButtonProps, menuButtonRef) {\n    return /*#__PURE__*/React.createElement(NavDropdownToggle, _extends({\n      ref: menuButtonRef,\n      as: toggleAs,\n      className: toggleClassName,\n      placement: placement,\n      disabled: disabled\n    }, omit(menuButtonProps, ['open']), omit(toggleProps, ['data-testid'])), title);\n  };\n\n  return /*#__PURE__*/React.createElement(Menu, {\n    renderMenuButton: renderMenuButton,\n    openMenuOn: menuButtonTriggers,\n    renderMenuPopup: function renderMenuPopup(_ref, popupRef) {\n      var open = _ref.open,\n          popupProps = _objectWithoutPropertiesLoose(_ref, [\"open\"]);\n\n      var menuClassName = mergeMenuClassName(className, withMenuClassPrefix());\n      return /*#__PURE__*/React.createElement(\"ul\", _extends({\n        ref: popupRef,\n        className: menuClassName,\n        style: menuStyle,\n        hidden: !open\n      }, popupProps), children);\n    },\n    onToggleMenu: function onToggleMenu(open, event) {\n      onToggle === null || onToggle === void 0 ? void 0 : onToggle(open, eventKey, event);\n\n      if (open) {\n        onOpen === null || onOpen === void 0 ? void 0 : onOpen();\n      } else {\n        onClose === null || onClose === void 0 ? void 0 : onClose();\n      }\n    }\n  }, function (_ref2, menuContainerRef) {\n    var _withClassPrefix;\n\n    var open = _ref2.open,\n        menuContainer = _objectWithoutPropertiesLoose(_ref2, [\"open\"]);\n\n    var classes = merge(className, withClassPrefix((_withClassPrefix = {}, _withClassPrefix[\"placement-\" + kebabCase(placementPolyfill(placement))] = !!placement, _withClassPrefix.disabled = disabled, _withClassPrefix.open = open, _withClassPrefix['selected-within'] = hasSelectedItem, _withClassPrefix)));\n    return /*#__PURE__*/React.createElement(Component, _extends({\n      ref: mergeRefs(ref, menuContainerRef),\n      className: classes\n    }, menuContainer, pick(toggleProps, ['data-testid']), {\n      style: style\n    }));\n  });\n});\nNavDropdown.Item = NavDropdownItem;\nNavDropdown.Menu = NavDropdownMenu;\nNavDropdown.displayName = 'Nav.Dropdown';\nNavDropdown.propTypes = {\n  classPrefix: PropTypes.string,\n  trigger: PropTypes.oneOfType([PropTypes.array, PropTypes.oneOf(['click', 'hover', 'contextMenu'])]),\n  placement: PropTypes.oneOf(PLACEMENT_8),\n  title: PropTypes.node,\n  disabled: PropTypes.bool,\n  icon: PropTypes.node,\n  menuStyle: PropTypes.object,\n  className: PropTypes.string,\n  toggleClassName: PropTypes.string,\n  children: PropTypes.node,\n  open: deprecatePropType(PropTypes.bool),\n  eventKey: PropTypes.any,\n  as: PropTypes.elementType,\n  toggleAs: PropTypes.elementType,\n  noCaret: PropTypes.bool,\n  style: PropTypes.object,\n  onClose: PropTypes.func,\n  onOpen: PropTypes.func,\n  onToggle: PropTypes.func,\n  onMouseEnter: PropTypes.func,\n  onMouseLeave: PropTypes.func,\n  onContextMenu: PropTypes.func,\n  onClick: PropTypes.func,\n  renderToggle: PropTypes.func\n};\nexport default NavDropdown;"]},"metadata":{},"sourceType":"module"}