{"ast":null,"code":"import axios from'axios';// const { api_url } = process.env\nvar api_url=\"http://localhost:8080/\";export var register=function register(newUser){return axios.post(api_url+'users/register',{firstName:newUser.firstName,lastName:newUser.lastName,email:newUser.email,password:newUser.password,confirmPassword:newUser.confirmPassword}).then(function(response){return response;});};export var login=function login(user){return axios.post(api_url+'users/login',{email:user.email,password:user.password}).then(function(response){localStorage.setItem('usertoken',response.data.token);return response.data;}).catch(function(err){console.log(err);});};export var getProfile=function getProfile(token){return axios.get('users/profile',{headers:{Authorization:token}}).then(function(response){response.data.status='success';return response.data;}).catch(function(err){console.dir(err);return{'error':err.message,'status':'failed'};});};export var updatePassword=function updatePassword(updatePasswordRequest){return axios.put(\"/users/password/\",{email:updatePasswordRequest.email,password:updatePasswordRequest.password,new_password:updatePasswordRequest.new_password},{headers:{'Content-Type':'application/json','Authorization':updatePasswordRequest.token}}).then(function(response){return response.data;}).catch(function(err){console.dir(\"err\",err);return err.message;});};","map":{"version":3,"sources":["E:/React/pos-system/main/src/auth/UserFunction.js"],"names":["axios","api_url","register","newUser","post","firstName","lastName","email","password","confirmPassword","then","response","login","user","localStorage","setItem","data","token","catch","err","console","log","getProfile","get","headers","Authorization","status","dir","message","updatePassword","updatePasswordRequest","put","new_password"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAEA;AACA,GAAMC,CAAAA,OAAO,CAAG,wBAAhB,CAEA,MAAO,IAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAAAC,OAAO,CAAI,CACjC,MAAOH,CAAAA,KAAK,CACTI,IADI,CACCH,OAAO,CAAG,gBADX,CAC6B,CAChCI,SAAS,CAAEF,OAAO,CAACE,SADa,CAEhCC,QAAQ,CAAEH,OAAO,CAACG,QAFc,CAGhCC,KAAK,CAAEJ,OAAO,CAACI,KAHiB,CAIhCC,QAAQ,CAAEL,OAAO,CAACK,QAJc,CAKhCC,eAAe,CAAEN,OAAO,CAACM,eALO,CAD7B,EAQJC,IARI,CAQC,SAAAC,QAAQ,CAAI,CAChB,MAAOA,CAAAA,QAAP,CACD,CAVI,CAAP,CAWD,CAZM,CAcP,MAAO,IAAMC,CAAAA,KAAK,CAAG,QAARA,CAAAA,KAAQ,CAAAC,IAAI,CAAI,CAC3B,MAAOb,CAAAA,KAAK,CACTI,IADI,CACCH,OAAO,CAAG,aADX,CAC0B,CAC7BM,KAAK,CAAEM,IAAI,CAACN,KADiB,CAE7BC,QAAQ,CAAEK,IAAI,CAACL,QAFc,CAD1B,EAKJE,IALI,CAKC,SAAAC,QAAQ,CAAI,CAChBG,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAkCJ,QAAQ,CAACK,IAAT,CAAcC,KAAhD,EACA,MAAON,CAAAA,QAAQ,CAACK,IAAhB,CACD,CARI,EASJE,KATI,CASE,SAAAC,GAAG,CAAI,CACZC,OAAO,CAACC,GAAR,CAAYF,GAAZ,EACD,CAXI,CAAP,CAYD,CAbM,CAeP,MAAO,IAAMG,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAAAL,KAAK,CAAI,CACjC,MAAOjB,CAAAA,KAAK,CACTuB,GADI,CACA,eADA,CACiB,CACpBC,OAAO,CAAE,CAAEC,aAAa,CAAER,KAAjB,CADW,CADjB,EAIJP,IAJI,CAIC,SAAAC,QAAQ,CAAI,CAChBA,QAAQ,CAACK,IAAT,CAAcU,MAAd,CAAuB,SAAvB,CACA,MAAOf,CAAAA,QAAQ,CAACK,IAAhB,CACD,CAPI,EAQJE,KARI,CAQE,SAAAC,GAAG,CAAI,CACZC,OAAO,CAACO,GAAR,CAAYR,GAAZ,EACA,MAAO,CAAC,QAAQA,GAAG,CAACS,OAAb,CAAqB,SAAS,QAA9B,CAAP,CACD,CAXI,CAAP,CAYD,CAbM,CAiBP,MAAO,IAAMC,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAAAC,qBAAqB,CAAI,CACrD,MAAO9B,CAAAA,KAAK,CACT+B,GADI,oBAGH,CACExB,KAAK,CAACuB,qBAAqB,CAACvB,KAD9B,CAEEC,QAAQ,CAAEsB,qBAAqB,CAACtB,QAFlC,CAGEwB,YAAY,CAAEF,qBAAqB,CAACE,YAHtC,CAHG,CAQH,CACER,OAAO,CAAE,CACL,eAAgB,kBADX,CAEL,gBAAiBM,qBAAqB,CAACb,KAFlC,CADX,CARG,EAeJP,IAfI,CAeC,SAASC,QAAT,CAAmB,CACrB,MAAOA,CAAAA,QAAQ,CAACK,IAAhB,CACH,CAjBI,EAiBFE,KAjBE,CAiBI,SAAAC,GAAG,CAAE,CACZC,OAAO,CAACO,GAAR,CAAY,KAAZ,CAAkBR,GAAlB,EACA,MAAOA,CAAAA,GAAG,CAACS,OAAX,CACD,CApBI,CAAP,CAqBD,CAtBM","sourcesContent":["import axios from 'axios'\r\n\r\n// const { api_url } = process.env\r\nconst api_url = \"http://localhost:8080/\"\r\n\r\nexport const register = newUser => {\r\n  return axios\r\n    .post(api_url + 'users/register', {\r\n      firstName: newUser.firstName,\r\n      lastName: newUser.lastName,\r\n      email: newUser.email,\r\n      password: newUser.password,\r\n      confirmPassword: newUser.confirmPassword\r\n    })\r\n    .then(response => {\r\n      return response\r\n    })\r\n}\r\n\r\nexport const login = user => {\r\n  return axios\r\n    .post(api_url + 'users/login', {\r\n      email: user.email,\r\n      password: user.password\r\n    })\r\n    .then(response => {\r\n      localStorage.setItem('usertoken', response.data.token)\r\n      return response.data\r\n    })\r\n    .catch(err => {\r\n      console.log(err)\r\n    })\r\n}\r\n\r\nexport const getProfile = token => {\r\n  return axios\r\n    .get('users/profile', {\r\n      headers: { Authorization: token }\r\n    })\r\n    .then(response => {\r\n      response.data.status = 'success';\r\n      return response.data\r\n    })\r\n    .catch(err => {\r\n      console.dir(err)\r\n      return {'error':err.message,'status':'failed'};\r\n    })\r\n}\r\n\r\n\r\n\r\nexport const updatePassword = updatePasswordRequest => {\r\n  return axios\r\n    .put(\r\n      `/users/password/`,\r\n      {\r\n        email:updatePasswordRequest.email,\r\n        password: updatePasswordRequest.password,\r\n        new_password: updatePasswordRequest.new_password\r\n      },\r\n      {\r\n        headers: { \r\n            'Content-Type': 'application/json', \r\n            'Authorization': updatePasswordRequest.token \r\n        }\r\n      }\r\n    )\r\n    .then(function(response) {\r\n        return response.data;\r\n    }).catch(err=>{\r\n      console.dir(\"err\",err);\r\n      return err.message;\r\n    })\r\n}"]},"metadata":{},"sourceType":"module"}