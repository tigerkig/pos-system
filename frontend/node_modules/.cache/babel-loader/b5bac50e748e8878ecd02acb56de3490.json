{"ast":null,"code":"// pull in 'today' data for the baseline moment\nconst getNow = function (s) {\n  s.epoch = Date.now();\n  Object.keys(s._today || {}).forEach(k => {\n    if (typeof s[k] === 'function') {\n      s = s[k](s._today[k]);\n    }\n  });\n  return s;\n};\n\nconst dates = {\n  now: s => {\n    return getNow(s);\n  },\n  today: s => {\n    return getNow(s);\n  },\n  tonight: s => {\n    s = getNow(s);\n    s = s.hour(18); //6pm\n\n    return s;\n  },\n  tomorrow: s => {\n    s = getNow(s);\n    s = s.add(1, 'day');\n    s = s.startOf('day');\n    return s;\n  },\n  yesterday: s => {\n    s = getNow(s);\n    s = s.subtract(1, 'day');\n    s = s.startOf('day');\n    return s;\n  },\n  christmas: s => {\n    let year = getNow(s).year();\n    s = s.set([year, 11, 25, 18, 0, 0]); // Dec 25\n\n    return s;\n  },\n  'new years': s => {\n    let year = getNow(s).year();\n    s = s.set([year, 11, 31, 18, 0, 0]); // Dec 31\n\n    return s;\n  }\n};\ndates['new years eve'] = dates['new years'];\nexport default dates;","map":{"version":3,"sources":["E:/React/pos-system/main/node_modules/spacetime/src/input/named-dates.js"],"names":["getNow","s","epoch","Date","now","Object","keys","_today","forEach","k","dates","today","tonight","hour","tomorrow","add","startOf","yesterday","subtract","christmas","year","set"],"mappings":"AAAA;AACA,MAAMA,MAAM,GAAG,UAAUC,CAAV,EAAa;AAC1BA,EAAAA,CAAC,CAACC,KAAF,GAAUC,IAAI,CAACC,GAAL,EAAV;AACAC,EAAAA,MAAM,CAACC,IAAP,CAAYL,CAAC,CAACM,MAAF,IAAY,EAAxB,EAA4BC,OAA5B,CAAqCC,CAAD,IAAO;AACzC,QAAI,OAAOR,CAAC,CAACQ,CAAD,CAAR,KAAgB,UAApB,EAAgC;AAC9BR,MAAAA,CAAC,GAAGA,CAAC,CAACQ,CAAD,CAAD,CAAKR,CAAC,CAACM,MAAF,CAASE,CAAT,CAAL,CAAJ;AACD;AACF,GAJD;AAKA,SAAOR,CAAP;AACD,CARD;;AAUA,MAAMS,KAAK,GAAG;AACZN,EAAAA,GAAG,EAAGH,CAAD,IAAO;AACV,WAAOD,MAAM,CAACC,CAAD,CAAb;AACD,GAHW;AAIZU,EAAAA,KAAK,EAAGV,CAAD,IAAO;AACZ,WAAOD,MAAM,CAACC,CAAD,CAAb;AACD,GANW;AAOZW,EAAAA,OAAO,EAAGX,CAAD,IAAO;AACdA,IAAAA,CAAC,GAAGD,MAAM,CAACC,CAAD,CAAV;AACAA,IAAAA,CAAC,GAAGA,CAAC,CAACY,IAAF,CAAO,EAAP,CAAJ,CAFc,CAEC;;AACf,WAAOZ,CAAP;AACD,GAXW;AAYZa,EAAAA,QAAQ,EAAGb,CAAD,IAAO;AACfA,IAAAA,CAAC,GAAGD,MAAM,CAACC,CAAD,CAAV;AACAA,IAAAA,CAAC,GAAGA,CAAC,CAACc,GAAF,CAAM,CAAN,EAAS,KAAT,CAAJ;AACAd,IAAAA,CAAC,GAAGA,CAAC,CAACe,OAAF,CAAU,KAAV,CAAJ;AACA,WAAOf,CAAP;AACD,GAjBW;AAkBZgB,EAAAA,SAAS,EAAGhB,CAAD,IAAO;AAChBA,IAAAA,CAAC,GAAGD,MAAM,CAACC,CAAD,CAAV;AACAA,IAAAA,CAAC,GAAGA,CAAC,CAACiB,QAAF,CAAW,CAAX,EAAc,KAAd,CAAJ;AACAjB,IAAAA,CAAC,GAAGA,CAAC,CAACe,OAAF,CAAU,KAAV,CAAJ;AACA,WAAOf,CAAP;AACD,GAvBW;AAwBZkB,EAAAA,SAAS,EAAGlB,CAAD,IAAO;AAChB,QAAImB,IAAI,GAAGpB,MAAM,CAACC,CAAD,CAAN,CAAUmB,IAAV,EAAX;AACAnB,IAAAA,CAAC,GAAGA,CAAC,CAACoB,GAAF,CAAM,CAACD,IAAD,EAAO,EAAP,EAAW,EAAX,EAAe,EAAf,EAAmB,CAAnB,EAAsB,CAAtB,CAAN,CAAJ,CAFgB,CAEoB;;AACpC,WAAOnB,CAAP;AACD,GA5BW;AA6BZ,eAAcA,CAAD,IAAO;AAClB,QAAImB,IAAI,GAAGpB,MAAM,CAACC,CAAD,CAAN,CAAUmB,IAAV,EAAX;AACAnB,IAAAA,CAAC,GAAGA,CAAC,CAACoB,GAAF,CAAM,CAACD,IAAD,EAAO,EAAP,EAAW,EAAX,EAAe,EAAf,EAAmB,CAAnB,EAAsB,CAAtB,CAAN,CAAJ,CAFkB,CAEkB;;AACpC,WAAOnB,CAAP;AACD;AAjCW,CAAd;AAmCAS,KAAK,CAAC,eAAD,CAAL,GAAyBA,KAAK,CAAC,WAAD,CAA9B;AACA,eAAeA,KAAf","sourcesContent":["// pull in 'today' data for the baseline moment\nconst getNow = function (s) {\n  s.epoch = Date.now()\n  Object.keys(s._today || {}).forEach((k) => {\n    if (typeof s[k] === 'function') {\n      s = s[k](s._today[k])\n    }\n  })\n  return s\n}\n\nconst dates = {\n  now: (s) => {\n    return getNow(s)\n  },\n  today: (s) => {\n    return getNow(s)\n  },\n  tonight: (s) => {\n    s = getNow(s)\n    s = s.hour(18) //6pm\n    return s\n  },\n  tomorrow: (s) => {\n    s = getNow(s)\n    s = s.add(1, 'day')\n    s = s.startOf('day')\n    return s\n  },\n  yesterday: (s) => {\n    s = getNow(s)\n    s = s.subtract(1, 'day')\n    s = s.startOf('day')\n    return s\n  },\n  christmas: (s) => {\n    let year = getNow(s).year()\n    s = s.set([year, 11, 25, 18, 0, 0]) // Dec 25\n    return s\n  },\n  'new years': (s) => {\n    let year = getNow(s).year()\n    s = s.set([year, 11, 31, 18, 0, 0]) // Dec 31\n    return s\n  }\n}\ndates['new years eve'] = dates['new years']\nexport default dates\n"]},"metadata":{},"sourceType":"module"}