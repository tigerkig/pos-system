{"ast":null,"code":"// https://github.com/ljharb/proposal-string-pad-left-right\nvar toLength = require('./$.to-length'),\n    repeat = require('./$.string-repeat'),\n    defined = require('./$.defined');\n\nmodule.exports = function (that, maxLength, fillString, left) {\n  var S = String(defined(that)),\n      stringLength = S.length,\n      fillStr = fillString === undefined ? ' ' : String(fillString),\n      intMaxLength = toLength(maxLength);\n  if (intMaxLength <= stringLength) return S;\n  if (fillStr == '') fillStr = ' ';\n  var fillLen = intMaxLength - stringLength,\n      stringFiller = repeat.call(fillStr, Math.ceil(fillLen / fillStr.length));\n  if (stringFiller.length > fillLen) stringFiller = stringFiller.slice(0, fillLen);\n  return left ? stringFiller + S : S + stringFiller;\n};","map":{"version":3,"sources":["E:/React/pos-system/main/node_modules/babel/node_modules/core-js/modules/$.string-pad.js"],"names":["toLength","require","repeat","defined","module","exports","that","maxLength","fillString","left","S","String","stringLength","length","fillStr","undefined","intMaxLength","fillLen","stringFiller","call","Math","ceil","slice"],"mappings":"AAAA;AACA,IAAIA,QAAQ,GAAGC,OAAO,CAAC,eAAD,CAAtB;AAAA,IACIC,MAAM,GAAKD,OAAO,CAAC,mBAAD,CADtB;AAAA,IAEIE,OAAO,GAAIF,OAAO,CAAC,aAAD,CAFtB;;AAIAG,MAAM,CAACC,OAAP,GAAiB,UAASC,IAAT,EAAeC,SAAf,EAA0BC,UAA1B,EAAsCC,IAAtC,EAA2C;AAC1D,MAAIC,CAAC,GAAcC,MAAM,CAACR,OAAO,CAACG,IAAD,CAAR,CAAzB;AAAA,MACIM,YAAY,GAAGF,CAAC,CAACG,MADrB;AAAA,MAEIC,OAAO,GAAQN,UAAU,KAAKO,SAAf,GAA2B,GAA3B,GAAiCJ,MAAM,CAACH,UAAD,CAF1D;AAAA,MAGIQ,YAAY,GAAGhB,QAAQ,CAACO,SAAD,CAH3B;AAIA,MAAGS,YAAY,IAAIJ,YAAnB,EAAgC,OAAOF,CAAP;AAChC,MAAGI,OAAO,IAAI,EAAd,EAAiBA,OAAO,GAAG,GAAV;AACjB,MAAIG,OAAO,GAAGD,YAAY,GAAGJ,YAA7B;AAAA,MACIM,YAAY,GAAGhB,MAAM,CAACiB,IAAP,CAAYL,OAAZ,EAAqBM,IAAI,CAACC,IAAL,CAAUJ,OAAO,GAAGH,OAAO,CAACD,MAA5B,CAArB,CADnB;AAEA,MAAGK,YAAY,CAACL,MAAb,GAAsBI,OAAzB,EAAiCC,YAAY,GAAGA,YAAY,CAACI,KAAb,CAAmB,CAAnB,EAAsBL,OAAtB,CAAf;AACjC,SAAOR,IAAI,GAAGS,YAAY,GAAGR,CAAlB,GAAsBA,CAAC,GAAGQ,YAArC;AACD,CAXD","sourcesContent":["// https://github.com/ljharb/proposal-string-pad-left-right\nvar toLength = require('./$.to-length')\n  , repeat   = require('./$.string-repeat')\n  , defined  = require('./$.defined');\n\nmodule.exports = function(that, maxLength, fillString, left){\n  var S            = String(defined(that))\n    , stringLength = S.length\n    , fillStr      = fillString === undefined ? ' ' : String(fillString)\n    , intMaxLength = toLength(maxLength);\n  if(intMaxLength <= stringLength)return S;\n  if(fillStr == '')fillStr = ' ';\n  var fillLen = intMaxLength - stringLength\n    , stringFiller = repeat.call(fillStr, Math.ceil(fillLen / fillStr.length));\n  if(stringFiller.length > fillLen)stringFiller = stringFiller.slice(0, fillLen);\n  return left ? stringFiller + S : S + stringFiller;\n};"]},"metadata":{},"sourceType":"script"}