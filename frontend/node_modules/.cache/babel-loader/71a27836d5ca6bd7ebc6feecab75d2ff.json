{"ast":null,"code":"import { beADate } from '../../fns.js';\nimport toISO from './_iso.js';\nimport getDiff from './getDiff.js';\nimport soften from './soften.js'; //by spencermountain + Shaun Grady\n//create the human-readable diff between the two dates\n\nconst since = (start, end) => {\n  end = beADate(end, start);\n  const diff = getDiff(start, end);\n  const isNow = Object.keys(diff).every(u => !diff[u]);\n\n  if (isNow === true) {\n    return {\n      diff,\n      rounded: 'now',\n      qualified: 'now',\n      precise: 'now',\n      abbreviated: [],\n      iso: 'P0Y0M0DT0H0M0S',\n      direction: 'present'\n    };\n  }\n\n  let precise;\n  let direction = 'future';\n  let {\n    rounded,\n    qualified,\n    englishValues,\n    abbreviated\n  } = soften(diff); //make them into a string\n\n  precise = englishValues.splice(0, 2).join(', '); //handle before/after logic\n\n  if (start.isAfter(end) === true) {\n    rounded += ' ago';\n    qualified += ' ago';\n    precise += ' ago';\n    direction = 'past';\n  } else {\n    rounded = 'in ' + rounded;\n    qualified = 'in ' + qualified;\n    precise = 'in ' + precise;\n  } // https://en.wikipedia.org/wiki/ISO_8601#Durations\n  // P[n]Y[n]M[n]DT[n]H[n]M[n]S \n\n\n  let iso = toISO(diff);\n  return {\n    diff,\n    rounded,\n    qualified,\n    precise,\n    abbreviated,\n    iso,\n    direction\n  };\n};\n\nexport default since;","map":{"version":3,"sources":["E:/React/pos-system/main/node_modules/spacetime/src/methods/since/index.js"],"names":["beADate","toISO","getDiff","soften","since","start","end","diff","isNow","Object","keys","every","u","rounded","qualified","precise","abbreviated","iso","direction","englishValues","splice","join","isAfter"],"mappings":"AAAA,SAASA,OAAT,QAAwB,cAAxB;AACA,OAAOC,KAAP,MAAkB,WAAlB;AACA,OAAOC,OAAP,MAAoB,cAApB;AACA,OAAOC,MAAP,MAAmB,aAAnB,C,CACA;AAEA;;AACA,MAAMC,KAAK,GAAG,CAACC,KAAD,EAAQC,GAAR,KAAgB;AAC5BA,EAAAA,GAAG,GAAGN,OAAO,CAACM,GAAD,EAAMD,KAAN,CAAb;AACA,QAAME,IAAI,GAAGL,OAAO,CAACG,KAAD,EAAQC,GAAR,CAApB;AACA,QAAME,KAAK,GAAGC,MAAM,CAACC,IAAP,CAAYH,IAAZ,EAAkBI,KAAlB,CAAyBC,CAAD,IAAO,CAACL,IAAI,CAACK,CAAD,CAApC,CAAd;;AACA,MAAIJ,KAAK,KAAK,IAAd,EAAoB;AAClB,WAAO;AACLD,MAAAA,IADK;AAELM,MAAAA,OAAO,EAAE,KAFJ;AAGLC,MAAAA,SAAS,EAAE,KAHN;AAILC,MAAAA,OAAO,EAAE,KAJJ;AAKLC,MAAAA,WAAW,EAAE,EALR;AAMLC,MAAAA,GAAG,EAAE,gBANA;AAOLC,MAAAA,SAAS,EAAE;AAPN,KAAP;AASD;;AACD,MAAIH,OAAJ;AACA,MAAIG,SAAS,GAAG,QAAhB;AAEA,MAAI;AAAEL,IAAAA,OAAF;AAAWC,IAAAA,SAAX;AAAsBK,IAAAA,aAAtB;AAAqCH,IAAAA;AAArC,MAAqDb,MAAM,CAACI,IAAD,CAA/D,CAlB4B,CAoB5B;;AACAQ,EAAAA,OAAO,GAAGI,aAAa,CAACC,MAAd,CAAqB,CAArB,EAAwB,CAAxB,EAA2BC,IAA3B,CAAgC,IAAhC,CAAV,CArB4B,CAsB5B;;AACA,MAAIhB,KAAK,CAACiB,OAAN,CAAchB,GAAd,MAAuB,IAA3B,EAAiC;AAC/BO,IAAAA,OAAO,IAAI,MAAX;AACAC,IAAAA,SAAS,IAAI,MAAb;AACAC,IAAAA,OAAO,IAAI,MAAX;AACAG,IAAAA,SAAS,GAAG,MAAZ;AACD,GALD,MAKO;AACLL,IAAAA,OAAO,GAAG,QAAQA,OAAlB;AACAC,IAAAA,SAAS,GAAG,QAAQA,SAApB;AACAC,IAAAA,OAAO,GAAG,QAAQA,OAAlB;AACD,GAhC2B,CAiC5B;AACA;;;AACA,MAAIE,GAAG,GAAGhB,KAAK,CAACM,IAAD,CAAf;AACA,SAAO;AACLA,IAAAA,IADK;AAELM,IAAAA,OAFK;AAGLC,IAAAA,SAHK;AAILC,IAAAA,OAJK;AAKLC,IAAAA,WALK;AAMLC,IAAAA,GANK;AAOLC,IAAAA;AAPK,GAAP;AASD,CA7CD;;AA+CA,eAAed,KAAf","sourcesContent":["import { beADate } from '../../fns.js'\nimport toISO from './_iso.js'\nimport getDiff from './getDiff.js'\nimport soften from './soften.js'\n//by spencermountain + Shaun Grady\n\n//create the human-readable diff between the two dates\nconst since = (start, end) => {\n  end = beADate(end, start)\n  const diff = getDiff(start, end)\n  const isNow = Object.keys(diff).every((u) => !diff[u])\n  if (isNow === true) {\n    return {\n      diff,\n      rounded: 'now',\n      qualified: 'now',\n      precise: 'now',\n      abbreviated: [],\n      iso: 'P0Y0M0DT0H0M0S',\n      direction: 'present',\n    }\n  }\n  let precise\n  let direction = 'future'\n\n  let { rounded, qualified, englishValues, abbreviated } = soften(diff)\n\n  //make them into a string\n  precise = englishValues.splice(0, 2).join(', ')\n  //handle before/after logic\n  if (start.isAfter(end) === true) {\n    rounded += ' ago'\n    qualified += ' ago'\n    precise += ' ago'\n    direction = 'past'\n  } else {\n    rounded = 'in ' + rounded\n    qualified = 'in ' + qualified\n    precise = 'in ' + precise\n  }\n  // https://en.wikipedia.org/wiki/ISO_8601#Durations\n  // P[n]Y[n]M[n]DT[n]H[n]M[n]S \n  let iso = toISO(diff)\n  return {\n    diff,\n    rounded,\n    qualified,\n    precise,\n    abbreviated,\n    iso,\n    direction,\n  }\n}\n\nexport default since\n"]},"metadata":{},"sourceType":"module"}