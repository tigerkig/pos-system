{"ast":null,"code":"import isSummer from './summerTime.js'; // this method avoids having to do a full dst-calculation on every operation\n// it reproduces some things in ./index.js, but speeds up spacetime considerably\n\nconst quickOffset = s => {\n  let zones = s.timezones;\n  let obj = zones[s.tz];\n\n  if (obj === undefined) {\n    console.warn(\"Warning: couldn't find timezone \" + s.tz);\n    return 0;\n  }\n\n  if (obj.dst === undefined) {\n    return obj.offset;\n  } //get our two possible offsets\n\n\n  let jul = obj.offset;\n  let dec = obj.offset + 1; // assume it's the same for now\n\n  if (obj.hem === 'n') {\n    dec = jul - 1;\n  }\n\n  let split = obj.dst.split('->');\n  let inSummer = isSummer(s.epoch, split[0], split[1], jul, dec);\n\n  if (inSummer === true) {\n    return jul;\n  }\n\n  return dec;\n};\n\nexport default quickOffset;","map":{"version":3,"sources":["E:/React/pos-system/main/node_modules/spacetime/src/timezone/quick.js"],"names":["isSummer","quickOffset","s","zones","timezones","obj","tz","undefined","console","warn","dst","offset","jul","dec","hem","split","inSummer","epoch"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,iBAArB,C,CAEA;AACA;;AACA,MAAMC,WAAW,GAAGC,CAAC,IAAI;AACvB,MAAIC,KAAK,GAAGD,CAAC,CAACE,SAAd;AACA,MAAIC,GAAG,GAAGF,KAAK,CAACD,CAAC,CAACI,EAAH,CAAf;;AACA,MAAID,GAAG,KAAKE,SAAZ,EAAuB;AACrBC,IAAAA,OAAO,CAACC,IAAR,CAAa,qCAAqCP,CAAC,CAACI,EAApD;AACA,WAAO,CAAP;AACD;;AACD,MAAID,GAAG,CAACK,GAAJ,KAAYH,SAAhB,EAA2B;AACzB,WAAOF,GAAG,CAACM,MAAX;AACD,GATsB,CAWvB;;;AACA,MAAIC,GAAG,GAAGP,GAAG,CAACM,MAAd;AACA,MAAIE,GAAG,GAAGR,GAAG,CAACM,MAAJ,GAAa,CAAvB,CAbuB,CAaE;;AACzB,MAAIN,GAAG,CAACS,GAAJ,KAAY,GAAhB,EAAqB;AACnBD,IAAAA,GAAG,GAAGD,GAAG,GAAG,CAAZ;AACD;;AACD,MAAIG,KAAK,GAAGV,GAAG,CAACK,GAAJ,CAAQK,KAAR,CAAc,IAAd,CAAZ;AACA,MAAIC,QAAQ,GAAGhB,QAAQ,CAACE,CAAC,CAACe,KAAH,EAAUF,KAAK,CAAC,CAAD,CAAf,EAAoBA,KAAK,CAAC,CAAD,CAAzB,EAA8BH,GAA9B,EAAmCC,GAAnC,CAAvB;;AACA,MAAIG,QAAQ,KAAK,IAAjB,EAAuB;AACrB,WAAOJ,GAAP;AACD;;AACD,SAAOC,GAAP;AACD,CAvBD;;AAwBA,eAAeZ,WAAf","sourcesContent":["import isSummer from './summerTime.js'\n\n// this method avoids having to do a full dst-calculation on every operation\n// it reproduces some things in ./index.js, but speeds up spacetime considerably\nconst quickOffset = s => {\n  let zones = s.timezones\n  let obj = zones[s.tz]\n  if (obj === undefined) {\n    console.warn(\"Warning: couldn't find timezone \" + s.tz)\n    return 0\n  }\n  if (obj.dst === undefined) {\n    return obj.offset\n  }\n\n  //get our two possible offsets\n  let jul = obj.offset\n  let dec = obj.offset + 1 // assume it's the same for now\n  if (obj.hem === 'n') {\n    dec = jul - 1\n  }\n  let split = obj.dst.split('->')\n  let inSummer = isSummer(s.epoch, split[0], split[1], jul, dec)\n  if (inSummer === true) {\n    return jul\n  }\n  return dec\n}\nexport default quickOffset\n"]},"metadata":{},"sourceType":"module"}