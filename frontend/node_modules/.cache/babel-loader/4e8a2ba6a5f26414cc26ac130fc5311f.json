{"ast":null,"code":"import walkTo from '../../methods/set/walk.js';\nimport { toCardinal } from '../../fns.js';\nimport { validate, parseTime, parseYear, parseMonth } from './_parsers.js';\nexport default [// =====\n//  d-m-y\n// =====\n//common british format - \"25-feb-2015\"\n{\n  reg: /^([0-9]{1,2})[\\-\\/]([a-z]+)[\\-\\/]?([0-9]{4})?$/i,\n  parse: (s, m) => {\n    let obj = {\n      year: parseYear(m[3], s._today),\n      month: parseMonth(m[2]),\n      date: toCardinal(m[1] || '')\n    };\n\n    if (validate(obj) === false) {\n      s.epoch = null;\n      return s;\n    }\n\n    walkTo(s, obj);\n    s = parseTime(s, m[4]);\n    return s;\n  }\n}, // \"25 Mar 2015\"\n{\n  reg: /^([0-9]{1,2})( [a-z]+)( [0-9]{4}| '[0-9]{2})? ?([0-9]{1,2}:[0-9]{2}:?[0-9]{0,2}? ?(am|pm|gmt))?$/i,\n  parse: (s, m) => {\n    let obj = {\n      year: parseYear(m[3], s._today),\n      month: parseMonth(m[2]),\n      date: toCardinal(m[1])\n    };\n\n    if (!obj.month || validate(obj) === false) {\n      s.epoch = null;\n      return s;\n    }\n\n    walkTo(s, obj);\n    s = parseTime(s, m[4]);\n    return s;\n  }\n}, // 01-jan-2020\n{\n  reg: /^([0-9]{1,2})[\\. -/]([a-z]+)[\\. -/]([0-9]{4})?( [0-9]{1,2}(:[0-9]{0,2})?(:[0-9]{0,3})? ?(am|pm)?)?$/i,\n  parse: (s, m) => {\n    let obj = {\n      date: Number(m[1]),\n      month: parseMonth(m[2]),\n      year: Number(m[3])\n    };\n\n    if (validate(obj) === false) {\n      s.epoch = null;\n      return s;\n    }\n\n    walkTo(s, obj);\n    s = s.startOf('day');\n    s = parseTime(s, m[4]);\n    return s;\n  }\n}];","map":{"version":3,"sources":["E:/React/pos-system/main/node_modules/spacetime/src/input/formats/03-dmy.js"],"names":["walkTo","toCardinal","validate","parseTime","parseYear","parseMonth","reg","parse","s","m","obj","year","_today","month","date","epoch","Number","startOf"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,2BAAnB;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA,SAASC,QAAT,EAAmBC,SAAnB,EAA8BC,SAA9B,EAAyCC,UAAzC,QAA2D,eAA3D;AAEA,eAAe,CACb;AACA;AACA;AACA;AACA;AACEC,EAAAA,GAAG,EAAE,iDADP;AAEEC,EAAAA,KAAK,EAAE,CAACC,CAAD,EAAIC,CAAJ,KAAU;AACf,QAAIC,GAAG,GAAG;AACRC,MAAAA,IAAI,EAAEP,SAAS,CAACK,CAAC,CAAC,CAAD,CAAF,EAAOD,CAAC,CAACI,MAAT,CADP;AAERC,MAAAA,KAAK,EAAER,UAAU,CAACI,CAAC,CAAC,CAAD,CAAF,CAFT;AAGRK,MAAAA,IAAI,EAAEb,UAAU,CAACQ,CAAC,CAAC,CAAD,CAAD,IAAQ,EAAT;AAHR,KAAV;;AAKA,QAAIP,QAAQ,CAACQ,GAAD,CAAR,KAAkB,KAAtB,EAA6B;AAC3BF,MAAAA,CAAC,CAACO,KAAF,GAAU,IAAV;AACA,aAAOP,CAAP;AACD;;AACDR,IAAAA,MAAM,CAACQ,CAAD,EAAIE,GAAJ,CAAN;AACAF,IAAAA,CAAC,GAAGL,SAAS,CAACK,CAAD,EAAIC,CAAC,CAAC,CAAD,CAAL,CAAb;AACA,WAAOD,CAAP;AACD;AAfH,CALa,EAsBb;AACA;AACEF,EAAAA,GAAG,EAAE,mGADP;AAEEC,EAAAA,KAAK,EAAE,CAACC,CAAD,EAAIC,CAAJ,KAAU;AACf,QAAIC,GAAG,GAAG;AACRC,MAAAA,IAAI,EAAEP,SAAS,CAACK,CAAC,CAAC,CAAD,CAAF,EAAOD,CAAC,CAACI,MAAT,CADP;AAERC,MAAAA,KAAK,EAAER,UAAU,CAACI,CAAC,CAAC,CAAD,CAAF,CAFT;AAGRK,MAAAA,IAAI,EAAEb,UAAU,CAACQ,CAAC,CAAC,CAAD,CAAF;AAHR,KAAV;;AAKA,QAAI,CAACC,GAAG,CAACG,KAAL,IAAcX,QAAQ,CAACQ,GAAD,CAAR,KAAkB,KAApC,EAA2C;AACzCF,MAAAA,CAAC,CAACO,KAAF,GAAU,IAAV;AACA,aAAOP,CAAP;AACD;;AACDR,IAAAA,MAAM,CAACQ,CAAD,EAAIE,GAAJ,CAAN;AACAF,IAAAA,CAAC,GAAGL,SAAS,CAACK,CAAD,EAAIC,CAAC,CAAC,CAAD,CAAL,CAAb;AACA,WAAOD,CAAP;AACD;AAfH,CAvBa,EAwCb;AACA;AACEF,EAAAA,GAAG,EAAE,sGADP;AAEEC,EAAAA,KAAK,EAAE,CAACC,CAAD,EAAIC,CAAJ,KAAU;AACf,QAAIC,GAAG,GAAG;AACRI,MAAAA,IAAI,EAAEE,MAAM,CAACP,CAAC,CAAC,CAAD,CAAF,CADJ;AAERI,MAAAA,KAAK,EAAER,UAAU,CAACI,CAAC,CAAC,CAAD,CAAF,CAFT;AAGRE,MAAAA,IAAI,EAAEK,MAAM,CAACP,CAAC,CAAC,CAAD,CAAF;AAHJ,KAAV;;AAKA,QAAIP,QAAQ,CAACQ,GAAD,CAAR,KAAkB,KAAtB,EAA6B;AAC3BF,MAAAA,CAAC,CAACO,KAAF,GAAU,IAAV;AACA,aAAOP,CAAP;AACD;;AACDR,IAAAA,MAAM,CAACQ,CAAD,EAAIE,GAAJ,CAAN;AACAF,IAAAA,CAAC,GAAGA,CAAC,CAACS,OAAF,CAAU,KAAV,CAAJ;AACAT,IAAAA,CAAC,GAAGL,SAAS,CAACK,CAAD,EAAIC,CAAC,CAAC,CAAD,CAAL,CAAb;AACA,WAAOD,CAAP;AACD;AAhBH,CAzCa,CAAf","sourcesContent":["import walkTo from '../../methods/set/walk.js'\nimport { toCardinal } from '../../fns.js'\nimport { validate, parseTime, parseYear, parseMonth } from './_parsers.js'\n\nexport default [\n  // =====\n  //  d-m-y\n  // =====\n  //common british format - \"25-feb-2015\"\n  {\n    reg: /^([0-9]{1,2})[\\-\\/]([a-z]+)[\\-\\/]?([0-9]{4})?$/i,\n    parse: (s, m) => {\n      let obj = {\n        year: parseYear(m[3], s._today),\n        month: parseMonth(m[2]),\n        date: toCardinal(m[1] || '')\n      }\n      if (validate(obj) === false) {\n        s.epoch = null\n        return s\n      }\n      walkTo(s, obj)\n      s = parseTime(s, m[4])\n      return s\n    }\n  },\n  // \"25 Mar 2015\"\n  {\n    reg: /^([0-9]{1,2})( [a-z]+)( [0-9]{4}| '[0-9]{2})? ?([0-9]{1,2}:[0-9]{2}:?[0-9]{0,2}? ?(am|pm|gmt))?$/i,\n    parse: (s, m) => {\n      let obj = {\n        year: parseYear(m[3], s._today),\n        month: parseMonth(m[2]),\n        date: toCardinal(m[1])\n      }\n      if (!obj.month || validate(obj) === false) {\n        s.epoch = null\n        return s\n      }\n      walkTo(s, obj)\n      s = parseTime(s, m[4])\n      return s\n    }\n  },\n  // 01-jan-2020\n  {\n    reg: /^([0-9]{1,2})[\\. -/]([a-z]+)[\\. -/]([0-9]{4})?( [0-9]{1,2}(:[0-9]{0,2})?(:[0-9]{0,3})? ?(am|pm)?)?$/i,\n    parse: (s, m) => {\n      let obj = {\n        date: Number(m[1]),\n        month: parseMonth(m[2]),\n        year: Number(m[3])\n      }\n      if (validate(obj) === false) {\n        s.epoch = null\n        return s\n      }\n      walkTo(s, obj)\n      s = s.startOf('day')\n      s = parseTime(s, m[4])\n      return s\n    }\n  }\n]\n"]},"metadata":{},"sourceType":"module"}