{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { GridCellCheckboxRenderer } from '../components/columnSelection/GridCellCheckboxRenderer';\nimport { GridHeaderCheckbox } from '../components/columnSelection/GridHeaderCheckbox';\nimport { selectedIdsLookupSelector } from '../hooks/features/selection/gridSelectionSelector';\nimport { GRID_BOOLEAN_COL_DEF } from './gridBooleanColDef';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport var GRID_CHECKBOX_SELECTION_FIELD = '__check__';\nexport var GRID_CHECKBOX_SELECTION_COL_DEF = _extends({}, GRID_BOOLEAN_COL_DEF, {\n  field: GRID_CHECKBOX_SELECTION_FIELD,\n  type: 'checkboxSelection',\n  width: 50,\n  resizable: false,\n  sortable: false,\n  filterable: false,\n  disableColumnMenu: true,\n  disableReorder: true,\n  disableExport: true,\n  getApplyQuickFilterFn: undefined,\n  valueGetter: function valueGetter(params) {\n    var selectionLookup = selectedIdsLookupSelector(params.api.state, params.api.instanceId);\n    return selectionLookup[params.id] !== undefined;\n  },\n  renderHeader: function renderHeader(params) {\n    return /*#__PURE__*/_jsx(GridHeaderCheckbox, _extends({}, params));\n  },\n  renderCell: function renderCell(params) {\n    return /*#__PURE__*/_jsx(GridCellCheckboxRenderer, _extends({}, params));\n  }\n});","map":{"version":3,"sources":["E:/React/pos-system/main/node_modules/@mui/x-data-grid/colDef/gridCheckboxSelectionColDef.js"],"names":["_extends","React","GridCellCheckboxRenderer","GridHeaderCheckbox","selectedIdsLookupSelector","GRID_BOOLEAN_COL_DEF","jsx","_jsx","GRID_CHECKBOX_SELECTION_FIELD","GRID_CHECKBOX_SELECTION_COL_DEF","field","type","width","resizable","sortable","filterable","disableColumnMenu","disableReorder","disableExport","getApplyQuickFilterFn","undefined","valueGetter","params","selectionLookup","api","state","instanceId","id","renderHeader","renderCell"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,oCAArB;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,SAASC,wBAAT,QAAyC,wDAAzC;AACA,SAASC,kBAAT,QAAmC,kDAAnC;AACA,SAASC,yBAAT,QAA0C,mDAA1C;AACA,SAASC,oBAAT,QAAqC,qBAArC;AACA,SAASC,GAAG,IAAIC,IAAhB,QAA4B,mBAA5B;AACA,OAAO,IAAMC,6BAA6B,GAAG,WAAtC;AACP,OAAO,IAAMC,+BAA+B,GAAGT,QAAQ,CAAC,EAAD,EAAKK,oBAAL,EAA2B;AAChFK,EAAAA,KAAK,EAAEF,6BADyE;AAEhFG,EAAAA,IAAI,EAAE,mBAF0E;AAGhFC,EAAAA,KAAK,EAAE,EAHyE;AAIhFC,EAAAA,SAAS,EAAE,KAJqE;AAKhFC,EAAAA,QAAQ,EAAE,KALsE;AAMhFC,EAAAA,UAAU,EAAE,KANoE;AAOhFC,EAAAA,iBAAiB,EAAE,IAP6D;AAQhFC,EAAAA,cAAc,EAAE,IARgE;AAShFC,EAAAA,aAAa,EAAE,IATiE;AAUhFC,EAAAA,qBAAqB,EAAEC,SAVyD;AAWhFC,EAAAA,WAAW,EAAE,qBAAAC,MAAM,EAAI;AACrB,QAAMC,eAAe,GAAGnB,yBAAyB,CAACkB,MAAM,CAACE,GAAP,CAAWC,KAAZ,EAAmBH,MAAM,CAACE,GAAP,CAAWE,UAA9B,CAAjD;AACA,WAAOH,eAAe,CAACD,MAAM,CAACK,EAAR,CAAf,KAA+BP,SAAtC;AACD,GAd+E;AAehFQ,EAAAA,YAAY,EAAE,sBAAAN,MAAM;AAAA,WAAI,aAAaf,IAAI,CAACJ,kBAAD,EAAqBH,QAAQ,CAAC,EAAD,EAAKsB,MAAL,CAA7B,CAArB;AAAA,GAf4D;AAgBhFO,EAAAA,UAAU,EAAE,oBAAAP,MAAM;AAAA,WAAI,aAAaf,IAAI,CAACL,wBAAD,EAA2BF,QAAQ,CAAC,EAAD,EAAKsB,MAAL,CAAnC,CAArB;AAAA;AAhB8D,CAA3B,CAAhD","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { GridCellCheckboxRenderer } from '../components/columnSelection/GridCellCheckboxRenderer';\nimport { GridHeaderCheckbox } from '../components/columnSelection/GridHeaderCheckbox';\nimport { selectedIdsLookupSelector } from '../hooks/features/selection/gridSelectionSelector';\nimport { GRID_BOOLEAN_COL_DEF } from './gridBooleanColDef';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const GRID_CHECKBOX_SELECTION_FIELD = '__check__';\nexport const GRID_CHECKBOX_SELECTION_COL_DEF = _extends({}, GRID_BOOLEAN_COL_DEF, {\n  field: GRID_CHECKBOX_SELECTION_FIELD,\n  type: 'checkboxSelection',\n  width: 50,\n  resizable: false,\n  sortable: false,\n  filterable: false,\n  disableColumnMenu: true,\n  disableReorder: true,\n  disableExport: true,\n  getApplyQuickFilterFn: undefined,\n  valueGetter: params => {\n    const selectionLookup = selectedIdsLookupSelector(params.api.state, params.api.instanceId);\n    return selectionLookup[params.id] !== undefined;\n  },\n  renderHeader: params => /*#__PURE__*/_jsx(GridHeaderCheckbox, _extends({}, params)),\n  renderCell: params => /*#__PURE__*/_jsx(GridCellCheckboxRenderer, _extends({}, params))\n});"]},"metadata":{},"sourceType":"module"}