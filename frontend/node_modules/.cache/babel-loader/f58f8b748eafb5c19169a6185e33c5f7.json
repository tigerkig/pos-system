{"ast":null,"code":"var global = require('./$.global'),\n    macrotask = require('./$.task').set,\n    Observer = global.MutationObserver || global.WebKitMutationObserver,\n    process = global.process,\n    Promise = global.Promise,\n    isNode = require('./$.cof')(process) == 'process',\n    head,\n    last,\n    notify;\n\nvar flush = function () {\n  var parent, domain, fn;\n\n  if (isNode && (parent = process.domain)) {\n    process.domain = null;\n    parent.exit();\n  }\n\n  while (head) {\n    domain = head.domain;\n    fn = head.fn;\n    if (domain) domain.enter();\n    fn(); // <- currently we use it only for Promise - try / catch not required\n\n    if (domain) domain.exit();\n    head = head.next;\n  }\n\n  last = undefined;\n  if (parent) parent.enter();\n}; // Node.js\n\n\nif (isNode) {\n  notify = function () {\n    process.nextTick(flush);\n  }; // browsers with MutationObserver\n\n} else if (Observer) {\n  var toggle = 1,\n      node = document.createTextNode('');\n  new Observer(flush).observe(node, {\n    characterData: true\n  }); // eslint-disable-line no-new\n\n  notify = function () {\n    node.data = toggle = -toggle;\n  }; // environments with maybe non-completely correct, but existent Promise\n\n} else if (Promise && Promise.resolve) {\n  notify = function () {\n    Promise.resolve().then(flush);\n  }; // for other environments - macrotask based on:\n  // - setImmediate\n  // - MessageChannel\n  // - window.postMessag\n  // - onreadystatechange\n  // - setTimeout\n\n} else {\n  notify = function () {\n    // strange IE + webpack dev server bug - use .call(global)\n    macrotask.call(global, flush);\n  };\n}\n\nmodule.exports = function asap(fn) {\n  var task = {\n    fn: fn,\n    next: undefined,\n    domain: isNode && process.domain\n  };\n  if (last) last.next = task;\n\n  if (!head) {\n    head = task;\n    notify();\n  }\n\n  last = task;\n};","map":{"version":3,"sources":["E:/React/pos-system/frontend/node_modules/babel/node_modules/core-js/modules/$.microtask.js"],"names":["global","require","macrotask","set","Observer","MutationObserver","WebKitMutationObserver","process","Promise","isNode","head","last","notify","flush","parent","domain","fn","exit","enter","next","undefined","nextTick","toggle","node","document","createTextNode","observe","characterData","data","resolve","then","call","module","exports","asap","task"],"mappings":"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","sourcesContent":["var global    = require('./$.global')\n  , macrotask = require('./$.task').set\n  , Observer  = global.MutationObserver || global.WebKitMutationObserver\n  , process   = global.process\n  , Promise   = global.Promise\n  , isNode    = require('./$.cof')(process) == 'process'\n  , head, last, notify;\n\nvar flush = function(){\n  var parent, domain, fn;\n  if(isNode && (parent = process.domain)){\n    process.domain = null;\n    parent.exit();\n  }\n  while(head){\n    domain = head.domain;\n    fn     = head.fn;\n    if(domain)domain.enter();\n    fn(); // <- currently we use it only for Promise - try / catch not required\n    if(domain)domain.exit();\n    head = head.next;\n  } last = undefined;\n  if(parent)parent.enter();\n};\n\n// Node.js\nif(isNode){\n  notify = function(){\n    process.nextTick(flush);\n  };\n// browsers with MutationObserver\n} else if(Observer){\n  var toggle = 1\n    , node   = document.createTextNode('');\n  new Observer(flush).observe(node, {characterData: true}); // eslint-disable-line no-new\n  notify = function(){\n    node.data = toggle = -toggle;\n  };\n// environments with maybe non-completely correct, but existent Promise\n} else if(Promise && Promise.resolve){\n  notify = function(){\n    Promise.resolve().then(flush);\n  };\n// for other environments - macrotask based on:\n// - setImmediate\n// - MessageChannel\n// - window.postMessag\n// - onreadystatechange\n// - setTimeout\n} else {\n  notify = function(){\n    // strange IE + webpack dev server bug - use .call(global)\n    macrotask.call(global, flush);\n  };\n}\n\nmodule.exports = function asap(fn){\n  var task = {fn: fn, next: undefined, domain: isNode && process.domain};\n  if(last)last.next = task;\n  if(!head){\n    head = task;\n    notify();\n  } last = task;\n};"]},"metadata":{},"sourceType":"script"}