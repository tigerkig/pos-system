{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\n/* eslint-disable @typescript-eslint/naming-convention */\n\nimport { unstable_createCssVarsProvider as createCssVarsProvider } from '@mui/system';\nimport experimental_extendTheme from './experimental_extendTheme';\nimport createTypography from './createTypography';\nvar defaultTheme = experimental_extendTheme();\n\nvar _createCssVarsProvide = createCssVarsProvider({\n  theme: defaultTheme,\n  attribute: 'data-mui-color-scheme',\n  modeStorageKey: 'mui-mode',\n  colorSchemeStorageKey: 'mui-color-scheme',\n  defaultColorScheme: {\n    light: 'light',\n    dark: 'dark'\n  },\n  prefix: 'md',\n  resolveTheme: function resolveTheme(theme) {\n    var newTheme = _extends({}, theme, {\n      typography: createTypography(theme.palette, theme.typography)\n    });\n\n    return newTheme;\n  },\n  shouldSkipGeneratingVar: function shouldSkipGeneratingVar(keys) {\n    return !!keys[0].match(/(typography|mixins|breakpoints|direction|transitions)/);\n  }\n}),\n    Experimental_CssVarsProvider = _createCssVarsProvide.CssVarsProvider,\n    useColorScheme = _createCssVarsProvide.useColorScheme,\n    getInitColorSchemeScript = _createCssVarsProvide.getInitColorSchemeScript;\n\nexport { useColorScheme, getInitColorSchemeScript, Experimental_CssVarsProvider };","map":{"version":3,"sources":["E:/React/pos-system/main/node_modules/@mui/material/styles/CssVarsProvider.js"],"names":["_extends","unstable_createCssVarsProvider","createCssVarsProvider","experimental_extendTheme","createTypography","defaultTheme","theme","attribute","modeStorageKey","colorSchemeStorageKey","defaultColorScheme","light","dark","prefix","resolveTheme","newTheme","typography","palette","shouldSkipGeneratingVar","keys","match","Experimental_CssVarsProvider","CssVarsProvider","useColorScheme","getInitColorSchemeScript"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,oCAArB;AAEA;;AACA,SAASC,8BAA8B,IAAIC,qBAA3C,QAAwE,aAAxE;AACA,OAAOC,wBAAP,MAAqC,4BAArC;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;AACA,IAAMC,YAAY,GAAGF,wBAAwB,EAA7C;;AACA,4BAIID,qBAAqB,CAAC;AACxBI,EAAAA,KAAK,EAAED,YADiB;AAExBE,EAAAA,SAAS,EAAE,uBAFa;AAGxBC,EAAAA,cAAc,EAAE,UAHQ;AAIxBC,EAAAA,qBAAqB,EAAE,kBAJC;AAKxBC,EAAAA,kBAAkB,EAAE;AAClBC,IAAAA,KAAK,EAAE,OADW;AAElBC,IAAAA,IAAI,EAAE;AAFY,GALI;AASxBC,EAAAA,MAAM,EAAE,IATgB;AAUxBC,EAAAA,YAAY,EAAE,sBAAAR,KAAK,EAAI;AACrB,QAAMS,QAAQ,GAAGf,QAAQ,CAAC,EAAD,EAAKM,KAAL,EAAY;AACnCU,MAAAA,UAAU,EAAEZ,gBAAgB,CAACE,KAAK,CAACW,OAAP,EAAgBX,KAAK,CAACU,UAAtB;AADO,KAAZ,CAAzB;;AAIA,WAAOD,QAAP;AACD,GAhBuB;AAiBxBG,EAAAA,uBAAuB,EAAE,iCAAAC,IAAI;AAAA,WAAI,CAAC,CAACA,IAAI,CAAC,CAAD,CAAJ,CAAQC,KAAR,CAAc,uDAAd,CAAN;AAAA;AAjBL,CAAD,CAJzB;AAAA,IACmBC,4BADnB,yBACEC,eADF;AAAA,IAEEC,cAFF,yBAEEA,cAFF;AAAA,IAGEC,wBAHF,yBAGEA,wBAHF;;AAuBA,SAASD,cAAT,EAAyBC,wBAAzB,EAAmDH,4BAAnD","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\n\n/* eslint-disable @typescript-eslint/naming-convention */\nimport { unstable_createCssVarsProvider as createCssVarsProvider } from '@mui/system';\nimport experimental_extendTheme from './experimental_extendTheme';\nimport createTypography from './createTypography';\nconst defaultTheme = experimental_extendTheme();\nconst {\n  CssVarsProvider: Experimental_CssVarsProvider,\n  useColorScheme,\n  getInitColorSchemeScript\n} = createCssVarsProvider({\n  theme: defaultTheme,\n  attribute: 'data-mui-color-scheme',\n  modeStorageKey: 'mui-mode',\n  colorSchemeStorageKey: 'mui-color-scheme',\n  defaultColorScheme: {\n    light: 'light',\n    dark: 'dark'\n  },\n  prefix: 'md',\n  resolveTheme: theme => {\n    const newTheme = _extends({}, theme, {\n      typography: createTypography(theme.palette, theme.typography)\n    });\n\n    return newTheme;\n  },\n  shouldSkipGeneratingVar: keys => !!keys[0].match(/(typography|mixins|breakpoints|direction|transitions)/)\n});\nexport { useColorScheme, getInitColorSchemeScript, Experimental_CssVarsProvider };"]},"metadata":{},"sourceType":"module"}