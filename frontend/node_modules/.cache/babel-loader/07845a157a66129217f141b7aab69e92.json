{"ast":null,"code":"var _jsxFileName = \"E:\\\\React\\\\pos-system\\\\main\\\\src\\\\views\\\\catalog\\\\AddProduct.js\",\n    _s = $RefreshSig$();\n\n// import React, { useState, useEffect } from 'react'\n// import axios from 'axios';\n// import { Link } from \"react-router-dom\";\n// import { Button } from \"reactstrap\";\n// import { FiArrowLeft, FiArrowRight } from \"react-icons/fi\";\n// import CreatableSelect from 'react-select/creatable';\n// import Select from 'react-select'\n// import Dialog from '@mui/material/Dialog';\n// import DialogActions from '@mui/material/DialogActions';\n// import DialogContent from '@mui/material/DialogContent';\n// import DialogTitle from '@mui/material/DialogTitle';\n// import SunEditor from 'suneditor-react';\n// import Checkbox from '@mui/material/Checkbox';\n// import FormControlLabel from '@mui/material/FormControlLabel';\n// import Dropzone from 'react-dropzone-uploader'\n// import Radio from '@mui/material/Radio';\n// import RadioGroup from '@mui/material/RadioGroup';\n// import { AiOutlinePlus, AiOutlinePercentage } from \"react-icons/ai\";\n// import { IoTrashOutline } from \"react-icons/io5\";\n// import { TbCurrencyDollar } from \"react-icons/tb\";\n// import { BsSearch } from \"react-icons/bs\";\n// import { ToastProvider, useToasts } from 'react-toast-notifications';\n// import 'react-dropzone-uploader/dist/styles.css'\n// import \"../online/online.css\"\n// import 'suneditor/dist/css/suneditor.min.css';\n// const brand = []\n// const productType = []\n// const tags = []\n// const Supplier = []\n// var imageUrl = []\n// const SKUCodeTypeOriginal = [\n//      { value: 'autoGenerated', label: 'Auto-Generated'},\n//      { value: 'custom', label: 'Custom'},\n//      { value: 'ean', label: 'EAN'},\n//      { value: 'isbn', label: 'ISBN'},\n//      { value: 'itf', label: 'ITF'},\n//      { value: 'jan', label: 'JAN'},\n//      { value: 'upc', label: 'UPC', isDisabled: true}\n// ]\n// const TaxArray = [\n//      { value: 'default', label: 'Default Tax for this outlet'},\n//      { value: 'noTax', label: 'No Tax(0%)'},\n// ]\n// const AddProduct = () => {\n//      const { addToast } = useToasts();\n//      const [brandModalOpen, setBrandModalOpen] = useState(false);\n//      const [typeModalOpen, setTypeModalOpen] = useState(false);\n//      const [supplierModalOpen, setSupplierModalOpen] = useState(false);\n//      const [generateSKU, setGenerateSKU] = useState('');\n//      const [productName, setProudctName] = useState('');\n//      const [newBrandName, setNewBrandName] = useState('');\n//      const [newSupplierName, setNewSupplierName] = useState('');\n//      const [newBrandDescription, setNewBrandDescription] = useState('');\n//      const [newSupplierDescription, setNewSupplierDescription] = useState('');\n//      const [newProductTypeName, setNewProductTypeName] = useState('');\n//      const [addCreateSelectBrand, setAddCreateSelectBrand] = useState({});\n//      const [addCreateSelectSupplier, setAddCreateSelectSupplier] = useState({});\n//      const [addCreateSelectProductType, setAddCreateSelectProductType] = useState({});\n//      const [uploadedImageURL, setUploadedImageURL] = useState([]);\n//      const [productCardActive, setProductCardActive] = useState(1);\n//      const [selectSKUCode, setSelectSKUCode] = useState(1);\n//      const [isShowNoData, setShowNoData] = useState(true);\n//      const [isShowNoData_1, setShowNoData_1] = useState(true);\n//      var   [increaseAddCode, setIncreaseAddCode] = useState(0);\n//      var   [increaseSupplier, setIncreaseSupplier] = useState(0);\n//      var   [increaseAttribute, setIncreaseAttribute] = useState(0);\n//      var   [increaseRelationShip, setIncreaseRelationShip] = useState(0);\n//      const [newSKUType, setNewSKUType] = useState([\n//           {\n//                type: '',\n//                code: ''\n//           }\n//      ]);\n//      const [newAttribute, setNewAttribute] = useState([]);\n//      const [newSupplier, setNewSupplier] = useState([]);\n//      const [newRelationShip, setNewRelationShip] = useState([]);\n//      const [newRelationShip_1, setNewRelationShip_1] = useState([]);\n//      const [scrollPosition, setScrollPosition] = useState(0);\n//      var AppendBody = [];\n//      var AppendSupplierBody = [];\n//      var AppendAttributeBody = [];\n//      var AppendRelationShip = [];\n//      var AppendRelationShip_1 = [];\n//      const modalClose = (index) => {\n//           switch(index) {\n//                case 'supplierModal':\n//                     setSupplierModalOpen(false)\n//                     break;\n//                case 'brandModal':\n//                     setBrandModalOpen(false)\n//                     break;\n//                case 'productTypeModal':\n//                     setTypeModalOpen(false)\n//                     break;\n//           }\n//      }\n//      const changeCreatableSelect = (index, e) => {\n//           console.log(index, e)\n//           switch(index) {\n//                case 'chooseBrand':\n//                     if(e && e.__isNew__) {\n//                          setAddCreateSelectBrand({ value: e.value, label: e.label })\n//                          setNewBrandName(e.value)\n//                          setBrandModalOpen(true)\n//                     } else if(e) {\n//                          setAddCreateSelectBrand({ value: e.value, label: e.label })\n//                     } else {\n//                          setAddCreateSelectBrand('')\n//                     }\n//                     break;\n//                case 'chooseSupplier':\n//                     if(e && e.__isNew__) {\n//                          setAddCreateSelectSupplier({ value: e.value, label: e.label })\n//                          setNewSupplierName(e.value)\n//                          setSupplierModalOpen(true)\n//                     } else if(e) {\n//                          setAddCreateSelectSupplier({ value: e.value, label: e.label })\n//                     } else {\n//                          setAddCreateSelectSupplier('')\n//                     }\n//                     break;\n//           }\n//      }\n//      const prodcutTypeChange = (e) => {\n//           if(e && e.__isNew__) {\n//                setAddCreateSelectProductType({ value: e.label, label: e.value })\n//                setNewProductTypeName(e.value)\n//                setTypeModalOpen(true)\n//           }\n//      }\n//      const addBrand = () => {\n//           var data = { name: newBrandName, description: newBrandDescription }\n//           axios.post(\"brand/addBrand\", data)\n//                .then(res => {\n//                     if(res.status === 200) {\n//                          addToast(res.data.msg, { appearance: 'success' });\n//                          brand.push(addCreateSelectBrand)\n//                          setBrandModalOpen(false)\n//                          return\n//                     }\n//                     addToast(res.data.msg, { appearance: 'error' });\n//                })\n//      }\n//      const addProductType = () => {\n//           var data = { type: newProductTypeName }\n//           axios.post(\"productType/addProductType\", data)\n//                .then(res => {\n//                     if(res.status === 200) {\n//                          addToast(res.data.msg, { appearance: 'success' });\n//                          productType.push(addCreateSelectProductType)\n//                          setTypeModalOpen(false)\n//                          return\n//                     }\n//                     addToast(res.data.msg, { appearance: 'error' });\n//                })\n//      }\n//      const addSupplier = () => {\n//           var data = { name: newSupplierName, description: newSupplierDescription }\n//           axios.post(\"product/addSupplier\", data)\n//                .then(res => {\n//                     if(res.status === 200) {\n//                          addToast(res.data.msg, { appearance: 'success' });\n//                          Supplier.push(addCreateSelectSupplier)\n//                          setSupplierModalOpen(false)\n//                          return\n//                     }\n//                     addToast(res.data.msg, { appearance: 'error' });\n//                })\n//      }\n//      const handleSubmit = (files, allFiles) => {\n//           console.log(uploadedImageURL)\n//      }\n//      const getUploadParams = ({ meta }) => { \n//           return { url: 'product/imageUpload' } \n//      }\n//      const handleChangeStatus = ({ meta, file, xhr }, status) => { \n//           if(status == \"done\" && xhr.status == 200) { \n//                var data = JSON.parse(xhr.response)\n//                imageUrl.push(data.images)\n//                setUploadedImageURL(imageUrl)\n//                console.log(data.images)\n//                addToast(data.msg, { appearance: 'success' });\n//           }\n//           if(status == 'removed') {\n//                var formData = new FormData();\n//                formData.append('file', file);\n//                axios.post('product/imageRemove', formData)\n//                     .then(res => {\n//                          if(res.status === 200) {\n//                               addToast(res.data.msg, { appearance: 'success' });\n//                               return\n//                          }\n//                          addToast(res.data.msg, { appearance: 'error' });\n//                     })\n//           }\n//           // console.log(status, meta, file)\n//      }\n//      const chooseProduct = (selected) => {\n//           setProductCardActive(selected)\n//           if(selected === 1) {\n//                axios.post(\"/product/generateSKU\")\n//                     .then(res => {\n//                          setGenerateSKU(res.data.code)\n//                     })\n//           }\n//      }\n//      const removeSKUCode = (index) => {\n//           const rows = [...newSKUType];\n//           rows.splice(index, 1);\n//           setNewSKUType(rows);\n//      }\n//      const addSKUCode = () => {\n//           setNewSKUType([...newSKUType, {\n//                type: '',\n//                code: ''\n//           }])\n//      }\n//      const changeNewSKUCode = (index, evnt) => {\n//           const { name, value } = evnt.target;\n//           const list = [...newSKUType];\n//           console.log(name, value)\n//           list[index][name] = value;\n//           setNewSKUType(list);\n//      }\n//      const appendNewAttribute = (index) => {\n//           AppendAttributeBody = []\n//           for (var i = 0; i < index; i += 1) {\n//                AppendAttributeBody.push(<div className='row' key={i}> \n//                                              <div className='col-md-4'>\n//                                                   <CreatableSelect\n//                                                        isMulti\n//                                                        onChange={(e) => changeCreatableSelect('chooseAttribute', e)}\n//                                                        options={Supplier}\n//                                                        // value={addCreateSelectSupplier}\n//                                                        placeholder=\"Choose a variant attribute\" />\n//                                              </div>\n//                                              <div className='col-md-7'>\n//                                                   <CreatableSelect\n//                                                        isMulti\n//                                                        onChange={(e) => tagsChange(e)}\n//                                                        // options={tags}\n//                                                        placeholder=\"Enter a value\" /> \n//                                              </div>\n//                                              <div className='col-md-1 remove'>\n//                                                   <span onClick={() => removeAttribute()}><IoTrashOutline /></span>\n//                                              </div>\n//                                         </div>);\n//           }\n//           setNewAttribute(AppendAttributeBody)\n//      }\n//      const addNewAttribute = () => {\n//           setIncreaseAttribute(++increaseAttribute)\n//           appendNewAttribute(increaseAttribute)\n//      }\n//      const removeAttribute = () => {\n//           setIncreaseAttribute(--increaseAttribute)\n//           appendNewAttribute(increaseAttribute)\n//      }\n//      /* Append New Supplier when create select */\n//      const appendNewSupplier = (index) => {\n//           AppendSupplierBody = []\n//           for (var i = 0; i < index; i += 1) {\n//                AppendSupplierBody.push(<div className='row' key={i}>\n//                                              <div className='col-md-4'>\n//                                                   <CreatableSelect\n//                                                        isClearable\n//                                                        onChange={(e) => changeCreatableSelect('chooseSupplier', e)}\n//                                                        options={Supplier}\n//                                                        // value={addCreateSelectSupplier}\n//                                                        placeholder=\"Choose a supplier\" />\n//                                              </div>\n//                                              <div className='col-md-4'>\n//                                                   <input className='vend-settings-input fullWidth max-height-input' placeholder='Enter supplier code' />\n//                                              </div>\n//                                              <div className='col-md-3'>  \n//                                                   <div className='withIconInput'>\n//                                                        <TbCurrencyDollar />\n//                                                        <input className='vend-settings-input fullWidth max-height-input' placeholder='0.00' />\n//                                                   </div>\n//                                              </div>\n//                                              <div className='col-md-1 remove'>\n//                                                   <span onClick={() => removeNewSupplier()}><IoTrashOutline /></span>\n//                                              </div>\n//                                         </div>)\n//           }\n//           setNewSupplier(AppendSupplierBody)\n//      }\n//      const addNewSupplier = () => {\n//           setIncreaseSupplier(++increaseSupplier)\n//           appendNewSupplier(increaseSupplier)\n//      }\n//      const removeNewSupplier = () => {\n//           setIncreaseSupplier(--increaseSupplier)\n//           appendNewSupplier(increaseSupplier)\n//      }\n//      /* End--- Append New Supplier when create select */\n//      const changeSelectSKUCode = (index) => {\n//           setSelectSKUCode(index)\n//      }\n//      const addProductRelationShip = () => {\n//           setShowNoData(false)\n//           setIncreaseRelationShip(++increaseRelationShip)\n//           appendRelationShip(increaseRelationShip)\n//      }\n//      const removeProductRelationShip = () => {\n//           setIncreaseRelationShip(--increaseRelationShip)\n//           appendRelationShip(increaseRelationShip)\n//           if(increaseRelationShip == 0) {\n//                setShowNoData(true)\n//           }\n//      }\n//      const appendRelationShip = (index) => {\n//           AppendRelationShip = []\n//           for (var i = 0; i < index; i += 1) {\n//                AppendRelationShip.push(<>\n//                                         <div className='flex' key={i}>\n//                                              <div className='col-md-6'>\n//                                                   <div className='flex'>\n//                                                        <div className='relative fullWidth'>\n//                                                             <BsSearch className='search-icon' />\n//                                                             <input className='vend-settings-input fullWidth search-style' placeholder='Search or scan to add a product' />\n//                                                        </div>\n//                                                        <div>\n//                                                             <FiArrowRight className='ComeFromRightIcon' />\n//                                                        </div>\n//                                                   </div>                                   \n//                                              </div>\n//                                              <div className='col-md-6'>\n//                                                   <div className='between'>\n//                                                        <div className='flex'>\n//                                                             <div className='third-body'>\n//                                                                  <input className='vend-settings-input fullWidth max-height-input' placeholder='Qty' />\n//                                                             </div>\n//                                                             <div className='relationShip'>\n//                                                                  <span className='margin-zero'>Product Name</span>\n//                                                                  <span className='description margin-zero'>10035</span>\n//                                                             </div>\n//                                                        </div>\n//                                                        <div>\n//                                                             <div className='remove'>\n//                                                                  <span onClick={() => removeProductRelationShip()}><IoTrashOutline /></span>\n//                                                             </div>\n//                                                        </div>\n//                                                   </div>\n//                                              </div>\n//                                         </div>\n//                                         <div className='divider'></div>\n//                </>);\n//           }\n//           setNewRelationShip(AppendRelationShip)\n//      }\n//      const addProductRelationShip_1 = () => {\n//           setShowNoData_1(false)\n//           AppendRelationShip_1 = []\n//           // for (var i = 0; i < index; i += 1) {\n//                AppendRelationShip_1.push(<>\n//                                         <div className='flex' key={AppendRelationShip_1.length}>\n//                                              <div className='col-md-6'>\n//                                                   <div className='between fullWidth'>\n//                                                        <div className='relationShip'>\n//                                                             <span className='margin-zero'>Product Name</span>\n//                                                             <span className='description margin-zero'>10035</span>\n//                                                        </div>\n//                                                        <div>\n//                                                             <FiArrowRight className='ComeFromRightIcon' />\n//                                                        </div>\n//                                                   </div>                                   \n//                                              </div>\n//                                              <div className='col-md-6'>\n//                                                   <div className='between'>\n//                                                        <div className='third-body'>\n//                                                             <input className='vend-settings-input fullWidth max-height-input' placeholder='Qty' />\n//                                                        </div>\n//                                                        <div className='relative fullWidth'>\n//                                                             <BsSearch className='search-icon' />\n//                                                             <input className='vend-settings-input fullWidth search-style' placeholder='Search or scan to add a product' />\n//                                                        </div>\n//                                                        <div>\n//                                                             <div className='remove'>\n//                                                                  <span onClick={() => removeProductRelationShip_1()}><IoTrashOutline /></span>\n//                                                             </div>\n//                                                        </div>\n//                                                   </div>\n//                                              </div>\n//                                         </div>\n//                                         <div className='divider'></div>\n//                </>);\n//           // }\n//           setNewRelationShip_1(AppendRelationShip_1)\n//      }\n//      const removeProductRelationShip_1 = () => {\n//           setShowNoData_1(true)\n//           AppendRelationShip_1 = []\n//           setNewRelationShip_1(AppendRelationShip_1)\n//      }\n//      const changeInput = (index, val) => {\n//           switch(index) {\n//                case 'productName':\n//                     setProudctName(val)\n//                     break;\n//                case 'sku_code':\n//                     setGenerateSKU(val)\n//                     break;\n//                case 'addBrandName':\n//                     setAddCreateSelectBrand({value: addCreateSelectBrand.value, label: val})\n//                     setNewBrandName(val)\n//                case 'addBrandDescription':\n//                     setNewBrandDescription(val)\n//                     break;\n//                case 'addSupplierName':\n//                     setAddCreateSelectSupplier({value: addCreateSelectBrand.value, label: val})\n//                     setNewSupplierName(val)\n//                case 'addSupplierDescription':\n//                     setNewSupplierDescription(val)\n//                     break;\n//                case 'addProductTypeName':\n//                     setAddCreateSelectProductType({value: addCreateSelectProductType.value, label: val})\n//                     setNewProductTypeName(val)\n//                     break;\n//           }\n//      }\n//      useEffect(() => {\n//           window.addEventListener(\"scroll\", handleScroll);\n//           axios.post(\"/brand\")\n//                .then(res => {\n//                     res.data.data.map((item, index) => {\n//                          var obj = {}\n//                          obj.value = item.id\n//                          obj.label = item.name\n//                          brand.push(obj)\n//                     })\n//                })\n//           axios.post(\"/productType\")\n//                .then(res => {\n//                     res.data.data.map((item, index) => {\n//                          var obj = {}\n//                          obj.value = item.id\n//                          obj.label = item.type\n//                          productType.push(obj)\n//                     })\n//                })\n//           axios.post(\"/product/generateSKU\")\n//                .then(res => {\n//                     setGenerateSKU(res.data.code)\n//                })\n//           axios.post(\"product/getSupplier\")\n//                .then(res => {\n//                     res.data.data.map((item, index) => {\n//                          var obj = {}\n//                          obj.value = item.id\n//                          obj.label = item.name\n//                          Supplier.push(obj)\n//                     })\n//                })\n//      }, []);\n//      const handleScroll = () => {\n//           const position = window.pageYOffset;\n//           setScrollPosition(position)\n//      };\n//      const tagsChange = (e) => {\n//           tags.push({value: e.value, label: e.label})\n//      }\n//      return(\n//           <>\n//                <div className='online-header'>\n//                     <h2>\n//                          <Link to='/catalog/products'><FiArrowLeft className='navigate-before-icon' /></Link> \n//                          New Product\n//                     </h2>\n//                </div>\n//                <div className={scrollPosition >= 100 ? 'online-title between fixed-header':'online-title between'}>\n//                     <div>\n//                          <p>Add, view and edit your products in one place. <Link to='' className=''>Need help?</Link></p>\n//                     </div>\n//                     <div className='products-header'>\n//                          <Button className='vd-btn--supplementary'>Cancel</Button>\n//                          <Button >Save</Button>\n//                     </div>\n//                </div>\n//                <div className='componentPadding flex'>\n//                     <div className='col-md-3'>\n//                          <h4>General</h4>\n//                          <p>Change general information for this product.</p>\n//                     </div>\n//                     <div className='col-md-9 marginTop'>\n//                          <div className='flex input-header-margin'>\n//                               <div className='half-body'>\n//                                    <p>Name</p>\n//                                    <input className='vend-settings-input fullWidth max-height-input' value={productName} onChange={(e) => changeInput('productName', e.target.value)}/>\n//                               </div>\n//                               <div className='margin'></div>\n//                               <div className='half-body'>\n//                                    <p>Brand</p>\n//                                    <CreatableSelect\n//                                         isClearable\n//                                         onChange={(e) => changeCreatableSelect('chooseBrand', e)}\n//                                         options={brand}\n//                                         value={addCreateSelectBrand}\n//                                         placeholder=\"Choose a brand\" />\n//                               </div>\n//                          </div>\n//                          <div className=\"marginTop\"></div>\n//                          <div className='input-header-margin'>\n//                               <p>Description</p>\n//                               <SunEditor />\n//                          </div>\n//                          <div className=\"marginTop\"></div>\n//                          <div className='input-header-margin'>\n//                               <p><strong>Tags</strong> Describe the product using relevant keywords for easy filtering.</p>\n//                               <CreatableSelect\n//                                    isMulti\n//                                    onChange={(e) => tagsChange(e)}\n//                                    options={tags}\n//                                    placeholder=\"Enter a tag name\" /> \n//                          </div>\n//                          <div className=\"marginTop\"></div>\n//                          <div className='input-header-margin'>\n//                               <p><strong>Product Type</strong> Categorize your products with types that can be used to filter sales and inventory reports.</p>\n//                               <CreatableSelect\n//                                    isClearable\n//                                    onChange={(e) => prodcutTypeChange(e)}\n//                                    options={productType}\n//                                    value={addCreateSelectProductType}\n//                                    placeholder=\"Enter a tag name\" /> \n//                          </div>\n//                          <div className='imageSize'>\n//                               <FormControlLabel\n//                                    value=\"end\"\n//                                    control={<Checkbox />}\n//                                    label=\"Sell on Point-of-Sale\"\n//                                    labelPlacement=\"end\"/>\n//                               <p className='description'>Make this product active and available for sale in-store</p>\n//                          </div>\n//                          <div className='marginTop'></div>\n//                          <div>\n//                               <Dropzone\n//                                    getUploadParams={getUploadParams}\n//                                    onChangeStatus={handleChangeStatus}\n//                                    onSubmit={handleSubmit}\n//                                    inputContent={(files, extra) => (extra.reject ? 'Only Image files allowed!' : 'Select and Drop Files')}\n//                                    styles={{\n//                                         dropzoneReject: { borderColor: '#F19373', backgroundColor: '#F1BDAB' },\n//                                         inputLabel: (files, extra) => (extra.reject ? { color: '#A02800' } : {}),\n//                                    }}\n//                                    accept=\"image/*\"\n//                               />\n//                          </div>\n//                     </div>\n//                </div>\n//                <div className='divider'></div>\n//                <div className='componentPadding flex'>\n//                     <div className='col-md-3'>\n//                          <h4>Inventory</h4>\n//                          <p>The type of product we choose determines how we manage inventory and reporting.</p>\n//                     </div>\n//                     <div className='col-md-9'>\n//                          <div className='flex text-align-center'>\n//                               <div className={productCardActive == 1 ? 'col-md-4 choose-product-cards choose-product choose-product-card-active' : 'col-md-4 choose-product-cards choose-product'} onClick={() => chooseProduct(1)}>\n//                                    <h4>Standard Product</h4>\n//                                    <p>This product is a single SKU with its own inventory.</p>\n//                               </div>    \n//                               <div className={productCardActive == 2 ? 'col-md-4 choose-product-cards choose-product choose-product-card-active' : 'col-md-4 choose-product-cards choose-product'} onClick={() => chooseProduct(2)}>\n//                                    <h4>Variant Product</h4>\n//                                    <p>This is a group of similar products which have different attributes, like size or color. Each variant is a unique SKU with its own inventory.</p>\n//                               </div>\n//                               <div className={productCardActive == 3 ? 'col-md-4 choose-product-cards choose-product choose-product-card-active' : 'col-md-4 choose-product-cards choose-product'} onClick={() => chooseProduct(3)}>\n//                                    <h4>Composite Product</h4>\n//                                    <p>This product is made up of specified quantities of one or more products. A composite is a single SKU but uses the inventory of the products within it.</p>\n//                               </div>\n//                          </div>\n//                          {productCardActive == 1 ?\n//                               <div>\n//                                    <h5>SKU CODES</h5>\n//                                    <div className='flex input-header-margin'>\n//                                         <div className='half-body'>\n//                                              <div className='row'>\n//                                                   <div className='col-md-5'>\n//                                                        <p>SKU Code Type</p>\n//                                                        <Select \n//                                                             defaultValue = {SKUCodeTypeOriginal.filter(option => option.value === 'autoGenerated')}\n//                                                             options={SKUCodeTypeOriginal} />\n//                                                   </div>\n//                                                   <div className='col-md-7'>\n//                                                        <p>SKU Code</p>\n//                                                        <input className='vend-settings-input fullWidth max-height-input' value={generateSKU} onChange={(e) => changeInput('sku_code', e.target.value)} />\n//                                                   </div>\n//                                              </div>\n//                                              {newSKUType.map((item, index) => {\n//                                                   return (\n//                                                        <div className='row' key={index}>\n//                                                             <div className='col-md-5'>\n//                                                                  <p>SKU Code Type</p>\n//                                                                  <Select options={SKUCodeTypeOriginal.filter(option => option.value !== 'autoGenerated')} name='type' />\n//                                                             </div>\n//                                                             <div className='col-md-5'>\n//                                                                  <p>SKU Code</p>\n//                                                                  <input className='vend-settings-input fullWidth max-height-input' name='code[]' onChange={(evnt) => changeNewSKUCode(index, evnt)} value={item.code} />\n//                                                             </div>\n//                                                             <div className='col-md-2 remove'>\n//                                                                  <span onClick={() => removeSKUCode()}><IoTrashOutline /></span>\n//                                                             </div>\n//                                                        </div>\n//                                                   )\n//                                              })}\n//                                              <Button onClick={() => addSKUCode()}><AiOutlinePlus />Add Another Code</Button>\n//                                         </div>\n//                                         <div className='margin'></div>\n//                                         <div className='half-body'>\n//                                              <p>Preview</p>\n//                                              <div className='SKU-preview'>\n//                                                   <div className='flex'>\n//                                                        <div className=\"vd-id-badge__image\" ></div>\n//                                                        <div>\n//                                                             <p>{productName ? productName : 'Product Name'}</p>\n//                                                             <p className='description'>{generateSKU ? generateSKU : 'generated SKU code'}</p>\n//                                                        </div>\n//                                                   </div>    \n//                                                   <div className='divider'></div>\n//                                                   <p className='description'>The first SKU code will be shown to staff and customers to help identify this product. When you have multiple codes all the barcodes will be scannable.</p>\n//                                              </div>\n//                                         </div>\n//                                    </div>\n//                                    <div className='divider'></div>\n//                               </div> : ''\n//                          }  \n//                          {productCardActive == 1 || productCardActive == 2 ? \n//                               <>\n//                                    <h5>SUPPLIER INFORMATION</h5>\n//                                    <div className='row input-header-margin'>\n//                                         <div className='col-md-4'><p>Supplier</p></div>\n//                                         <div className='col-md-4'><p>Supplier Code</p></div>\n//                                         <div className='col-md-4'><p>Supplier Price</p></div>\n//                                    </div>\n//                                    <div className='divider'></div>\n//                                         <div className='row'>\n//                                              <div className='col-md-4'>\n//                                                   <CreatableSelect\n//                                                        isClearable\n//                                                        onChange={(e) => changeCreatableSelect('chooseSupplier', e)}\n//                                                        options={Supplier}\n//                                                        // value={addCreateSelectSupplier}\n//                                                        placeholder=\"Choose a supplier\" />\n//                                              </div>\n//                                              <div className='col-md-4'>\n//                                                   <input className='vend-settings-input fullWidth max-height-input' placeholder='Enter supplier code' />\n//                                              </div>\n//                                              <div className='col-md-4'>\n//                                                   <div className='withIconInput'>\n//                                                        <TbCurrencyDollar />\n//                                                        <input className='vend-settings-input fullWidth max-height-input' placeholder='Enter the amount' />\n//                                                   </div>\n//                                              </div>\n//                                         </div>\n//                                    {newSupplier}\n//                                    <Button onClick={() => addNewSupplier()}><AiOutlinePlus />Add Another Supplier</Button>\n//                                    <div className='divider'></div>\n//                                    <h5>INVENTORY LEVELS</h5>\n//                                    <div className='imageSize'>\n//                                         <FormControlLabel\n//                                              value=\"end\"\n//                                              control={<Checkbox />}\n//                                              label=\"Track Inventory for this product\"\n//                                              labelPlacement=\"end\"/>\n//                                         <p className='description'>Manage orders, transfers and returns accurately, and get reports and insights on this product’s performance.</p>\n//                                    </div>\n//                               </> : ''\n//                          }      \n//                          {productCardActive == 3 ?\n//                               <>\n//                                    <RadioGroup\n//                                         aria-labelledby=\"demo-radio-buttons-group-label\"\n//                                         defaultValue=\"auto\"\n//                                         name=\"radio-buttons-group\">\n//                                         <div className='imageSize'>\n//                                              <FormControlLabel value=\"auto\" control={<Radio onChange={() => changeSelectSKUCode(1)} />} label=\"Automatically Generate a SKU\" />\n//                                              {selectSKUCode == 1 ? \n//                                                   <p className='description'>A SKU will automatically be generated once this product has been saved</p>\n//                                                   : ''\n//                                              }\n//                                         </div>\n//                                         <div>\n//                                              <FormControlLabel value=\"custom\" control={<Radio onChange={() => changeSelectSKUCode(2)} />} label=\"Enter a custom SKU\" />\n//                                              {selectSKUCode == 2 ?\n//                                                   <div className='paddingLeft'>\n//                                                        <input className='vend-settings-input fullWidth max-height-input' />\n//                                                        <p className='description'>Only use lower case letters and numbers, no symbols or spaces</p>\n//                                                   </div> : ''\n//                                              }\n//                                         </div>\n//                                    </RadioGroup>\n//                               </> : ''\n//                          }       \n//                          {productCardActive == 1 ? \n//                               <>\n//                                    <div className='row input-header-margin'>\n//                                         <div className='col-md-3'><p>Outlet</p></div>\n//                                         <div className='col-md-3'><p>Current Inventory</p></div>\n//                                         <div className='col-md-3'><p>Re-order Point</p></div>\n//                                         <div className='col-md-3'><p>Re-order Quantity</p></div>\n//                                    </div>\n//                                    <div className='divider'></div>\n//                                    <div className='row'>\n//                                         <div className='col-md-3'>\n//                                              <p>Main Outlet</p>\n//                                         </div>\n//                                         <div className='col-md-3'>\n//                                              <input className='vend-settings-input fullWidth max-height-input' />\n//                                         </div>\n//                                         <div className='col-md-3'>\n//                                              <input className='vend-settings-input fullWidth max-height-input' />\n//                                         </div>\n//                                         <div className='col-md-3'>\n//                                              <input className='vend-settings-input fullWidth max-height-input' />\n//                                         </div>\n//                                    </div>\n//                               </> : ''\n//                          }          \n//                     </div>\n//                </div>\n//                {productCardActive == 1 ? \n//                     <>\n//                          <div className='divider'></div>\n//                          <div className='componentPadding flex'>\n//                               <div className='col-md-3'>\n//                                    <h4>Packaging</h4>\n//                                    <p>Set up packaging relationships by linking this product to other SKUs. This helps you easily manage the inventory levels across products that come in different packaging.</p>\n//                               </div>\n//                               <div className='col-md-9'>\n//                                    <h4>The products that this product comes from.</h4>\n//                                    <div className='divider'></div>\n//                                    {isShowNoData && \n//                                         <>\n//                                              <div className='no-table'>\n//                                                   <img src=\"//vendfrontendassets.freetls.fastly.net/images/products/packaging-comes-from.svg\" />\n//                                                   <p>If this product comes from other products, add the products here.</p>\n//                                              </div>\n//                                              <div className='divider'></div>\n//                                         </>\n//                                    }\n//                                    {newRelationShip}\n//                                    <Button onClick={() => addProductRelationShip()}><AiOutlinePlus />Add a Product RelationShip</Button>\n//                                    <div className='margin'></div>\n//                                    <h4>The product that this product breaks into. </h4>\n//                                    <span>Products can only break into one other product.</span>\n//                                    <div className='divider'></div>\n//                                    {isShowNoData_1 && \n//                                         <>\n//                                              <div className='no-table'>\n//                                                   <img src=\"//vendfrontendassets.freetls.fastly.net/images/products/packaging-breaks-into.svg\" />\n//                                                   <p>If this product breaks into another product, add the product here.</p>\n//                                              </div>\n//                                              <div className='divider'></div>\n//                                         </>\n//                                    }\n//                                    {newRelationShip_1}\n//                                    <Button onClick={() => addProductRelationShip_1()}><AiOutlinePlus />Add a Product RelationShip</Button>\n//                               </div>\n//                          </div>\n//                     </> : ''\n//                }\n//                {productCardActive == 3 ? \n//                     <>\n//                          <div className='divider'></div>\n//                          <div className='componentPadding flex'>\n//                               <div className='col-md-3'>\n//                                    <h4>Products</h4>\n//                                    <p>Add multiple products to create a composite product.</p>\n//                               </div>\n//                               <div className='col-md-9'>\n//                                    <p>Search for products to add</p>\n//                                    <Select options={TaxArray} placeholder='Search or Scan for products' />\n//                               </div>\n//                          </div>\n//                     </> : ''\n//                }\n//                <div className='divider'></div>\n//                <div className='componentPadding flex'>\n//                     <div className='col-md-3'>\n//                          <h4>Tax</h4>\n//                     </div>\n//                     <div className='col-md-9'>\n//                          <div className='row input-header-margin'>\n//                               <div className='col-md-3'><p>Outlet</p></div>\n//                               <div className='col-md-9'><p>Tax</p></div>\n//                          </div>\n//                          <div className='divider'></div>\n//                          <div className='row'>\n//                               <div className='col-md-3'><p>Main Outlet</p></div>\n//                               <div className='col-md-9'>\n//                                    <Select options={TaxArray} />\n//                               </div>\n//                          </div>\n//                     </div>\n//                </div>\n//                <div className='divider'></div>\n//                <div className='componentPadding flex'>\n//                     <div className='col-md-3'>\n//                          <h4>Price</h4>\n//                     </div>\n//                     {productCardActive == 1 ?\n//                          <div className='col-md-9'>\n//                               <div className='row input-header-margin'>\n//                                    <div className='col-md-3'><p>Price Point</p></div>\n//                                    <div className='col-md-2'><p>Outlet</p></div>\n//                                    <div className='col-md-1'><p>Supply Price</p></div>\n//                                    <div className='col-md-3'><p>Markup</p></div>\n//                                    <div className='col-md-3'><p>Retail Price</p><p className='description'>Excluding Tax</p></div>\n//                               </div>\n//                               <div className='divider'></div>\n//                               <div className='row'>\n//                                    <div className='col-md-3'><p>General Price Book (All Products)</p></div>\n//                                    <div className='col-md-2'><p>All Outlets\t</p></div>\n//                                    <div className='col-md-1'><p>$0.00</p></div>\n//                                    <div className='col-md-3'>\n//                                         <div className='withIconInput'>\n//                                              <AiOutlinePercentage />\n//                                              <input className='vend-settings-input fullWidth max-height-input' placeholder='Enter the amount' />\n//                                         </div>\n//                                    </div>\n//                                    <div className='col-md-3'>\n//                                         <div className='withIconInput'>\n//                                              <TbCurrencyDollar />\n//                                              <input className='vend-settings-input fullWidth max-height-input' placeholder='Enter the amount' />\n//                                         </div>\n//                                    </div>\n//                               </div>\n//                          </div> \n//                          : \n//                          <div className='col-md-9'>\n//                               <div className='row'>\n//                                    <div className='col-md-6 '>\n//                                         <p>Supply Price</p>\n//                                    </div>\n//                                    <div className='col-md-6 text-end'>\n//                                         <p>$0.00</p>\n//                                    </div>\n//                               </div>\n//                               <div className='row'>\n//                                    <div className='col-md-6'>\n//                                         <p>Markup</p>\n//                                    </div>\n//                                    <div className='col-md-6'>\n//                                         <input className='vend-settings-input fullWidth max-height-input' placeholder='0.00' />\n//                                    </div>\n//                               </div>\n//                               <div className='divider'></div>\n//                               <div className='row'>\n//                                    <div className='col-md-6'>\n//                                         <p>Retail Price <span>Excluding Tax</span></p>\n//                                    </div>\n//                                    <div className='col-md-6'>\n//                                         <div className='withIconInput'>\n//                                              <TbCurrencyDollar />\n//                                              <input className='vend-settings-input fullWidth max-height-input' placeholder='0.00' />\n//                                         </div>\n//                                    </div>\n//                               </div>\n//                          </div>\n//                     }\n//                </div>\n//                {productCardActive == 2 ? \n//                     <>\n//                          <div className='divider'></div>\n//                          <div className='componentPadding flex'>\n//                               <div className='col-md-3'>\n//                                    <h4>Variants</h4>\n//                                    <p>Choose up to three variable attributes for this product to create and manage SKUs and their inventory levels.</p>\n//                               </div>\n//                               <div className='col-md-9'>\n//                                    <div className='row'> \n//                                         <div className='col-md-4'>\n//                                              <p>Attribute (e.g. Colour)</p>\n//                                              <CreatableSelect\n//                                                   isClearable\n//                                                   onChange={(e) => changeCreatableSelect('chooseSupplier', e)}\n//                                                   options={Supplier}\n//                                                   // value={addCreateSelectSupplier}\n//                                                   placeholder=\"Choose a variant attribute\" />\n//                                         </div>\n//                                         <div className='col-md-8'>\n//                                              <p>Value (e.g. Red, Blue, Green)</p>\n//                                              <CreatableSelect\n//                                                   isMulti\n//                                                   onChange={(e) => tagsChange(e)}\n//                                                   // options={tags}\n//                                                   placeholder=\"Enter a value\" /> \n//                                         </div>\n//                                    </div>\n//                                    {newAttribute}\n//                                    {increaseAttribute < 2 ? \n//                                         <Button onClick={() => addNewAttribute()}><AiOutlinePlus />Add Another Attribute</Button>\n//                                         : ''\n//                                    }\n//                                    <h4 className='marginTop'>This product has 0 variant.</h4>\n//                                    <div className='row'>\n//                                         <div className='col-md-3'><p>Variant Name</p></div>\n//                                         <div className='col-md-2'><p>SKU Code</p></div>\n//                                         <div className='col-md-2'><p>Supplier Code</p></div>\n//                                         <div className='col-md-2'><p>Supplier Price</p></div>\n//                                         <div className='col-md-2'><p>Retail Price</p><p className='description'>Excluding Tax</p></div>\n//                                         <div className='col-md-1'><p>Enabled</p></div>\n//                                    </div>\n//                               </div>\n//                          </div>\n//                     </> : ''\n//                }\n//                <Dialog open={brandModalOpen} onClose={() => modalClose('brandModal')} fullWidth >\n//                     <DialogTitle>Add Brand</DialogTitle>\n//                     <DialogContent className='input-header-margin' >\n//                          <p>Brand Name</p>\n//                          <input className='vend-settings-input fullWidth max-height-input' value={newBrandName} onChange={(e) => changeInput('addBrandName', e.target.value)} />\n//                          <div className='marginTop'></div>\n//                          <p>Description</p>\n//                          <textarea className='fullWidth vend-settings-input text-area-height' onChange={(e) => changeInput('addBrandDescription', e.target.value)} placeholder='Enter a description for this brand that your staff will find useful.'></textarea>\n//                     </DialogContent>\n//                     <DialogActions>\n//                          <Button onClick={() => modalClose('brandModal')}>Cancel</Button>\n//                          <Button onClick={() => addBrand()}>Add Brand</Button>\n//                     </DialogActions>\n//                </Dialog>\n//                <Dialog open={supplierModalOpen} onClose={() => modalClose('supplierModal')} fullWidth >\n//                     <DialogTitle>Add Supplier</DialogTitle>\n//                     <DialogContent className='input-header-margin' >\n//                          <p>Supplier Name</p>\n//                          <input className='vend-settings-input fullWidth max-height-input' value={newSupplierName} onChange={(e) => changeInput('addSupplierName', e.target.value)} />\n//                          <div className='marginTop'></div>\n//                          <p>Description</p>\n//                          <textarea className='fullWidth vend-settings-input text-area-height' onChange={(e) => changeInput('addSupplierDescription', e.target.value)} placeholder='Enter a description for this supplier that your staff will find useful.'></textarea>\n//                     </DialogContent>\n//                     <DialogActions>\n//                          <Button onClick={() => modalClose('supplierModal')}>Cancel</Button>\n//                          <Button onClick={() => addSupplier()}>Add Supplier</Button>\n//                     </DialogActions>\n//                </Dialog>\n//                <Dialog open={typeModalOpen} onClose={() => modalClose('productTypeModal')} fullWidth >\n//                     <DialogTitle>Add Product Type</DialogTitle>\n//                     <DialogContent className='input-header-margin' >\n//                          <p>Product Type Name</p>\n//                          <input className='vend-settings-input fullWidth max-height-input' value={newProductTypeName} onChange={(e) => changeInput('addProductTypeName', e.target.value)} />\n//                     </DialogContent>\n//                     <DialogActions>\n//                          <Button onClick={() => modalClose('productTypeModal')}>Cancel</Button>\n//                          <Button onClick={() => addProductType()}>Add Product Type</Button>\n//                     </DialogActions>\n//                </Dialog>\n//           </>\n//      )\n// }\n// export default AddProduct;\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [formFields, setFormFields] = useState([{\n    name: '',\n    age: ''\n  }]);\n\n  const handleFormChange = (event, index) => {\n    let data = [...formFields];\n    data[index][event.target.name] = event.target.value;\n    setFormFields(data);\n  };\n\n  const submit = e => {\n    e.preventDefault();\n    console.log(formFields);\n  };\n\n  const addFields = () => {\n    let object = {\n      name: '',\n      age: ''\n    };\n    setFormFields([...formFields, object]);\n  };\n\n  const removeFields = index => {\n    let data = [...formFields];\n    data.splice(index, 1);\n    setFormFields(data);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submit,\n      children: formFields.map((form, index) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            name: \"name\",\n            placeholder: \"Name\",\n            onChange: event => handleFormChange(event, index),\n            value: form.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1084,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            name: \"age\",\n            placeholder: \"Age\",\n            onChange: event => handleFormChange(event, index),\n            value: form.age\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1090,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => removeFields(index),\n            children: \"Remove\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1096,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1083,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1080,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addFields,\n      children: \"Add More..\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1101,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1102,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: submit,\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1103,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 1079,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"seZGr9GcuJelEKcTTkRZnquEmt4=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["E:/React/pos-system/main/src/views/catalog/AddProduct.js"],"names":["useState","App","formFields","setFormFields","name","age","handleFormChange","event","index","data","target","value","submit","e","preventDefault","console","log","addFields","object","removeFields","splice","map","form"],"mappingsyB,OAAzB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BH,QAAQ,CAAC,CAC3C;AAAEI,IAAAA,IAAI,EAAE,EAAR;AAAYC,IAAAA,GAAG,EAAE;AAAjB,GAD2C,CAAD,CAA5C;;AAIA,QAAMC,gBAAgB,GAAG,CAACC,KAAD,EAAQC,KAAR,KAAkB;AACzC,QAAIC,IAAI,GAAG,CAAC,GAAGP,UAAJ,CAAX;AACAO,IAAAA,IAAI,CAACD,KAAD,CAAJ,CAAYD,KAAK,CAACG,MAAN,CAAaN,IAAzB,IAAiCG,KAAK,CAACG,MAAN,CAAaC,KAA9C;AACAR,IAAAA,aAAa,CAACM,IAAD,CAAb;AACD,GAJD;;AAMA,QAAMG,MAAM,GAAIC,CAAD,IAAO;AACpBA,IAAAA,CAAC,CAACC,cAAF;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYd,UAAZ;AACD,GAHD;;AAKA,QAAMe,SAAS,GAAG,MAAM;AACtB,QAAIC,MAAM,GAAG;AACXd,MAAAA,IAAI,EAAE,EADK;AAEXC,MAAAA,GAAG,EAAE;AAFM,KAAb;AAKAF,IAAAA,aAAa,CAAC,CAAC,GAAGD,UAAJ,EAAgBgB,MAAhB,CAAD,CAAb;AACD,GAPD;;AASA,QAAMC,YAAY,GAAIX,KAAD,IAAW;AAC9B,QAAIC,IAAI,GAAG,CAAC,GAAGP,UAAJ,CAAX;AACAO,IAAAA,IAAI,CAACW,MAAL,CAAYZ,KAAZ,EAAmB,CAAnB;AACAL,IAAAA,aAAa,CAACM,IAAD,CAAb;AACD,GAJD;;AAMA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE;AAAM,MAAA,QAAQ,EAAEG,MAAhB;AAAA,gBACGV,UAAU,CAACmB,GAAX,CAAe,CAACC,IAAD,EAAOd,KAAP,KAAiB;AAC/B,4BACE;AAAA,kCACE;AACE,YAAA,IAAI,EAAC,MADP;AAEE,YAAA,WAAW,EAAC,MAFd;AAGE,YAAA,QAAQ,EAAED,KAAK,IAAID,gBAAgB,CAACC,KAAD,EAAQC,KAAR,CAHrC;AAIE,YAAA,KAAK,EAAEc,IAAI,CAAClB;AAJd;AAAA;AAAA;AAAA;AAAA,kBADF,eAOE;AACE,YAAA,IAAI,EAAC,KADP;AAEE,YAAA,WAAW,EAAC,KAFd;AAGE,YAAA,QAAQ,EAAEG,KAAK,IAAID,gBAAgB,CAACC,KAAD,EAAQC,KAAR,CAHrC;AAIE,YAAA,KAAK,EAAEc,IAAI,CAACjB;AAJd;AAAA;AAAA;AAAA;AAAA,kBAPF,eAaE;AAAQ,YAAA,OAAO,EAAE,MAAMc,YAAY,CAACX,KAAD,CAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAbF;AAAA,WAAUA,KAAV;AAAA;AAAA;AAAA;AAAA,gBADF;AAiBD,OAlBA;AADH;AAAA;AAAA;AAAA;AAAA,YADF,eAsBE;AAAQ,MAAA,OAAO,EAAES,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAtBF,eAuBE;AAAA;AAAA;AAAA;AAAA,YAvBF,eAwBE;AAAQ,MAAA,OAAO,EAAEL,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAxBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA4BD;;GA3DQX,G;;KAAAA,G;AA6DT,eAAeA,GAAf","sourcesContent":["// import React, { useState, useEffect } from 'react'\r\n// import axios from 'axios';\r\n// import { Link } from \"react-router-dom\";\r\n// import { Button } from \"reactstrap\";\r\n// import { FiArrowLeft, FiArrowRight } from \"react-icons/fi\";\r\n// import CreatableSelect from 'react-select/creatable';\r\n// import Select from 'react-select'\r\n// import Dialog from '@mui/material/Dialog';\r\n// import DialogActions from '@mui/material/DialogActions';\r\n// import DialogContent from '@mui/material/DialogContent';\r\n// import DialogTitle from '@mui/material/DialogTitle';\r\n// import SunEditor from 'suneditor-react';\r\n// import Checkbox from '@mui/material/Checkbox';\r\n// import FormControlLabel from '@mui/material/FormControlLabel';\r\n// import Dropzone from 'react-dropzone-uploader'\r\n// import Radio from '@mui/material/Radio';\r\n// import RadioGroup from '@mui/material/RadioGroup';\r\n// import { AiOutlinePlus, AiOutlinePercentage } from \"react-icons/ai\";\r\n// import { IoTrashOutline } from \"react-icons/io5\";\r\n// import { TbCurrencyDollar } from \"react-icons/tb\";\r\n// import { BsSearch } from \"react-icons/bs\";\r\n// import { ToastProvider, useToasts } from 'react-toast-notifications';\r\n// import 'react-dropzone-uploader/dist/styles.css'\r\n// import \"../online/online.css\"\r\n// import 'suneditor/dist/css/suneditor.min.css';\r\n\r\n// const brand = []\r\n// const productType = []\r\n// const tags = []\r\n// const Supplier = []\r\n// var imageUrl = []\r\n// const SKUCodeTypeOriginal = [\r\n//      { value: 'autoGenerated', label: 'Auto-Generated'},\r\n//      { value: 'custom', label: 'Custom'},\r\n//      { value: 'ean', label: 'EAN'},\r\n//      { value: 'isbn', label: 'ISBN'},\r\n//      { value: 'itf', label: 'ITF'},\r\n//      { value: 'jan', label: 'JAN'},\r\n//      { value: 'upc', label: 'UPC', isDisabled: true}\r\n// ]\r\n// const TaxArray = [\r\n//      { value: 'default', label: 'Default Tax for this outlet'},\r\n//      { value: 'noTax', label: 'No Tax(0%)'},\r\n// ]\r\n\r\n// const AddProduct = () => {\r\n//      const { addToast } = useToasts();\r\n//      const [brandModalOpen, setBrandModalOpen] = useState(false);\r\n//      const [typeModalOpen, setTypeModalOpen] = useState(false);\r\n//      const [supplierModalOpen, setSupplierModalOpen] = useState(false);\r\n//      const [generateSKU, setGenerateSKU] = useState('');\r\n\r\n//      const [productName, setProudctName] = useState('');\r\n//      const [newBrandName, setNewBrandName] = useState('');\r\n//      const [newSupplierName, setNewSupplierName] = useState('');\r\n//      const [newBrandDescription, setNewBrandDescription] = useState('');\r\n//      const [newSupplierDescription, setNewSupplierDescription] = useState('');\r\n//      const [newProductTypeName, setNewProductTypeName] = useState('');\r\n\r\n//      const [addCreateSelectBrand, setAddCreateSelectBrand] = useState({});\r\n//      const [addCreateSelectSupplier, setAddCreateSelectSupplier] = useState({});\r\n//      const [addCreateSelectProductType, setAddCreateSelectProductType] = useState({});\r\n\r\n//      const [uploadedImageURL, setUploadedImageURL] = useState([]);\r\n\r\n//      const [productCardActive, setProductCardActive] = useState(1);\r\n//      const [selectSKUCode, setSelectSKUCode] = useState(1);\r\n//      const [isShowNoData, setShowNoData] = useState(true);\r\n//      const [isShowNoData_1, setShowNoData_1] = useState(true);\r\n//      var   [increaseAddCode, setIncreaseAddCode] = useState(0);\r\n//      var   [increaseSupplier, setIncreaseSupplier] = useState(0);\r\n//      var   [increaseAttribute, setIncreaseAttribute] = useState(0);\r\n//      var   [increaseRelationShip, setIncreaseRelationShip] = useState(0);\r\n//      const [newSKUType, setNewSKUType] = useState([\r\n//           {\r\n//                type: '',\r\n//                code: ''\r\n//           }\r\n//      ]);\r\n//      const [newAttribute, setNewAttribute] = useState([]);\r\n//      const [newSupplier, setNewSupplier] = useState([]);\r\n//      const [newRelationShip, setNewRelationShip] = useState([]);\r\n//      const [newRelationShip_1, setNewRelationShip_1] = useState([]);\r\n//      const [scrollPosition, setScrollPosition] = useState(0);\r\n//      var AppendBody = [];\r\n//      var AppendSupplierBody = [];\r\n//      var AppendAttributeBody = [];\r\n//      var AppendRelationShip = [];\r\n//      var AppendRelationShip_1 = [];\r\n\r\n//      const modalClose = (index) => {\r\n//           switch(index) {\r\n//                case 'supplierModal':\r\n//                     setSupplierModalOpen(false)\r\n//                     break;\r\n//                case 'brandModal':\r\n//                     setBrandModalOpen(false)\r\n//                     break;\r\n//                case 'productTypeModal':\r\n//                     setTypeModalOpen(false)\r\n//                     break;\r\n//           }\r\n//      }\r\n\r\n//      const changeCreatableSelect = (index, e) => {\r\n//           console.log(index, e)\r\n//           switch(index) {\r\n//                case 'chooseBrand':\r\n//                     if(e && e.__isNew__) {\r\n//                          setAddCreateSelectBrand({ value: e.value, label: e.label })\r\n//                          setNewBrandName(e.value)\r\n//                          setBrandModalOpen(true)\r\n//                     } else if(e) {\r\n//                          setAddCreateSelectBrand({ value: e.value, label: e.label })\r\n//                     } else {\r\n//                          setAddCreateSelectBrand('')\r\n//                     }\r\n//                     break;\r\n//                case 'chooseSupplier':\r\n//                     if(e && e.__isNew__) {\r\n//                          setAddCreateSelectSupplier({ value: e.value, label: e.label })\r\n//                          setNewSupplierName(e.value)\r\n//                          setSupplierModalOpen(true)\r\n//                     } else if(e) {\r\n//                          setAddCreateSelectSupplier({ value: e.value, label: e.label })\r\n//                     } else {\r\n//                          setAddCreateSelectSupplier('')\r\n//                     }\r\n//                     break;\r\n//           }\r\n//      }\r\n\r\n//      const prodcutTypeChange = (e) => {\r\n//           if(e && e.__isNew__) {\r\n//                setAddCreateSelectProductType({ value: e.label, label: e.value })\r\n//                setNewProductTypeName(e.value)\r\n//                setTypeModalOpen(true)\r\n//           }\r\n//      }\r\n     \r\n//      const addBrand = () => {\r\n//           var data = { name: newBrandName, description: newBrandDescription }\r\n//           axios.post(\"brand/addBrand\", data)\r\n//                .then(res => {\r\n//                     if(res.status === 200) {\r\n//                          addToast(res.data.msg, { appearance: 'success' });\r\n//                          brand.push(addCreateSelectBrand)\r\n//                          setBrandModalOpen(false)\r\n//                          return\r\n//                     }\r\n//                     addToast(res.data.msg, { appearance: 'error' });\r\n//                })\r\n//      }\r\n\r\n//      const addProductType = () => {\r\n//           var data = { type: newProductTypeName }\r\n//           axios.post(\"productType/addProductType\", data)\r\n//                .then(res => {\r\n//                     if(res.status === 200) {\r\n//                          addToast(res.data.msg, { appearance: 'success' });\r\n//                          productType.push(addCreateSelectProductType)\r\n//                          setTypeModalOpen(false)\r\n//                          return\r\n//                     }\r\n//                     addToast(res.data.msg, { appearance: 'error' });\r\n//                })\r\n//      }\r\n\r\n//      const addSupplier = () => {\r\n//           var data = { name: newSupplierName, description: newSupplierDescription }\r\n//           axios.post(\"product/addSupplier\", data)\r\n//                .then(res => {\r\n//                     if(res.status === 200) {\r\n//                          addToast(res.data.msg, { appearance: 'success' });\r\n//                          Supplier.push(addCreateSelectSupplier)\r\n//                          setSupplierModalOpen(false)\r\n//                          return\r\n//                     }\r\n//                     addToast(res.data.msg, { appearance: 'error' });\r\n//                })\r\n//      }\r\n\r\n//      const handleSubmit = (files, allFiles) => {\r\n\r\n//           console.log(uploadedImageURL)\r\n//      }\r\n\r\n//      const getUploadParams = ({ meta }) => { \r\n//           return { url: 'product/imageUpload' } \r\n//      }\r\n\r\n//      const handleChangeStatus = ({ meta, file, xhr }, status) => { \r\n//           if(status == \"done\" && xhr.status == 200) { \r\n//                var data = JSON.parse(xhr.response)\r\n//                imageUrl.push(data.images)\r\n//                setUploadedImageURL(imageUrl)\r\n//                console.log(data.images)\r\n//                addToast(data.msg, { appearance: 'success' });\r\n//           }\r\n\r\n//           if(status == 'removed') {\r\n//                var formData = new FormData();\r\n//                formData.append('file', file);\r\n//                axios.post('product/imageRemove', formData)\r\n//                     .then(res => {\r\n//                          if(res.status === 200) {\r\n//                               addToast(res.data.msg, { appearance: 'success' });\r\n//                               return\r\n//                          }\r\n//                          addToast(res.data.msg, { appearance: 'error' });\r\n//                     })\r\n//           }\r\n          \r\n//           // console.log(status, meta, file)\r\n//      }\r\n\r\n//      const chooseProduct = (selected) => {\r\n//           setProductCardActive(selected)\r\n//           if(selected === 1) {\r\n//                axios.post(\"/product/generateSKU\")\r\n//                     .then(res => {\r\n//                          setGenerateSKU(res.data.code)\r\n//                     })\r\n//           }\r\n          \r\n//      }\r\n\r\n//      const removeSKUCode = (index) => {\r\n//           const rows = [...newSKUType];\r\n//           rows.splice(index, 1);\r\n//           setNewSKUType(rows);\r\n//      }\r\n\r\n//      const addSKUCode = () => {\r\n//           setNewSKUType([...newSKUType, {\r\n//                type: '',\r\n//                code: ''\r\n//           }])\r\n//      }\r\n\r\n//      const changeNewSKUCode = (index, evnt) => {\r\n//           const { name, value } = evnt.target;\r\n//           const list = [...newSKUType];\r\n//           console.log(name, value)\r\n//           list[index][name] = value;\r\n//           setNewSKUType(list);\r\n//      }\r\n\r\n//      const appendNewAttribute = (index) => {\r\n//           AppendAttributeBody = []\r\n//           for (var i = 0; i < index; i += 1) {\r\n//                AppendAttributeBody.push(<div className='row' key={i}> \r\n//                                              <div className='col-md-4'>\r\n//                                                   <CreatableSelect\r\n//                                                        isMulti\r\n//                                                        onChange={(e) => changeCreatableSelect('chooseAttribute', e)}\r\n//                                                        options={Supplier}\r\n//                                                        // value={addCreateSelectSupplier}\r\n//                                                        placeholder=\"Choose a variant attribute\" />\r\n//                                              </div>\r\n//                                              <div className='col-md-7'>\r\n//                                                   <CreatableSelect\r\n//                                                        isMulti\r\n//                                                        onChange={(e) => tagsChange(e)}\r\n//                                                        // options={tags}\r\n//                                                        placeholder=\"Enter a value\" /> \r\n//                                              </div>\r\n//                                              <div className='col-md-1 remove'>\r\n//                                                   <span onClick={() => removeAttribute()}><IoTrashOutline /></span>\r\n//                                              </div>\r\n//                                         </div>);\r\n//           }\r\n//           setNewAttribute(AppendAttributeBody)\r\n//      }\r\n\r\n//      const addNewAttribute = () => {\r\n//           setIncreaseAttribute(++increaseAttribute)\r\n//           appendNewAttribute(increaseAttribute)\r\n//      }\r\n\r\n//      const removeAttribute = () => {\r\n//           setIncreaseAttribute(--increaseAttribute)\r\n//           appendNewAttribute(increaseAttribute)\r\n//      }\r\n//      /* Append New Supplier when create select */\r\n//      const appendNewSupplier = (index) => {\r\n//           AppendSupplierBody = []\r\n//           for (var i = 0; i < index; i += 1) {\r\n//                AppendSupplierBody.push(<div className='row' key={i}>\r\n//                                              <div className='col-md-4'>\r\n//                                                   <CreatableSelect\r\n//                                                        isClearable\r\n//                                                        onChange={(e) => changeCreatableSelect('chooseSupplier', e)}\r\n//                                                        options={Supplier}\r\n//                                                        // value={addCreateSelectSupplier}\r\n//                                                        placeholder=\"Choose a supplier\" />\r\n//                                              </div>\r\n//                                              <div className='col-md-4'>\r\n//                                                   <input className='vend-settings-input fullWidth max-height-input' placeholder='Enter supplier code' />\r\n//                                              </div>\r\n//                                              <div className='col-md-3'>  \r\n//                                                   <div className='withIconInput'>\r\n//                                                        <TbCurrencyDollar />\r\n//                                                        <input className='vend-settings-input fullWidth max-height-input' placeholder='0.00' />\r\n//                                                   </div>\r\n//                                              </div>\r\n//                                              <div className='col-md-1 remove'>\r\n//                                                   <span onClick={() => removeNewSupplier()}><IoTrashOutline /></span>\r\n//                                              </div>\r\n//                                         </div>)\r\n//           }\r\n//           setNewSupplier(AppendSupplierBody)\r\n//      }\r\n\r\n//      const addNewSupplier = () => {\r\n//           setIncreaseSupplier(++increaseSupplier)\r\n//           appendNewSupplier(increaseSupplier)\r\n//      }\r\n\r\n//      const removeNewSupplier = () => {\r\n//           setIncreaseSupplier(--increaseSupplier)\r\n//           appendNewSupplier(increaseSupplier)\r\n//      }\r\n//      /* End--- Append New Supplier when create select */\r\n\r\n\r\n//      const changeSelectSKUCode = (index) => {\r\n//           setSelectSKUCode(index)\r\n//      }\r\n\r\n//      const addProductRelationShip = () => {\r\n//           setShowNoData(false)\r\n//           setIncreaseRelationShip(++increaseRelationShip)\r\n//           appendRelationShip(increaseRelationShip)\r\n//      }\r\n\r\n//      const removeProductRelationShip = () => {\r\n//           setIncreaseRelationShip(--increaseRelationShip)\r\n//           appendRelationShip(increaseRelationShip)\r\n//           if(increaseRelationShip == 0) {\r\n//                setShowNoData(true)\r\n//           }\r\n//      }\r\n\r\n//      const appendRelationShip = (index) => {\r\n//           AppendRelationShip = []\r\n//           for (var i = 0; i < index; i += 1) {\r\n//                AppendRelationShip.push(<>\r\n//                                         <div className='flex' key={i}>\r\n//                                              <div className='col-md-6'>\r\n//                                                   <div className='flex'>\r\n//                                                        <div className='relative fullWidth'>\r\n//                                                             <BsSearch className='search-icon' />\r\n//                                                             <input className='vend-settings-input fullWidth search-style' placeholder='Search or scan to add a product' />\r\n//                                                        </div>\r\n//                                                        <div>\r\n//                                                             <FiArrowRight className='ComeFromRightIcon' />\r\n//                                                        </div>\r\n//                                                   </div>                                   \r\n//                                              </div>\r\n//                                              <div className='col-md-6'>\r\n//                                                   <div className='between'>\r\n//                                                        <div className='flex'>\r\n//                                                             <div className='third-body'>\r\n//                                                                  <input className='vend-settings-input fullWidth max-height-input' placeholder='Qty' />\r\n//                                                             </div>\r\n//                                                             <div className='relationShip'>\r\n//                                                                  <span className='margin-zero'>Product Name</span>\r\n//                                                                  <span className='description margin-zero'>10035</span>\r\n//                                                             </div>\r\n//                                                        </div>\r\n//                                                        <div>\r\n//                                                             <div className='remove'>\r\n//                                                                  <span onClick={() => removeProductRelationShip()}><IoTrashOutline /></span>\r\n//                                                             </div>\r\n//                                                        </div>\r\n//                                                   </div>\r\n//                                              </div>\r\n//                                         </div>\r\n//                                         <div className='divider'></div>\r\n\r\n//                </>);\r\n//           }\r\n//           setNewRelationShip(AppendRelationShip)\r\n//      }\r\n\r\n//      const addProductRelationShip_1 = () => {\r\n//           setShowNoData_1(false)\r\n//           AppendRelationShip_1 = []\r\n//           // for (var i = 0; i < index; i += 1) {\r\n//                AppendRelationShip_1.push(<>\r\n//                                         <div className='flex' key={AppendRelationShip_1.length}>\r\n//                                              <div className='col-md-6'>\r\n//                                                   <div className='between fullWidth'>\r\n//                                                        <div className='relationShip'>\r\n//                                                             <span className='margin-zero'>Product Name</span>\r\n//                                                             <span className='description margin-zero'>10035</span>\r\n//                                                        </div>\r\n//                                                        <div>\r\n//                                                             <FiArrowRight className='ComeFromRightIcon' />\r\n//                                                        </div>\r\n//                                                   </div>                                   \r\n//                                              </div>\r\n//                                              <div className='col-md-6'>\r\n//                                                   <div className='between'>\r\n//                                                        <div className='third-body'>\r\n//                                                             <input className='vend-settings-input fullWidth max-height-input' placeholder='Qty' />\r\n//                                                        </div>\r\n//                                                        <div className='relative fullWidth'>\r\n//                                                             <BsSearch className='search-icon' />\r\n//                                                             <input className='vend-settings-input fullWidth search-style' placeholder='Search or scan to add a product' />\r\n//                                                        </div>\r\n//                                                        <div>\r\n//                                                             <div className='remove'>\r\n//                                                                  <span onClick={() => removeProductRelationShip_1()}><IoTrashOutline /></span>\r\n//                                                             </div>\r\n//                                                        </div>\r\n//                                                   </div>\r\n//                                              </div>\r\n//                                         </div>\r\n//                                         <div className='divider'></div>\r\n\r\n//                </>);\r\n//           // }\r\n//           setNewRelationShip_1(AppendRelationShip_1)\r\n\r\n//      }\r\n\r\n//      const removeProductRelationShip_1 = () => {\r\n//           setShowNoData_1(true)\r\n//           AppendRelationShip_1 = []\r\n//           setNewRelationShip_1(AppendRelationShip_1)\r\n//      }\r\n\r\n//      const changeInput = (index, val) => {\r\n//           switch(index) {\r\n//                case 'productName':\r\n//                     setProudctName(val)\r\n//                     break;\r\n//                case 'sku_code':\r\n//                     setGenerateSKU(val)\r\n//                     break;\r\n//                case 'addBrandName':\r\n//                     setAddCreateSelectBrand({value: addCreateSelectBrand.value, label: val})\r\n//                     setNewBrandName(val)\r\n//                case 'addBrandDescription':\r\n//                     setNewBrandDescription(val)\r\n//                     break;\r\n//                case 'addSupplierName':\r\n//                     setAddCreateSelectSupplier({value: addCreateSelectBrand.value, label: val})\r\n//                     setNewSupplierName(val)\r\n//                case 'addSupplierDescription':\r\n//                     setNewSupplierDescription(val)\r\n//                     break;\r\n//                case 'addProductTypeName':\r\n//                     setAddCreateSelectProductType({value: addCreateSelectProductType.value, label: val})\r\n//                     setNewProductTypeName(val)\r\n//                     break;\r\n//           }\r\n//      }\r\n\r\n//      useEffect(() => {\r\n//           window.addEventListener(\"scroll\", handleScroll);\r\n//           axios.post(\"/brand\")\r\n//                .then(res => {\r\n//                     res.data.data.map((item, index) => {\r\n//                          var obj = {}\r\n//                          obj.value = item.id\r\n//                          obj.label = item.name\r\n//                          brand.push(obj)\r\n//                     })\r\n//                })\r\n//           axios.post(\"/productType\")\r\n//                .then(res => {\r\n//                     res.data.data.map((item, index) => {\r\n//                          var obj = {}\r\n//                          obj.value = item.id\r\n//                          obj.label = item.type\r\n//                          productType.push(obj)\r\n//                     })\r\n//                })\r\n//           axios.post(\"/product/generateSKU\")\r\n//                .then(res => {\r\n//                     setGenerateSKU(res.data.code)\r\n//                })\r\n//           axios.post(\"product/getSupplier\")\r\n//                .then(res => {\r\n//                     res.data.data.map((item, index) => {\r\n//                          var obj = {}\r\n//                          obj.value = item.id\r\n//                          obj.label = item.name\r\n//                          Supplier.push(obj)\r\n//                     })\r\n//                })\r\n//      }, []);\r\n\r\n//      const handleScroll = () => {\r\n//           const position = window.pageYOffset;\r\n//           setScrollPosition(position)\r\n//      };\r\n\r\n//      const tagsChange = (e) => {\r\n//           tags.push({value: e.value, label: e.label})\r\n//      }\r\n     \r\n//      return(\r\n//           <>\r\n//                <div className='online-header'>\r\n//                     <h2>\r\n//                          <Link to='/catalog/products'><FiArrowLeft className='navigate-before-icon' /></Link> \r\n//                          New Product\r\n//                     </h2>\r\n//                </div>\r\n//                <div className={scrollPosition >= 100 ? 'online-title between fixed-header':'online-title between'}>\r\n//                     <div>\r\n//                          <p>Add, view and edit your products in one place. <Link to='' className=''>Need help?</Link></p>\r\n//                     </div>\r\n//                     <div className='products-header'>\r\n//                          <Button className='vd-btn--supplementary'>Cancel</Button>\r\n//                          <Button >Save</Button>\r\n//                     </div>\r\n//                </div>\r\n\r\n//                <div className='componentPadding flex'>\r\n//                     <div className='col-md-3'>\r\n//                          <h4>General</h4>\r\n//                          <p>Change general information for this product.</p>\r\n//                     </div>\r\n//                     <div className='col-md-9 marginTop'>\r\n//                          <div className='flex input-header-margin'>\r\n//                               <div className='half-body'>\r\n//                                    <p>Name</p>\r\n//                                    <input className='vend-settings-input fullWidth max-height-input' value={productName} onChange={(e) => changeInput('productName', e.target.value)}/>\r\n//                               </div>\r\n//                               <div className='margin'></div>\r\n//                               <div className='half-body'>\r\n//                                    <p>Brand</p>\r\n//                                    <CreatableSelect\r\n//                                         isClearable\r\n//                                         onChange={(e) => changeCreatableSelect('chooseBrand', e)}\r\n//                                         options={brand}\r\n//                                         value={addCreateSelectBrand}\r\n//                                         placeholder=\"Choose a brand\" />\r\n//                               </div>\r\n//                          </div>\r\n\r\n//                          <div className=\"marginTop\"></div>\r\n\r\n//                          <div className='input-header-margin'>\r\n//                               <p>Description</p>\r\n//                               <SunEditor />\r\n//                          </div>\r\n\r\n//                          <div className=\"marginTop\"></div>\r\n\r\n//                          <div className='input-header-margin'>\r\n//                               <p><strong>Tags</strong> Describe the product using relevant keywords for easy filtering.</p>\r\n//                               <CreatableSelect\r\n//                                    isMulti\r\n//                                    onChange={(e) => tagsChange(e)}\r\n//                                    options={tags}\r\n//                                    placeholder=\"Enter a tag name\" /> \r\n//                          </div>\r\n\r\n//                          <div className=\"marginTop\"></div>\r\n\r\n//                          <div className='input-header-margin'>\r\n//                               <p><strong>Product Type</strong> Categorize your products with types that can be used to filter sales and inventory reports.</p>\r\n//                               <CreatableSelect\r\n//                                    isClearable\r\n//                                    onChange={(e) => prodcutTypeChange(e)}\r\n//                                    options={productType}\r\n//                                    value={addCreateSelectProductType}\r\n//                                    placeholder=\"Enter a tag name\" /> \r\n//                          </div>\r\n\r\n//                          <div className='imageSize'>\r\n//                               <FormControlLabel\r\n//                                    value=\"end\"\r\n//                                    control={<Checkbox />}\r\n//                                    label=\"Sell on Point-of-Sale\"\r\n//                                    labelPlacement=\"end\"/>\r\n//                               <p className='description'>Make this product active and available for sale in-store</p>\r\n//                          </div>\r\n\r\n//                          <div className='marginTop'></div>\r\n\r\n//                          <div>\r\n//                               <Dropzone\r\n//                                    getUploadParams={getUploadParams}\r\n//                                    onChangeStatus={handleChangeStatus}\r\n//                                    onSubmit={handleSubmit}\r\n//                                    inputContent={(files, extra) => (extra.reject ? 'Only Image files allowed!' : 'Select and Drop Files')}\r\n//                                    styles={{\r\n//                                         dropzoneReject: { borderColor: '#F19373', backgroundColor: '#F1BDAB' },\r\n//                                         inputLabel: (files, extra) => (extra.reject ? { color: '#A02800' } : {}),\r\n//                                    }}\r\n//                                    accept=\"image/*\"\r\n//                               />\r\n//                          </div>\r\n//                     </div>\r\n//                </div>\r\n\r\n//                <div className='divider'></div>\r\n\r\n//                <div className='componentPadding flex'>\r\n\r\n//                     <div className='col-md-3'>\r\n//                          <h4>Inventory</h4>\r\n//                          <p>The type of product we choose determines how we manage inventory and reporting.</p>\r\n//                     </div>\r\n//                     <div className='col-md-9'>\r\n//                          <div className='flex text-align-center'>\r\n//                               <div className={productCardActive == 1 ? 'col-md-4 choose-product-cards choose-product choose-product-card-active' : 'col-md-4 choose-product-cards choose-product'} onClick={() => chooseProduct(1)}>\r\n//                                    <h4>Standard Product</h4>\r\n//                                    <p>This product is a single SKU with its own inventory.</p>\r\n//                               </div>    \r\n//                               <div className={productCardActive == 2 ? 'col-md-4 choose-product-cards choose-product choose-product-card-active' : 'col-md-4 choose-product-cards choose-product'} onClick={() => chooseProduct(2)}>\r\n//                                    <h4>Variant Product</h4>\r\n//                                    <p>This is a group of similar products which have different attributes, like size or color. Each variant is a unique SKU with its own inventory.</p>\r\n//                               </div>\r\n//                               <div className={productCardActive == 3 ? 'col-md-4 choose-product-cards choose-product choose-product-card-active' : 'col-md-4 choose-product-cards choose-product'} onClick={() => chooseProduct(3)}>\r\n//                                    <h4>Composite Product</h4>\r\n//                                    <p>This product is made up of specified quantities of one or more products. A composite is a single SKU but uses the inventory of the products within it.</p>\r\n//                               </div>\r\n//                          </div>\r\n\r\n//                          {productCardActive == 1 ?\r\n//                               <div>\r\n//                                    <h5>SKU CODES</h5>\r\n//                                    <div className='flex input-header-margin'>\r\n//                                         <div className='half-body'>\r\n//                                              <div className='row'>\r\n//                                                   <div className='col-md-5'>\r\n//                                                        <p>SKU Code Type</p>\r\n//                                                        <Select \r\n//                                                             defaultValue = {SKUCodeTypeOriginal.filter(option => option.value === 'autoGenerated')}\r\n//                                                             options={SKUCodeTypeOriginal} />\r\n//                                                   </div>\r\n//                                                   <div className='col-md-7'>\r\n//                                                        <p>SKU Code</p>\r\n//                                                        <input className='vend-settings-input fullWidth max-height-input' value={generateSKU} onChange={(e) => changeInput('sku_code', e.target.value)} />\r\n//                                                   </div>\r\n//                                              </div>\r\n\r\n//                                              {newSKUType.map((item, index) => {\r\n//                                                   return (\r\n//                                                        <div className='row' key={index}>\r\n//                                                             <div className='col-md-5'>\r\n//                                                                  <p>SKU Code Type</p>\r\n//                                                                  <Select options={SKUCodeTypeOriginal.filter(option => option.value !== 'autoGenerated')} name='type' />\r\n//                                                             </div>\r\n//                                                             <div className='col-md-5'>\r\n//                                                                  <p>SKU Code</p>\r\n//                                                                  <input className='vend-settings-input fullWidth max-height-input' name='code[]' onChange={(evnt) => changeNewSKUCode(index, evnt)} value={item.code} />\r\n//                                                             </div>\r\n//                                                             <div className='col-md-2 remove'>\r\n//                                                                  <span onClick={() => removeSKUCode()}><IoTrashOutline /></span>\r\n//                                                             </div>\r\n//                                                        </div>\r\n//                                                   )\r\n//                                              })}\r\n\r\n//                                              <Button onClick={() => addSKUCode()}><AiOutlinePlus />Add Another Code</Button>\r\n//                                         </div>\r\n\r\n//                                         <div className='margin'></div>\r\n\r\n//                                         <div className='half-body'>\r\n//                                              <p>Preview</p>\r\n//                                              <div className='SKU-preview'>\r\n//                                                   <div className='flex'>\r\n//                                                        <div className=\"vd-id-badge__image\" ></div>\r\n//                                                        <div>\r\n//                                                             <p>{productName ? productName : 'Product Name'}</p>\r\n//                                                             <p className='description'>{generateSKU ? generateSKU : 'generated SKU code'}</p>\r\n//                                                        </div>\r\n//                                                   </div>    \r\n//                                                   <div className='divider'></div>\r\n//                                                   <p className='description'>The first SKU code will be shown to staff and customers to help identify this product. When you have multiple codes all the barcodes will be scannable.</p>\r\n//                                              </div>\r\n//                                         </div>\r\n//                                    </div>\r\n\r\n//                                    <div className='divider'></div>\r\n\r\n//                               </div> : ''\r\n//                          }  \r\n\r\n//                          {productCardActive == 1 || productCardActive == 2 ? \r\n//                               <>\r\n//                                    <h5>SUPPLIER INFORMATION</h5>\r\n//                                    <div className='row input-header-margin'>\r\n//                                         <div className='col-md-4'><p>Supplier</p></div>\r\n//                                         <div className='col-md-4'><p>Supplier Code</p></div>\r\n//                                         <div className='col-md-4'><p>Supplier Price</p></div>\r\n//                                    </div>\r\n//                                    <div className='divider'></div>\r\n//                                         <div className='row'>\r\n//                                              <div className='col-md-4'>\r\n//                                                   <CreatableSelect\r\n//                                                        isClearable\r\n//                                                        onChange={(e) => changeCreatableSelect('chooseSupplier', e)}\r\n//                                                        options={Supplier}\r\n//                                                        // value={addCreateSelectSupplier}\r\n//                                                        placeholder=\"Choose a supplier\" />\r\n//                                              </div>\r\n//                                              <div className='col-md-4'>\r\n//                                                   <input className='vend-settings-input fullWidth max-height-input' placeholder='Enter supplier code' />\r\n//                                              </div>\r\n//                                              <div className='col-md-4'>\r\n//                                                   <div className='withIconInput'>\r\n//                                                        <TbCurrencyDollar />\r\n//                                                        <input className='vend-settings-input fullWidth max-height-input' placeholder='Enter the amount' />\r\n//                                                   </div>\r\n//                                              </div>\r\n//                                         </div>\r\n\r\n//                                    {newSupplier}\r\n\r\n//                                    <Button onClick={() => addNewSupplier()}><AiOutlinePlus />Add Another Supplier</Button>\r\n                                   \r\n//                                    <div className='divider'></div>\r\n\r\n//                                    <h5>INVENTORY LEVELS</h5>\r\n//                                    <div className='imageSize'>\r\n//                                         <FormControlLabel\r\n//                                              value=\"end\"\r\n//                                              control={<Checkbox />}\r\n//                                              label=\"Track Inventory for this product\"\r\n//                                              labelPlacement=\"end\"/>\r\n//                                         <p className='description'>Manage orders, transfers and returns accurately, and get reports and insights on this product’s performance.</p>\r\n//                                    </div>\r\n//                               </> : ''\r\n//                          }      \r\n\r\n//                          {productCardActive == 3 ?\r\n//                               <>\r\n//                                    <RadioGroup\r\n//                                         aria-labelledby=\"demo-radio-buttons-group-label\"\r\n//                                         defaultValue=\"auto\"\r\n//                                         name=\"radio-buttons-group\">\r\n//                                         <div className='imageSize'>\r\n//                                              <FormControlLabel value=\"auto\" control={<Radio onChange={() => changeSelectSKUCode(1)} />} label=\"Automatically Generate a SKU\" />\r\n//                                              {selectSKUCode == 1 ? \r\n//                                                   <p className='description'>A SKU will automatically be generated once this product has been saved</p>\r\n//                                                   : ''\r\n//                                              }\r\n//                                         </div>\r\n//                                         <div>\r\n//                                              <FormControlLabel value=\"custom\" control={<Radio onChange={() => changeSelectSKUCode(2)} />} label=\"Enter a custom SKU\" />\r\n//                                              {selectSKUCode == 2 ?\r\n//                                                   <div className='paddingLeft'>\r\n//                                                        <input className='vend-settings-input fullWidth max-height-input' />\r\n//                                                        <p className='description'>Only use lower case letters and numbers, no symbols or spaces</p>\r\n//                                                   </div> : ''\r\n//                                              }\r\n//                                         </div>\r\n//                                    </RadioGroup>\r\n//                               </> : ''\r\n//                          }       \r\n\r\n//                          {productCardActive == 1 ? \r\n//                               <>\r\n//                                    <div className='row input-header-margin'>\r\n//                                         <div className='col-md-3'><p>Outlet</p></div>\r\n//                                         <div className='col-md-3'><p>Current Inventory</p></div>\r\n//                                         <div className='col-md-3'><p>Re-order Point</p></div>\r\n//                                         <div className='col-md-3'><p>Re-order Quantity</p></div>\r\n//                                    </div>\r\n//                                    <div className='divider'></div>\r\n//                                    <div className='row'>\r\n//                                         <div className='col-md-3'>\r\n//                                              <p>Main Outlet</p>\r\n//                                         </div>\r\n//                                         <div className='col-md-3'>\r\n//                                              <input className='vend-settings-input fullWidth max-height-input' />\r\n//                                         </div>\r\n//                                         <div className='col-md-3'>\r\n//                                              <input className='vend-settings-input fullWidth max-height-input' />\r\n//                                         </div>\r\n//                                         <div className='col-md-3'>\r\n//                                              <input className='vend-settings-input fullWidth max-height-input' />\r\n//                                         </div>\r\n//                                    </div>\r\n//                               </> : ''\r\n//                          }          \r\n\r\n//                     </div>\r\n//                </div>\r\n\r\n//                {productCardActive == 1 ? \r\n//                     <>\r\n//                          <div className='divider'></div>\r\n\r\n//                          <div className='componentPadding flex'>\r\n//                               <div className='col-md-3'>\r\n//                                    <h4>Packaging</h4>\r\n//                                    <p>Set up packaging relationships by linking this product to other SKUs. This helps you easily manage the inventory levels across products that come in different packaging.</p>\r\n//                               </div>\r\n//                               <div className='col-md-9'>\r\n//                                    <h4>The products that this product comes from.</h4>\r\n//                                    <div className='divider'></div>\r\n//                                    {isShowNoData && \r\n//                                         <>\r\n//                                              <div className='no-table'>\r\n//                                                   <img src=\"//vendfrontendassets.freetls.fastly.net/images/products/packaging-comes-from.svg\" />\r\n//                                                   <p>If this product comes from other products, add the products here.</p>\r\n//                                              </div>\r\n//                                              <div className='divider'></div>\r\n//                                         </>\r\n//                                    }\r\n                                   \r\n//                                    {newRelationShip}\r\n//                                    <Button onClick={() => addProductRelationShip()}><AiOutlinePlus />Add a Product RelationShip</Button>\r\n\r\n//                                    <div className='margin'></div>\r\n\r\n//                                    <h4>The product that this product breaks into. </h4>\r\n//                                    <span>Products can only break into one other product.</span>\r\n//                                    <div className='divider'></div>\r\n\r\n//                                    {isShowNoData_1 && \r\n//                                         <>\r\n//                                              <div className='no-table'>\r\n//                                                   <img src=\"//vendfrontendassets.freetls.fastly.net/images/products/packaging-breaks-into.svg\" />\r\n//                                                   <p>If this product breaks into another product, add the product here.</p>\r\n//                                              </div>\r\n//                                              <div className='divider'></div>\r\n//                                         </>\r\n//                                    }\r\n                                   \r\n//                                    {newRelationShip_1}\r\n\r\n//                                    <Button onClick={() => addProductRelationShip_1()}><AiOutlinePlus />Add a Product RelationShip</Button>\r\n\r\n//                               </div>\r\n//                          </div>\r\n//                     </> : ''\r\n//                }\r\n\r\n//                {productCardActive == 3 ? \r\n//                     <>\r\n//                          <div className='divider'></div>\r\n//                          <div className='componentPadding flex'>\r\n//                               <div className='col-md-3'>\r\n//                                    <h4>Products</h4>\r\n//                                    <p>Add multiple products to create a composite product.</p>\r\n//                               </div>\r\n//                               <div className='col-md-9'>\r\n//                                    <p>Search for products to add</p>\r\n//                                    <Select options={TaxArray} placeholder='Search or Scan for products' />\r\n//                               </div>\r\n//                          </div>\r\n//                     </> : ''\r\n//                }\r\n\r\n//                <div className='divider'></div>\r\n\r\n//                <div className='componentPadding flex'>\r\n//                     <div className='col-md-3'>\r\n//                          <h4>Tax</h4>\r\n//                     </div>\r\n//                     <div className='col-md-9'>\r\n//                          <div className='row input-header-margin'>\r\n//                               <div className='col-md-3'><p>Outlet</p></div>\r\n//                               <div className='col-md-9'><p>Tax</p></div>\r\n//                          </div>\r\n//                          <div className='divider'></div>\r\n//                          <div className='row'>\r\n//                               <div className='col-md-3'><p>Main Outlet</p></div>\r\n//                               <div className='col-md-9'>\r\n//                                    <Select options={TaxArray} />\r\n//                               </div>\r\n//                          </div>\r\n//                     </div>\r\n//                </div>\r\n\r\n//                <div className='divider'></div>\r\n\r\n//                <div className='componentPadding flex'>\r\n//                     <div className='col-md-3'>\r\n//                          <h4>Price</h4>\r\n//                     </div>\r\n//                     {productCardActive == 1 ?\r\n//                          <div className='col-md-9'>\r\n//                               <div className='row input-header-margin'>\r\n//                                    <div className='col-md-3'><p>Price Point</p></div>\r\n//                                    <div className='col-md-2'><p>Outlet</p></div>\r\n//                                    <div className='col-md-1'><p>Supply Price</p></div>\r\n//                                    <div className='col-md-3'><p>Markup</p></div>\r\n//                                    <div className='col-md-3'><p>Retail Price</p><p className='description'>Excluding Tax</p></div>\r\n//                               </div>\r\n//                               <div className='divider'></div>\r\n//                               <div className='row'>\r\n//                                    <div className='col-md-3'><p>General Price Book (All Products)</p></div>\r\n//                                    <div className='col-md-2'><p>All Outlets\t</p></div>\r\n//                                    <div className='col-md-1'><p>$0.00</p></div>\r\n//                                    <div className='col-md-3'>\r\n//                                         <div className='withIconInput'>\r\n//                                              <AiOutlinePercentage />\r\n//                                              <input className='vend-settings-input fullWidth max-height-input' placeholder='Enter the amount' />\r\n//                                         </div>\r\n//                                    </div>\r\n//                                    <div className='col-md-3'>\r\n//                                         <div className='withIconInput'>\r\n//                                              <TbCurrencyDollar />\r\n//                                              <input className='vend-settings-input fullWidth max-height-input' placeholder='Enter the amount' />\r\n//                                         </div>\r\n//                                    </div>\r\n//                               </div>\r\n//                          </div> \r\n//                          : \r\n//                          <div className='col-md-9'>\r\n//                               <div className='row'>\r\n//                                    <div className='col-md-6 '>\r\n//                                         <p>Supply Price</p>\r\n//                                    </div>\r\n//                                    <div className='col-md-6 text-end'>\r\n//                                         <p>$0.00</p>\r\n//                                    </div>\r\n//                               </div>\r\n//                               <div className='row'>\r\n//                                    <div className='col-md-6'>\r\n//                                         <p>Markup</p>\r\n//                                    </div>\r\n//                                    <div className='col-md-6'>\r\n//                                         <input className='vend-settings-input fullWidth max-height-input' placeholder='0.00' />\r\n//                                    </div>\r\n//                               </div>\r\n//                               <div className='divider'></div>\r\n//                               <div className='row'>\r\n//                                    <div className='col-md-6'>\r\n//                                         <p>Retail Price <span>Excluding Tax</span></p>\r\n//                                    </div>\r\n//                                    <div className='col-md-6'>\r\n//                                         <div className='withIconInput'>\r\n//                                              <TbCurrencyDollar />\r\n//                                              <input className='vend-settings-input fullWidth max-height-input' placeholder='0.00' />\r\n//                                         </div>\r\n//                                    </div>\r\n//                               </div>\r\n//                          </div>\r\n//                     }\r\n\r\n\r\n                    \r\n//                </div>\r\n\r\n//                {productCardActive == 2 ? \r\n//                     <>\r\n//                          <div className='divider'></div>\r\n//                          <div className='componentPadding flex'>\r\n//                               <div className='col-md-3'>\r\n//                                    <h4>Variants</h4>\r\n//                                    <p>Choose up to three variable attributes for this product to create and manage SKUs and their inventory levels.</p>\r\n//                               </div>\r\n\r\n//                               <div className='col-md-9'>\r\n//                                    <div className='row'> \r\n//                                         <div className='col-md-4'>\r\n//                                              <p>Attribute (e.g. Colour)</p>\r\n//                                              <CreatableSelect\r\n//                                                   isClearable\r\n//                                                   onChange={(e) => changeCreatableSelect('chooseSupplier', e)}\r\n//                                                   options={Supplier}\r\n//                                                   // value={addCreateSelectSupplier}\r\n//                                                   placeholder=\"Choose a variant attribute\" />\r\n//                                         </div>\r\n//                                         <div className='col-md-8'>\r\n//                                              <p>Value (e.g. Red, Blue, Green)</p>\r\n//                                              <CreatableSelect\r\n//                                                   isMulti\r\n//                                                   onChange={(e) => tagsChange(e)}\r\n//                                                   // options={tags}\r\n//                                                   placeholder=\"Enter a value\" /> \r\n//                                         </div>\r\n//                                    </div>\r\n//                                    {newAttribute}\r\n//                                    {increaseAttribute < 2 ? \r\n//                                         <Button onClick={() => addNewAttribute()}><AiOutlinePlus />Add Another Attribute</Button>\r\n//                                         : ''\r\n//                                    }\r\n                                   \r\n//                                    <h4 className='marginTop'>This product has 0 variant.</h4>\r\n//                                    <div className='row'>\r\n//                                         <div className='col-md-3'><p>Variant Name</p></div>\r\n//                                         <div className='col-md-2'><p>SKU Code</p></div>\r\n//                                         <div className='col-md-2'><p>Supplier Code</p></div>\r\n//                                         <div className='col-md-2'><p>Supplier Price</p></div>\r\n//                                         <div className='col-md-2'><p>Retail Price</p><p className='description'>Excluding Tax</p></div>\r\n//                                         <div className='col-md-1'><p>Enabled</p></div>\r\n//                                    </div>\r\n//                               </div>\r\n//                          </div>\r\n//                     </> : ''\r\n//                }\r\n\r\n//                <Dialog open={brandModalOpen} onClose={() => modalClose('brandModal')} fullWidth >\r\n//                     <DialogTitle>Add Brand</DialogTitle>\r\n//                     <DialogContent className='input-header-margin' >\r\n//                          <p>Brand Name</p>\r\n//                          <input className='vend-settings-input fullWidth max-height-input' value={newBrandName} onChange={(e) => changeInput('addBrandName', e.target.value)} />\r\n//                          <div className='marginTop'></div>\r\n//                          <p>Description</p>\r\n//                          <textarea className='fullWidth vend-settings-input text-area-height' onChange={(e) => changeInput('addBrandDescription', e.target.value)} placeholder='Enter a description for this brand that your staff will find useful.'></textarea>\r\n//                     </DialogContent>\r\n//                     <DialogActions>\r\n//                          <Button onClick={() => modalClose('brandModal')}>Cancel</Button>\r\n//                          <Button onClick={() => addBrand()}>Add Brand</Button>\r\n//                     </DialogActions>\r\n//                </Dialog>\r\n\r\n//                <Dialog open={supplierModalOpen} onClose={() => modalClose('supplierModal')} fullWidth >\r\n//                     <DialogTitle>Add Supplier</DialogTitle>\r\n//                     <DialogContent className='input-header-margin' >\r\n//                          <p>Supplier Name</p>\r\n//                          <input className='vend-settings-input fullWidth max-height-input' value={newSupplierName} onChange={(e) => changeInput('addSupplierName', e.target.value)} />\r\n//                          <div className='marginTop'></div>\r\n//                          <p>Description</p>\r\n//                          <textarea className='fullWidth vend-settings-input text-area-height' onChange={(e) => changeInput('addSupplierDescription', e.target.value)} placeholder='Enter a description for this supplier that your staff will find useful.'></textarea>\r\n//                     </DialogContent>\r\n//                     <DialogActions>\r\n//                          <Button onClick={() => modalClose('supplierModal')}>Cancel</Button>\r\n//                          <Button onClick={() => addSupplier()}>Add Supplier</Button>\r\n//                     </DialogActions>\r\n//                </Dialog>\r\n\r\n//                <Dialog open={typeModalOpen} onClose={() => modalClose('productTypeModal')} fullWidth >\r\n//                     <DialogTitle>Add Product Type</DialogTitle>\r\n//                     <DialogContent className='input-header-margin' >\r\n//                          <p>Product Type Name</p>\r\n//                          <input className='vend-settings-input fullWidth max-height-input' value={newProductTypeName} onChange={(e) => changeInput('addProductTypeName', e.target.value)} />\r\n//                     </DialogContent>\r\n//                     <DialogActions>\r\n//                          <Button onClick={() => modalClose('productTypeModal')}>Cancel</Button>\r\n//                          <Button onClick={() => addProductType()}>Add Product Type</Button>\r\n//                     </DialogActions>\r\n//                </Dialog>\r\n//           </>\r\n//      )\r\n// }\r\n// export default AddProduct;\r\n\r\nimport { useState } from 'react';\r\n\r\nfunction App() {\r\n  const [formFields, setFormFields] = useState([\r\n    { name: '', age: '' },\r\n  ])\r\n\r\n  const handleFormChange = (event, index) => {\r\n    let data = [...formFields];\r\n    data[index][event.target.name] = event.target.value;\r\n    setFormFields(data);\r\n  }\r\n\r\n  const submit = (e) => {\r\n    e.preventDefault();\r\n    console.log(formFields)\r\n  }\r\n\r\n  const addFields = () => {\r\n    let object = {\r\n      name: '',\r\n      age: ''\r\n    }\r\n\r\n    setFormFields([...formFields, object])\r\n  }\r\n\r\n  const removeFields = (index) => {\r\n    let data = [...formFields];\r\n    data.splice(index, 1)\r\n    setFormFields(data)\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <form onSubmit={submit}>\r\n        {formFields.map((form, index) => {\r\n          return (\r\n            <div key={index}>\r\n              <input\r\n                name='name'\r\n                placeholder='Name'\r\n                onChange={event => handleFormChange(event, index)}\r\n                value={form.name}\r\n              />\r\n              <input\r\n                name='age'\r\n                placeholder='Age'\r\n                onChange={event => handleFormChange(event, index)}\r\n                value={form.age}\r\n              />\r\n              <button onClick={() => removeFields(index)}>Remove</button>\r\n            </div>\r\n          )\r\n        })}\r\n      </form>\r\n      <button onClick={addFields}>Add More..</button>\r\n      <br />\r\n      <button onClick={submit}>Submit</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;"]},"metadata":{},"sourceType":"module"}