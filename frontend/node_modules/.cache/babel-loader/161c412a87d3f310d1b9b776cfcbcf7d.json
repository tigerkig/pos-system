{"ast":null,"code":"import { normalize } from '../fns.js';\nimport { short, long } from '../data/days.js'; //is it 'wednesday'?\n\nconst isDay = function (unit) {\n  if (short().find(s => s === unit)) {\n    return true;\n  }\n\n  if (long().find(s => s === unit)) {\n    return true;\n  }\n\n  return false;\n}; // return a list of the weeks/months/days between a -> b\n// returns spacetime objects in the timezone of the input\n\n\nconst every = function (start, unit, end) {\n  if (!unit || !end) {\n    return [];\n  } //cleanup unit param\n\n\n  unit = normalize(unit); //cleanup to param\n\n  end = start.clone().set(end); //swap them, if they're backwards\n\n  if (start.isAfter(end)) {\n    let tmp = start;\n    start = end;\n    end = tmp;\n  } //support 'every wednesday'\n\n\n  let d = start.clone();\n\n  if (isDay(unit)) {\n    d = d.next(unit);\n    unit = 'week';\n  } else {\n    let first = d.startOf(unit);\n\n    if (first.isBefore(start)) {\n      d = d.next(unit);\n    }\n  } //okay, actually start doing it\n\n\n  let result = [];\n\n  while (d.isBefore(end)) {\n    result.push(d);\n    d = d.add(1, unit);\n  }\n\n  return result;\n};\n\nexport default every;","map":{"version":3,"sources":["E:/React/pos-system/main/node_modules/spacetime/src/methods/every.js"],"names":["normalize","short","long","isDay","unit","find","s","every","start","end","clone","set","isAfter","tmp","d","next","first","startOf","isBefore","result","push","add"],"mappings":"AAAA,SAASA,SAAT,QAA0B,WAA1B;AACA,SAASC,KAAT,EAAgBC,IAAhB,QAA4B,iBAA5B,C,CAEA;;AACA,MAAMC,KAAK,GAAG,UAAUC,IAAV,EAAgB;AAC5B,MAAIH,KAAK,GAAGI,IAAR,CAAcC,CAAD,IAAOA,CAAC,KAAKF,IAA1B,CAAJ,EAAqC;AACnC,WAAO,IAAP;AACD;;AACD,MAAIF,IAAI,GAAGG,IAAP,CAAaC,CAAD,IAAOA,CAAC,KAAKF,IAAzB,CAAJ,EAAoC;AAClC,WAAO,IAAP;AACD;;AACD,SAAO,KAAP;AACD,CARD,C,CAUA;AACA;;;AACA,MAAMG,KAAK,GAAG,UAAUC,KAAV,EAAiBJ,IAAjB,EAAuBK,GAAvB,EAA4B;AACxC,MAAI,CAACL,IAAD,IAAS,CAACK,GAAd,EAAmB;AACjB,WAAO,EAAP;AACD,GAHuC,CAIxC;;;AACAL,EAAAA,IAAI,GAAGJ,SAAS,CAACI,IAAD,CAAhB,CALwC,CAMxC;;AACAK,EAAAA,GAAG,GAAGD,KAAK,CAACE,KAAN,GAAcC,GAAd,CAAkBF,GAAlB,CAAN,CAPwC,CAQxC;;AACA,MAAID,KAAK,CAACI,OAAN,CAAcH,GAAd,CAAJ,EAAwB;AACtB,QAAII,GAAG,GAAGL,KAAV;AACAA,IAAAA,KAAK,GAAGC,GAAR;AACAA,IAAAA,GAAG,GAAGI,GAAN;AACD,GAbuC,CAexC;;;AACA,MAAIC,CAAC,GAAGN,KAAK,CAACE,KAAN,EAAR;;AACA,MAAIP,KAAK,CAACC,IAAD,CAAT,EAAiB;AACfU,IAAAA,CAAC,GAAGA,CAAC,CAACC,IAAF,CAAOX,IAAP,CAAJ;AACAA,IAAAA,IAAI,GAAG,MAAP;AACD,GAHD,MAGO;AACL,QAAIY,KAAK,GAAGF,CAAC,CAACG,OAAF,CAAUb,IAAV,CAAZ;;AACA,QAAIY,KAAK,CAACE,QAAN,CAAeV,KAAf,CAAJ,EAA2B;AACzBM,MAAAA,CAAC,GAAGA,CAAC,CAACC,IAAF,CAAOX,IAAP,CAAJ;AACD;AACF,GAzBuC,CA0BxC;;;AACA,MAAIe,MAAM,GAAG,EAAb;;AACA,SAAOL,CAAC,CAACI,QAAF,CAAWT,GAAX,CAAP,EAAwB;AACtBU,IAAAA,MAAM,CAACC,IAAP,CAAYN,CAAZ;AACAA,IAAAA,CAAC,GAAGA,CAAC,CAACO,GAAF,CAAM,CAAN,EAASjB,IAAT,CAAJ;AACD;;AACD,SAAOe,MAAP;AACD,CAjCD;;AAkCA,eAAeZ,KAAf","sourcesContent":["import { normalize } from '../fns.js'\nimport { short, long } from '../data/days.js'\n\n//is it 'wednesday'?\nconst isDay = function (unit) {\n  if (short().find((s) => s === unit)) {\n    return true\n  }\n  if (long().find((s) => s === unit)) {\n    return true\n  }\n  return false\n}\n\n// return a list of the weeks/months/days between a -> b\n// returns spacetime objects in the timezone of the input\nconst every = function (start, unit, end) {\n  if (!unit || !end) {\n    return []\n  }\n  //cleanup unit param\n  unit = normalize(unit)\n  //cleanup to param\n  end = start.clone().set(end)\n  //swap them, if they're backwards\n  if (start.isAfter(end)) {\n    let tmp = start\n    start = end\n    end = tmp\n  }\n\n  //support 'every wednesday'\n  let d = start.clone()\n  if (isDay(unit)) {\n    d = d.next(unit)\n    unit = 'week'\n  } else {\n    let first = d.startOf(unit)\n    if (first.isBefore(start)) {\n      d = d.next(unit)\n    }\n  }\n  //okay, actually start doing it\n  let result = []\n  while (d.isBefore(end)) {\n    result.push(d)\n    d = d.add(1, unit)\n  }\n  return result\n}\nexport default every\n"]},"metadata":{},"sourceType":"module"}