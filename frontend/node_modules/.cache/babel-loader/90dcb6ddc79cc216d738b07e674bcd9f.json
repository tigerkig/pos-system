{"ast":null,"code":"// 0 -> Array#forEach\n// 1 -> Array#map\n// 2 -> Array#filter\n// 3 -> Array#some\n// 4 -> Array#every\n// 5 -> Array#find\n// 6 -> Array#findIndex\nvar ctx = require('./$.ctx'),\n    IObject = require('./$.iobject'),\n    toObject = require('./$.to-object'),\n    toLength = require('./$.to-length'),\n    asc = require('./$.array-species-create');\n\nmodule.exports = function (TYPE) {\n  var IS_MAP = TYPE == 1,\n      IS_FILTER = TYPE == 2,\n      IS_SOME = TYPE == 3,\n      IS_EVERY = TYPE == 4,\n      IS_FIND_INDEX = TYPE == 6,\n      NO_HOLES = TYPE == 5 || IS_FIND_INDEX;\n  return function ($this, callbackfn, that) {\n    var O = toObject($this),\n        self = IObject(O),\n        f = ctx(callbackfn, that, 3),\n        length = toLength(self.length),\n        index = 0,\n        result = IS_MAP ? asc($this, length) : IS_FILTER ? asc($this, 0) : undefined,\n        val,\n        res;\n\n    for (; length > index; index++) {\n      if (NO_HOLES || index in self) {\n        val = self[index];\n        res = f(val, index, O);\n\n        if (TYPE) {\n          if (IS_MAP) result[index] = res; // map\n          else if (res) switch (TYPE) {\n            case 3:\n              return true;\n            // some\n\n            case 5:\n              return val;\n            // find\n\n            case 6:\n              return index;\n            // findIndex\n\n            case 2:\n              result.push(val);\n            // filter\n          } else if (IS_EVERY) return false; // every\n        }\n      }\n    }\n\n    return IS_FIND_INDEX ? -1 : IS_SOME || IS_EVERY ? IS_EVERY : result;\n  };\n};","map":{"version":3,"sources":["E:/React/pos-system/main/node_modules/babel/node_modules/core-js/modules/$.array-methods.js"],"names":["ctx","require","IObject","toObject","toLength","asc","module","exports","TYPE","IS_MAP","IS_FILTER","IS_SOME","IS_EVERY","IS_FIND_INDEX","NO_HOLES","$this","callbackfn","that","O","self","f","length","index","result","undefined","val","res","push"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIA,GAAG,GAAQC,OAAO,CAAC,SAAD,CAAtB;AAAA,IACIC,OAAO,GAAID,OAAO,CAAC,aAAD,CADtB;AAAA,IAEIE,QAAQ,GAAGF,OAAO,CAAC,eAAD,CAFtB;AAAA,IAGIG,QAAQ,GAAGH,OAAO,CAAC,eAAD,CAHtB;AAAA,IAIII,GAAG,GAAQJ,OAAO,CAAC,0BAAD,CAJtB;;AAKAK,MAAM,CAACC,OAAP,GAAiB,UAASC,IAAT,EAAc;AAC7B,MAAIC,MAAM,GAAUD,IAAI,IAAI,CAA5B;AAAA,MACIE,SAAS,GAAOF,IAAI,IAAI,CAD5B;AAAA,MAEIG,OAAO,GAASH,IAAI,IAAI,CAF5B;AAAA,MAGII,QAAQ,GAAQJ,IAAI,IAAI,CAH5B;AAAA,MAIIK,aAAa,GAAGL,IAAI,IAAI,CAJ5B;AAAA,MAKIM,QAAQ,GAAQN,IAAI,IAAI,CAAR,IAAaK,aALjC;AAMA,SAAO,UAASE,KAAT,EAAgBC,UAAhB,EAA4BC,IAA5B,EAAiC;AACtC,QAAIC,CAAC,GAAQf,QAAQ,CAACY,KAAD,CAArB;AAAA,QACII,IAAI,GAAKjB,OAAO,CAACgB,CAAD,CADpB;AAAA,QAEIE,CAAC,GAAQpB,GAAG,CAACgB,UAAD,EAAaC,IAAb,EAAmB,CAAnB,CAFhB;AAAA,QAGII,MAAM,GAAGjB,QAAQ,CAACe,IAAI,CAACE,MAAN,CAHrB;AAAA,QAIIC,KAAK,GAAI,CAJb;AAAA,QAKIC,MAAM,GAAGd,MAAM,GAAGJ,GAAG,CAACU,KAAD,EAAQM,MAAR,CAAN,GAAwBX,SAAS,GAAGL,GAAG,CAACU,KAAD,EAAQ,CAAR,CAAN,GAAmBS,SALvE;AAAA,QAMIC,GANJ;AAAA,QAMSC,GANT;;AAOA,WAAKL,MAAM,GAAGC,KAAd,EAAqBA,KAAK,EAA1B;AAA6B,UAAGR,QAAQ,IAAIQ,KAAK,IAAIH,IAAxB,EAA6B;AACxDM,QAAAA,GAAG,GAAGN,IAAI,CAACG,KAAD,CAAV;AACAI,QAAAA,GAAG,GAAGN,CAAC,CAACK,GAAD,EAAMH,KAAN,EAAaJ,CAAb,CAAP;;AACA,YAAGV,IAAH,EAAQ;AACN,cAAGC,MAAH,EAAUc,MAAM,CAACD,KAAD,CAAN,GAAgBI,GAAhB,CAAV,CAA0C;AAA1C,eACK,IAAGA,GAAH,EAAO,QAAOlB,IAAP;AACV,iBAAK,CAAL;AAAQ,qBAAO,IAAP;AAAgC;;AACxC,iBAAK,CAAL;AAAQ,qBAAOiB,GAAP;AAAgC;;AACxC,iBAAK,CAAL;AAAQ,qBAAOH,KAAP;AAAgC;;AACxC,iBAAK,CAAL;AAAQC,cAAAA,MAAM,CAACI,IAAP,CAAYF,GAAZ;AAAgC;AAJ9B,WAAP,MAKE,IAAGb,QAAH,EAAY,OAAO,KAAP,CAPb,CAOoC;AAC3C;AACF;AAZD;;AAaA,WAAOC,aAAa,GAAG,CAAC,CAAJ,GAAQF,OAAO,IAAIC,QAAX,GAAsBA,QAAtB,GAAiCW,MAA7D;AACD,GAtBD;AAuBD,CA9BD","sourcesContent":["// 0 -> Array#forEach\n// 1 -> Array#map\n// 2 -> Array#filter\n// 3 -> Array#some\n// 4 -> Array#every\n// 5 -> Array#find\n// 6 -> Array#findIndex\nvar ctx      = require('./$.ctx')\n  , IObject  = require('./$.iobject')\n  , toObject = require('./$.to-object')\n  , toLength = require('./$.to-length')\n  , asc      = require('./$.array-species-create');\nmodule.exports = function(TYPE){\n  var IS_MAP        = TYPE == 1\n    , IS_FILTER     = TYPE == 2\n    , IS_SOME       = TYPE == 3\n    , IS_EVERY      = TYPE == 4\n    , IS_FIND_INDEX = TYPE == 6\n    , NO_HOLES      = TYPE == 5 || IS_FIND_INDEX;\n  return function($this, callbackfn, that){\n    var O      = toObject($this)\n      , self   = IObject(O)\n      , f      = ctx(callbackfn, that, 3)\n      , length = toLength(self.length)\n      , index  = 0\n      , result = IS_MAP ? asc($this, length) : IS_FILTER ? asc($this, 0) : undefined\n      , val, res;\n    for(;length > index; index++)if(NO_HOLES || index in self){\n      val = self[index];\n      res = f(val, index, O);\n      if(TYPE){\n        if(IS_MAP)result[index] = res;            // map\n        else if(res)switch(TYPE){\n          case 3: return true;                    // some\n          case 5: return val;                     // find\n          case 6: return index;                   // findIndex\n          case 2: result.push(val);               // filter\n        } else if(IS_EVERY)return false;          // every\n      }\n    }\n    return IS_FIND_INDEX ? -1 : IS_SOME || IS_EVERY ? IS_EVERY : result;\n  };\n};"]},"metadata":{},"sourceType":"script"}