{"ast":null,"code":"var $export = require('./$.export'),\n    defined = require('./$.defined'),\n    fails = require('./$.fails'),\n    spaces = '\\x09\\x0A\\x0B\\x0C\\x0D\\x20\\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003' + '\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u202F\\u205F\\u3000\\u2028\\u2029\\uFEFF',\n    space = '[' + spaces + ']',\n    non = '\\u200b\\u0085',\n    ltrim = RegExp('^' + space + space + '*'),\n    rtrim = RegExp(space + space + '*$');\n\nvar exporter = function (KEY, exec) {\n  var exp = {};\n  exp[KEY] = exec(trim);\n  $export($export.P + $export.F * fails(function () {\n    return !!spaces[KEY]() || non[KEY]() != non;\n  }), 'String', exp);\n}; // 1 -> String#trimLeft\n// 2 -> String#trimRight\n// 3 -> String#trim\n\n\nvar trim = exporter.trim = function (string, TYPE) {\n  string = String(defined(string));\n  if (TYPE & 1) string = string.replace(ltrim, '');\n  if (TYPE & 2) string = string.replace(rtrim, '');\n  return string;\n};\n\nmodule.exports = exporter;","map":{"version":3,"sources":["E:/React/pos-system/main/node_modules/babel/node_modules/core-js/modules/$.string-trim.js"],"names":["$export","require","defined","fails","spaces","space","non","ltrim","RegExp","rtrim","exporter","KEY","exec","exp","trim","P","F","string","TYPE","String","replace","module","exports"],"mappings":"AAAA,IAAIA,OAAO,GAAGC,OAAO,CAAC,YAAD,CAArB;AAAA,IACIC,OAAO,GAAGD,OAAO,CAAC,aAAD,CADrB;AAAA,IAEIE,KAAK,GAAKF,OAAO,CAAC,WAAD,CAFrB;AAAA,IAGIG,MAAM,GAAI,qEACR,gFAJN;AAAA,IAKIC,KAAK,GAAK,MAAMD,MAAN,GAAe,GAL7B;AAAA,IAMIE,GAAG,GAAO,cANd;AAAA,IAOIC,KAAK,GAAKC,MAAM,CAAC,MAAMH,KAAN,GAAcA,KAAd,GAAsB,GAAvB,CAPpB;AAAA,IAQII,KAAK,GAAKD,MAAM,CAACH,KAAK,GAAGA,KAAR,GAAgB,IAAjB,CARpB;;AAUA,IAAIK,QAAQ,GAAG,UAASC,GAAT,EAAcC,IAAd,EAAmB;AAChC,MAAIC,GAAG,GAAI,EAAX;AACAA,EAAAA,GAAG,CAACF,GAAD,CAAH,GAAWC,IAAI,CAACE,IAAD,CAAf;AACAd,EAAAA,OAAO,CAACA,OAAO,CAACe,CAAR,GAAYf,OAAO,CAACgB,CAAR,GAAYb,KAAK,CAAC,YAAU;AAC9C,WAAO,CAAC,CAACC,MAAM,CAACO,GAAD,CAAN,EAAF,IAAmBL,GAAG,CAACK,GAAD,CAAH,MAAcL,GAAxC;AACD,GAFoC,CAA9B,EAEH,QAFG,EAEOO,GAFP,CAAP;AAGD,CAND,C,CAQA;AACA;AACA;;;AACA,IAAIC,IAAI,GAAGJ,QAAQ,CAACI,IAAT,GAAgB,UAASG,MAAT,EAAiBC,IAAjB,EAAsB;AAC/CD,EAAAA,MAAM,GAAGE,MAAM,CAACjB,OAAO,CAACe,MAAD,CAAR,CAAf;AACA,MAAGC,IAAI,GAAG,CAAV,EAAYD,MAAM,GAAGA,MAAM,CAACG,OAAP,CAAeb,KAAf,EAAsB,EAAtB,CAAT;AACZ,MAAGW,IAAI,GAAG,CAAV,EAAYD,MAAM,GAAGA,MAAM,CAACG,OAAP,CAAeX,KAAf,EAAsB,EAAtB,CAAT;AACZ,SAAOQ,MAAP;AACD,CALD;;AAOAI,MAAM,CAACC,OAAP,GAAiBZ,QAAjB","sourcesContent":["var $export = require('./$.export')\n  , defined = require('./$.defined')\n  , fails   = require('./$.fails')\n  , spaces  = '\\x09\\x0A\\x0B\\x0C\\x0D\\x20\\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003' +\n      '\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u202F\\u205F\\u3000\\u2028\\u2029\\uFEFF'\n  , space   = '[' + spaces + ']'\n  , non     = '\\u200b\\u0085'\n  , ltrim   = RegExp('^' + space + space + '*')\n  , rtrim   = RegExp(space + space + '*$');\n\nvar exporter = function(KEY, exec){\n  var exp  = {};\n  exp[KEY] = exec(trim);\n  $export($export.P + $export.F * fails(function(){\n    return !!spaces[KEY]() || non[KEY]() != non;\n  }), 'String', exp);\n};\n\n// 1 -> String#trimLeft\n// 2 -> String#trimRight\n// 3 -> String#trim\nvar trim = exporter.trim = function(string, TYPE){\n  string = String(defined(string));\n  if(TYPE & 1)string = string.replace(ltrim, '');\n  if(TYPE & 2)string = string.replace(rtrim, '');\n  return string;\n};\n\nmodule.exports = exporter;"]},"metadata":{},"sourceType":"script"}