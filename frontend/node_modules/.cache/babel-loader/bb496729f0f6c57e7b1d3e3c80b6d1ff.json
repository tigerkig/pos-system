{"ast":null,"code":"import format from './methods/format/index.js';\nimport unixFmt from './methods/format/unixFmt.js';\nimport progress from './methods/progress.js';\nimport nearest from './methods/nearest.js';\nimport diff from './methods/diff/index.js';\nimport since from './methods/since/index.js';\nimport { startOf as _startOf, endOf as _endOf } from './methods/startOf.js';\nimport every from './methods/every.js';\nimport timezone from './timezone/index.js';\nimport findTz from './timezone/find.js';\nimport handleInput from './input/index.js';\nimport { isLeapYear } from './fns.js';\nimport { short, long } from './data/days.js';\nconst units = ['century', 'decade', 'year', 'month', 'date', 'day', 'hour', 'minute', 'second', 'millisecond']; //the spacetime instance methods (also, the API)\n\nconst methods = {\n  set: function (input, tz) {\n    let s = this.clone();\n    s = handleInput(s, input, null);\n\n    if (tz) {\n      this.tz = findTz(tz);\n    }\n\n    return s;\n  },\n  timezone: function () {\n    return timezone(this);\n  },\n  isDST: function () {\n    return timezone(this).current.isDST;\n  },\n  hasDST: function () {\n    return timezone(this).hasDst;\n  },\n  offset: function () {\n    return timezone(this).current.offset * 60;\n  },\n  hemisphere: function () {\n    return timezone(this).hemisphere;\n  },\n  format: function (fmt) {\n    return format(this, fmt);\n  },\n  unixFmt: function (fmt) {\n    return unixFmt(this, fmt);\n  },\n  startOf: function (unit) {\n    return _startOf(this, unit);\n  },\n  endOf: function (unit) {\n    return _endOf(this, unit);\n  },\n  leapYear: function () {\n    let year = this.year();\n    return isLeapYear(year);\n  },\n  progress: function (unit) {\n    return progress(this, unit);\n  },\n  nearest: function (unit) {\n    return nearest(this, unit);\n  },\n  diff: function (d, unit) {\n    return diff(this, d, unit);\n  },\n  since: function (d) {\n    if (!d) {\n      d = this.clone().set();\n    }\n\n    return since(this, d);\n  },\n  next: function (unit) {\n    let s = this.add(1, unit);\n    return s.startOf(unit);\n  },\n  //the start of the previous year/week/century\n  last: function (unit) {\n    let s = this.subtract(1, unit);\n    return s.startOf(unit);\n  },\n  isValid: function () {\n    //null/undefined epochs\n    if (!this.epoch && this.epoch !== 0) {\n      return false;\n    }\n\n    return !isNaN(this.d.getTime());\n  },\n  //travel to this timezone\n  goto: function (tz) {\n    let s = this.clone();\n    s.tz = findTz(tz, s.timezones); //science!\n\n    return s;\n  },\n  //get each week/month/day between a -> b\n  every: function (unit, to) {\n    // allow swapping these params:\n    if (typeof unit === 'object' && typeof to === 'string') {\n      let tmp = to;\n      to = unit;\n      unit = tmp;\n    }\n\n    return every(this, unit, to);\n  },\n  isAwake: function () {\n    let hour = this.hour(); //10pm -> 8am\n\n    if (hour < 8 || hour > 22) {\n      return false;\n    }\n\n    return true;\n  },\n  isAsleep: function () {\n    return !this.isAwake();\n  },\n  daysInMonth: function () {\n    switch (this.month()) {\n      case 0:\n        return 31;\n\n      case 1:\n        return this.leapYear() ? 29 : 28;\n\n      case 2:\n        return 31;\n\n      case 3:\n        return 30;\n\n      case 4:\n        return 31;\n\n      case 5:\n        return 30;\n\n      case 6:\n        return 31;\n\n      case 7:\n        return 31;\n\n      case 8:\n        return 30;\n\n      case 9:\n        return 31;\n\n      case 10:\n        return 30;\n\n      case 11:\n        return 31;\n\n      default:\n        throw new Error('Invalid Month state.');\n    }\n  },\n  //pretty-printing\n  log: function () {\n    console.log('');\n    console.log(format(this, 'nice-short'));\n    return this;\n  },\n  logYear: function () {\n    console.log('');\n    console.log(format(this, 'full-short'));\n    return this;\n  },\n  json: function () {\n    return units.reduce((h, unit) => {\n      h[unit] = this[unit]();\n      return h;\n    }, {});\n  },\n  debug: function () {\n    let tz = this.timezone();\n    let date = this.format('MM') + ' ' + this.format('date-ordinal') + ' ' + this.year();\n    date += '\\n     - ' + this.format('time');\n    console.log('\\n\\n', date + '\\n     - ' + tz.name + ' (' + tz.current.offset + ')');\n    return this;\n  },\n  //alias of 'since' but opposite - like moment.js\n  from: function (d) {\n    d = this.clone().set(d);\n    return d.since(this);\n  },\n  fromNow: function () {\n    let d = this.clone().set(Date.now());\n    return d.since(this);\n  },\n  weekStart: function (input) {\n    //accept a number directly\n    if (typeof input === 'number') {\n      this._weekStart = input;\n      return this;\n    }\n\n    if (typeof input === 'string') {\n      // accept 'wednesday'\n      input = input.toLowerCase().trim();\n      let num = short().indexOf(input);\n\n      if (num === -1) {\n        num = long().indexOf(input);\n      }\n\n      if (num === -1) {\n        num = 1; //go back to default\n      }\n\n      this._weekStart = num;\n    } else {\n      console.warn('Spacetime Error: Cannot understand .weekStart() input:', input);\n    }\n\n    return this;\n  }\n}; // aliases\n\nmethods.inDST = methods.isDST;\nmethods.round = methods.nearest;\nmethods.each = methods.every;\nexport default methods;","map":{"version":3,"sources":["E:/React/pos-system/main/node_modules/spacetime/src/methods.js"],"names":["format","unixFmt","progress","nearest","diff","since","startOf","_startOf","endOf","_endOf","every","timezone","findTz","handleInput","isLeapYear","short","long","units","methods","set","input","tz","s","clone","isDST","current","hasDST","hasDst","offset","hemisphere","fmt","unit","leapYear","year","d","next","add","last","subtract","isValid","epoch","isNaN","getTime","goto","timezones","to","tmp","isAwake","hour","isAsleep","daysInMonth","month","Error","log","console","logYear","json","reduce","h","debug","date","name","from","fromNow","Date","now","weekStart","_weekStart","toLowerCase","trim","num","indexOf","warn","inDST","round","each"],"mappings":"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","sourcesContent":["import format from './methods/format/index.js'\nimport unixFmt from './methods/format/unixFmt.js'\nimport progress from './methods/progress.js'\nimport nearest from './methods/nearest.js'\nimport diff from './methods/diff/index.js'\nimport since from './methods/since/index.js'\nimport { startOf as _startOf, endOf as _endOf } from './methods/startOf.js'\nimport every from './methods/every.js'\nimport timezone from './timezone/index.js'\nimport findTz from './timezone/find.js'\nimport handleInput from './input/index.js'\nimport { isLeapYear } from './fns.js'\nimport { short, long } from './data/days.js'\nconst units = [\n  'century',\n  'decade',\n  'year',\n  'month',\n  'date',\n  'day',\n  'hour',\n  'minute',\n  'second',\n  'millisecond'\n]\n\n//the spacetime instance methods (also, the API)\nconst methods = {\n  set: function (input, tz) {\n    let s = this.clone()\n    s = handleInput(s, input, null)\n    if (tz) {\n      this.tz = findTz(tz)\n    }\n    return s\n  },\n  timezone: function () {\n    return timezone(this)\n  },\n  isDST: function () {\n    return timezone(this).current.isDST\n  },\n  hasDST: function () {\n    return timezone(this).hasDst\n  },\n  offset: function () {\n    return timezone(this).current.offset * 60\n  },\n  hemisphere: function () {\n    return timezone(this).hemisphere\n  },\n  format: function (fmt) {\n    return format(this, fmt)\n  },\n  unixFmt: function (fmt) {\n    return unixFmt(this, fmt)\n  },\n  startOf: function (unit) {\n    return _startOf(this, unit)\n  },\n  endOf: function (unit) {\n    return _endOf(this, unit)\n  },\n  leapYear: function () {\n    let year = this.year()\n    return isLeapYear(year)\n  },\n  progress: function (unit) {\n    return progress(this, unit)\n  },\n  nearest: function (unit) {\n    return nearest(this, unit)\n  },\n  diff: function (d, unit) {\n    return diff(this, d, unit)\n  },\n  since: function (d) {\n    if (!d) {\n      d = this.clone().set()\n    }\n    return since(this, d)\n  },\n  next: function (unit) {\n    let s = this.add(1, unit)\n    return s.startOf(unit)\n  },\n  //the start of the previous year/week/century\n  last: function (unit) {\n    let s = this.subtract(1, unit)\n    return s.startOf(unit)\n  },\n  isValid: function () {\n    //null/undefined epochs\n    if (!this.epoch && this.epoch !== 0) {\n      return false\n    }\n    return !isNaN(this.d.getTime())\n  },\n  //travel to this timezone\n  goto: function (tz) {\n    let s = this.clone()\n    s.tz = findTz(tz, s.timezones) //science!\n    return s\n  },\n  //get each week/month/day between a -> b\n  every: function (unit, to) {\n    // allow swapping these params:\n    if (typeof unit === 'object' && typeof to === 'string') {\n      let tmp = to\n      to = unit\n      unit = tmp\n    }\n    return every(this, unit, to)\n  },\n  isAwake: function () {\n    let hour = this.hour()\n    //10pm -> 8am\n    if (hour < 8 || hour > 22) {\n      return false\n    }\n    return true\n  },\n  isAsleep: function () {\n    return !this.isAwake()\n  },\n  daysInMonth: function () {\n    switch (this.month()) {\n      case 0:\n        return 31\n      case 1:\n        return this.leapYear() ? 29 : 28\n      case 2:\n        return 31\n      case 3:\n        return 30\n      case 4:\n        return 31\n      case 5:\n        return 30\n      case 6:\n        return 31\n      case 7:\n        return 31\n      case 8:\n        return 30\n      case 9:\n        return 31\n      case 10:\n        return 30\n      case 11:\n        return 31\n      default:\n        throw new Error('Invalid Month state.')\n    }\n  },\n  //pretty-printing\n  log: function () {\n    console.log('')\n    console.log(format(this, 'nice-short'))\n    return this\n  },\n  logYear: function () {\n    console.log('')\n    console.log(format(this, 'full-short'))\n    return this\n  },\n  json: function () {\n    return units.reduce((h, unit) => {\n      h[unit] = this[unit]()\n      return h\n    }, {})\n  },\n  debug: function () {\n    let tz = this.timezone()\n    let date = this.format('MM') + ' ' + this.format('date-ordinal') + ' ' + this.year()\n    date += '\\n     - ' + this.format('time')\n    console.log('\\n\\n', date + '\\n     - ' + tz.name + ' (' + tz.current.offset + ')')\n    return this\n  },\n  //alias of 'since' but opposite - like moment.js\n  from: function (d) {\n    d = this.clone().set(d)\n    return d.since(this)\n  },\n  fromNow: function () {\n    let d = this.clone().set(Date.now())\n    return d.since(this)\n  },\n  weekStart: function (input) {\n    //accept a number directly\n    if (typeof input === 'number') {\n      this._weekStart = input\n      return this\n    }\n    if (typeof input === 'string') {\n      // accept 'wednesday'\n      input = input.toLowerCase().trim()\n      let num = short().indexOf(input)\n      if (num === -1) {\n        num = long().indexOf(input)\n      }\n      if (num === -1) {\n        num = 1 //go back to default\n      }\n      this._weekStart = num\n    } else {\n      console.warn('Spacetime Error: Cannot understand .weekStart() input:', input)\n    }\n    return this\n  }\n}\n// aliases\nmethods.inDST = methods.isDST\nmethods.round = methods.nearest\nmethods.each = methods.every\nexport default methods\n"]},"metadata":{},"sourceType":"module"}