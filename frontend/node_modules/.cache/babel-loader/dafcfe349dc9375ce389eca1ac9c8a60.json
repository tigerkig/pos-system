{"ast":null,"code":"//increment until dates are the same\nconst climb = (a, b, unit) => {\n  let i = 0;\n  a = a.clone();\n\n  while (a.isBefore(b)) {\n    //do proper, expensive increment to catch all-the-tricks\n    a = a.add(1, unit);\n    i += 1;\n  } //oops, we went too-far..\n\n\n  if (a.isAfter(b, unit)) {\n    i -= 1;\n  }\n\n  return i;\n}; // do a thurough +=1 on the unit, until they match\n// for speed-reasons, only used on day, month, week.\n\n\nconst diffOne = (a, b, unit) => {\n  if (a.isBefore(b)) {\n    return climb(a, b, unit);\n  } else {\n    return climb(b, a, unit) * -1; //reverse it\n  }\n};\n\nexport default diffOne;","map":{"version":3,"sources":["E:/React/pos-system/main/node_modules/spacetime/src/methods/diff/one.js"],"names":["climb","a","b","unit","i","clone","isBefore","add","isAfter","diffOne"],"mappings":"AAAA;AACA,MAAMA,KAAK,GAAG,CAACC,CAAD,EAAIC,CAAJ,EAAOC,IAAP,KAAgB;AAC5B,MAAIC,CAAC,GAAG,CAAR;AACAH,EAAAA,CAAC,GAAGA,CAAC,CAACI,KAAF,EAAJ;;AACA,SAAOJ,CAAC,CAACK,QAAF,CAAWJ,CAAX,CAAP,EAAsB;AACpB;AACAD,IAAAA,CAAC,GAAGA,CAAC,CAACM,GAAF,CAAM,CAAN,EAASJ,IAAT,CAAJ;AACAC,IAAAA,CAAC,IAAI,CAAL;AACD,GAP2B,CAQ5B;;;AACA,MAAIH,CAAC,CAACO,OAAF,CAAUN,CAAV,EAAaC,IAAb,CAAJ,EAAwB;AACtBC,IAAAA,CAAC,IAAI,CAAL;AACD;;AACD,SAAOA,CAAP;AACD,CAbD,C,CAeA;AACA;;;AACA,MAAMK,OAAO,GAAG,CAACR,CAAD,EAAIC,CAAJ,EAAOC,IAAP,KAAgB;AAC9B,MAAIF,CAAC,CAACK,QAAF,CAAWJ,CAAX,CAAJ,EAAmB;AACjB,WAAOF,KAAK,CAACC,CAAD,EAAIC,CAAJ,EAAOC,IAAP,CAAZ;AACD,GAFD,MAEO;AACL,WAAOH,KAAK,CAACE,CAAD,EAAID,CAAJ,EAAOE,IAAP,CAAL,GAAoB,CAAC,CAA5B,CADK,CACyB;AAC/B;AACF,CAND;;AAQA,eAAeM,OAAf","sourcesContent":["//increment until dates are the same\nconst climb = (a, b, unit) => {\n  let i = 0\n  a = a.clone()\n  while (a.isBefore(b)) {\n    //do proper, expensive increment to catch all-the-tricks\n    a = a.add(1, unit)\n    i += 1\n  }\n  //oops, we went too-far..\n  if (a.isAfter(b, unit)) {\n    i -= 1\n  }\n  return i\n}\n\n// do a thurough +=1 on the unit, until they match\n// for speed-reasons, only used on day, month, week.\nconst diffOne = (a, b, unit) => {\n  if (a.isBefore(b)) {\n    return climb(a, b, unit)\n  } else {\n    return climb(b, a, unit) * -1 //reverse it\n  }\n}\n\nexport default diffOne\n"]},"metadata":{},"sourceType":"module"}