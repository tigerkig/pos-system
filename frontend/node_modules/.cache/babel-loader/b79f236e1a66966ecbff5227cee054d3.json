{"ast":null,"code":"import diffOne from './one.js'; // don't do anything too fancy here.\n// 2020 - 2019 may be 1 year, or 0 years\n// - '1 year difference' means 366 days during a leap year\n\nconst fastYear = (a, b) => {\n  let years = b.year() - a.year(); // should we decrement it by 1?\n\n  a = a.year(b.year());\n\n  if (a.isAfter(b)) {\n    years -= 1;\n  }\n\n  return years;\n}; // use a waterfall-method for computing a diff of any 'pre-knowable' units\n// compute years, then compute months, etc..\n// ... then ms-math for any very-small units\n\n\nconst diff = function (a, b) {\n  // an hour is always the same # of milliseconds\n  // so these units can be 'pre-calculated'\n  let msDiff = b.epoch - a.epoch;\n  let obj = {\n    milliseconds: msDiff,\n    seconds: parseInt(msDiff / 1000, 10)\n  };\n  obj.minutes = parseInt(obj.seconds / 60, 10);\n  obj.hours = parseInt(obj.minutes / 60, 10); //do the year\n\n  let tmp = a.clone();\n  obj.years = fastYear(tmp, b);\n  tmp = a.add(obj.years, 'year'); //there's always 12 months in a year...\n\n  obj.months = obj.years * 12;\n  tmp = a.add(obj.months, 'month');\n  obj.months += diffOne(tmp, b, 'month'); // there's always atleast 52 weeks in a year..\n  // (month * 4) isn't as close\n\n  obj.weeks = obj.years * 52;\n  tmp = a.add(obj.weeks, 'week');\n  obj.weeks += diffOne(tmp, b, 'week'); // there's always atleast 7 days in a week\n\n  obj.days = obj.weeks * 7;\n  tmp = a.add(obj.days, 'day');\n  obj.days += diffOne(tmp, b, 'day');\n  return obj;\n};\n\nexport default diff;","map":{"version":3,"sources":["E:/React/pos-system/main/node_modules/spacetime/src/methods/diff/waterfall.js"],"names":["diffOne","fastYear","a","b","years","year","isAfter","diff","msDiff","epoch","obj","milliseconds","seconds","parseInt","minutes","hours","tmp","clone","add","months","weeks","days"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,UAApB,C,CAEA;AACA;AACA;;AACA,MAAMC,QAAQ,GAAG,CAACC,CAAD,EAAIC,CAAJ,KAAU;AACzB,MAAIC,KAAK,GAAGD,CAAC,CAACE,IAAF,KAAWH,CAAC,CAACG,IAAF,EAAvB,CADyB,CAEzB;;AACAH,EAAAA,CAAC,GAAGA,CAAC,CAACG,IAAF,CAAOF,CAAC,CAACE,IAAF,EAAP,CAAJ;;AACA,MAAIH,CAAC,CAACI,OAAF,CAAUH,CAAV,CAAJ,EAAkB;AAChBC,IAAAA,KAAK,IAAI,CAAT;AACD;;AACD,SAAOA,KAAP;AACD,CARD,C,CAUA;AACA;AACA;;;AACA,MAAMG,IAAI,GAAG,UAAUL,CAAV,EAAaC,CAAb,EAAgB;AAC3B;AACA;AACA,MAAIK,MAAM,GAAGL,CAAC,CAACM,KAAF,GAAUP,CAAC,CAACO,KAAzB;AACA,MAAIC,GAAG,GAAG;AACRC,IAAAA,YAAY,EAAEH,MADN;AAERI,IAAAA,OAAO,EAAEC,QAAQ,CAACL,MAAM,GAAG,IAAV,EAAgB,EAAhB;AAFT,GAAV;AAIAE,EAAAA,GAAG,CAACI,OAAJ,GAAcD,QAAQ,CAACH,GAAG,CAACE,OAAJ,GAAc,EAAf,EAAmB,EAAnB,CAAtB;AACAF,EAAAA,GAAG,CAACK,KAAJ,GAAYF,QAAQ,CAACH,GAAG,CAACI,OAAJ,GAAc,EAAf,EAAmB,EAAnB,CAApB,CAT2B,CAW3B;;AACA,MAAIE,GAAG,GAAGd,CAAC,CAACe,KAAF,EAAV;AACAP,EAAAA,GAAG,CAACN,KAAJ,GAAYH,QAAQ,CAACe,GAAD,EAAMb,CAAN,CAApB;AACAa,EAAAA,GAAG,GAAGd,CAAC,CAACgB,GAAF,CAAMR,GAAG,CAACN,KAAV,EAAiB,MAAjB,CAAN,CAd2B,CAgB3B;;AACAM,EAAAA,GAAG,CAACS,MAAJ,GAAaT,GAAG,CAACN,KAAJ,GAAY,EAAzB;AACAY,EAAAA,GAAG,GAAGd,CAAC,CAACgB,GAAF,CAAMR,GAAG,CAACS,MAAV,EAAkB,OAAlB,CAAN;AACAT,EAAAA,GAAG,CAACS,MAAJ,IAAcnB,OAAO,CAACgB,GAAD,EAAMb,CAAN,EAAS,OAAT,CAArB,CAnB2B,CAqB3B;AACA;;AACAO,EAAAA,GAAG,CAACU,KAAJ,GAAYV,GAAG,CAACN,KAAJ,GAAY,EAAxB;AACAY,EAAAA,GAAG,GAAGd,CAAC,CAACgB,GAAF,CAAMR,GAAG,CAACU,KAAV,EAAiB,MAAjB,CAAN;AACAV,EAAAA,GAAG,CAACU,KAAJ,IAAapB,OAAO,CAACgB,GAAD,EAAMb,CAAN,EAAS,MAAT,CAApB,CAzB2B,CA2B3B;;AACAO,EAAAA,GAAG,CAACW,IAAJ,GAAWX,GAAG,CAACU,KAAJ,GAAY,CAAvB;AACAJ,EAAAA,GAAG,GAAGd,CAAC,CAACgB,GAAF,CAAMR,GAAG,CAACW,IAAV,EAAgB,KAAhB,CAAN;AACAX,EAAAA,GAAG,CAACW,IAAJ,IAAYrB,OAAO,CAACgB,GAAD,EAAMb,CAAN,EAAS,KAAT,CAAnB;AAEA,SAAOO,GAAP;AACD,CAjCD;;AAkCA,eAAeH,IAAf","sourcesContent":["import diffOne from './one.js'\n\n// don't do anything too fancy here.\n// 2020 - 2019 may be 1 year, or 0 years\n// - '1 year difference' means 366 days during a leap year\nconst fastYear = (a, b) => {\n  let years = b.year() - a.year()\n  // should we decrement it by 1?\n  a = a.year(b.year())\n  if (a.isAfter(b)) {\n    years -= 1\n  }\n  return years\n}\n\n// use a waterfall-method for computing a diff of any 'pre-knowable' units\n// compute years, then compute months, etc..\n// ... then ms-math for any very-small units\nconst diff = function (a, b) {\n  // an hour is always the same # of milliseconds\n  // so these units can be 'pre-calculated'\n  let msDiff = b.epoch - a.epoch\n  let obj = {\n    milliseconds: msDiff,\n    seconds: parseInt(msDiff / 1000, 10)\n  }\n  obj.minutes = parseInt(obj.seconds / 60, 10)\n  obj.hours = parseInt(obj.minutes / 60, 10)\n\n  //do the year\n  let tmp = a.clone()\n  obj.years = fastYear(tmp, b)\n  tmp = a.add(obj.years, 'year')\n\n  //there's always 12 months in a year...\n  obj.months = obj.years * 12\n  tmp = a.add(obj.months, 'month')\n  obj.months += diffOne(tmp, b, 'month')\n\n  // there's always atleast 52 weeks in a year..\n  // (month * 4) isn't as close\n  obj.weeks = obj.years * 52\n  tmp = a.add(obj.weeks, 'week')\n  obj.weeks += diffOne(tmp, b, 'week')\n\n  // there's always atleast 7 days in a week\n  obj.days = obj.weeks * 7\n  tmp = a.add(obj.days, 'day')\n  obj.days += diffOne(tmp, b, 'day')\n\n  return obj\n}\nexport default diff\n"]},"metadata":{},"sourceType":"module"}