"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
Object.defineProperty(exports, "__esModule", { value: true });
var React = require("react");
var react_select_material_ui_1 = require("react-select-material-ui");
var Timezones_1 = require("./Timezones");
var SelectTimezoneMaterialUi = function (_a) {
    var defaultTimezoneName = _a.defaultTimezoneName, onChange = _a.onChange, showTimezoneOffset = _a.showTimezoneOffset, timezoneName = _a.timezoneName, rest = __rest(_a, ["defaultTimezoneName", "onChange", "showTimezoneOffset", "timezoneName"]);
    var handleChange = React.useCallback(function (timezoneOffset, timezoneOption) {
        onChange && onChange(timezoneOption ? timezoneOption.label : '', timezoneOffset);
    }, [onChange]);
    var options = React.useMemo(function () { return (0, Timezones_1.getTimeZoneOptions)(showTimezoneOffset); }, [showTimezoneOffset]);
    var selectProps = {
        msgNoOptionsAvailable: 'No timezone was defined',
        msgNoOptionsMatchFilter: 'No timezone matches the filter',
    };
    var defaultValue = React.useMemo(function () {
        if (defaultTimezoneName === undefined) {
            return undefined;
        }
        var matchingOption = options.find(function (option) { return option.label === defaultTimezoneName; });
        return matchingOption ? matchingOption.value : undefined;
    }, [options, defaultTimezoneName]);
    var value = React.useMemo(function () {
        if (timezoneName === undefined) {
            return undefined;
        }
        var matchingOption = options.find(function (option) { return option.label === timezoneName; });
        return matchingOption ? matchingOption.value : undefined;
    }, [options, timezoneName]);
    console.log({ value: value, defaultValue: defaultValue, options: options });
    return (React.createElement(react_select_material_ui_1.SingleSelect, __assign({ key: timezoneName }, rest, { options: options, defaultValue: defaultValue, value: value, placeholder: "Timezone ...", onChange: handleChange, SelectProps: selectProps })));
};
exports.default = SelectTimezoneMaterialUi;
//# sourceMappingURL=SelectTimezoneMaterialUi.js.map